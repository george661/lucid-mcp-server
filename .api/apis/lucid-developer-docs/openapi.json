{
  "openapi": "3.0.3",
  "info": {
    "title": "Lucid Rest API",
    "description": "Lucid Rest API",
    "termsOfService": "https://lucid.co/developer-terms",
    "license": {
      "name": "Lucid",
      "url": "https://lucid.co/developer-terms"
    },
    "version": "1.0.0"
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": false
  },
  "servers": [
    {
      "url": "https://api.lucid.co"
    }
  ],
  "tags": [
    {
      "name": "OAuth 2.0 Tokens",
      "description": "OAuth 2.0 Tokens"
    },
    {
      "name": "Accounts",
      "description": "The Account APIs enable the retrieval of information about a Lucid account."
    },
    {
      "name": "Legal Holds",
      "description": "Legal Holds"
    },
    {
      "name": "Documents Collaboration",
      "description": "Documents Collaboration"
    },
    {
      "name": "Folders Collaboration",
      "description": "Folders Collaboration"
    },
    {
      "name": "Document Access",
      "description": "Document Access"
    },
    {
      "name": "Document Embedding",
      "description": "Document Embedding"
    },
    {
      "name": "Folders",
      "description": "Folders"
    },
    {
      "name": "Share Link Security",
      "description": "Share Link Security"
    },
    {
      "name": "Documents Sharing",
      "description": "Documents Sharing"
    },
    {
      "name": "Transfer Content",
      "description": "Transfer Content"
    },
    {
      "name": "Users",
      "description": "Users"
    },
    {
      "name": "Unfurling",
      "description": "Unfurling"
    },
    {
      "name": "Embedding Utils",
      "description": "Embedding Utils"
    },
    {
      "name": "Document Picker",
      "description": "Document Picker"
    },
    {
      "name": "Audit Logs",
      "description": "Audit Logs"
    },
    {
      "name": "Teams",
      "description": "Teams"
    }
  ],
  "paths": {
    "/oauth2/token": {
      "post": {
        "summary": "Create or Refresh Access Token",
        "operationId": "createOrRefreshAccessToken",
        "tags": [
          "OAuth 2.0 Tokens"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "required": [
                      "code",
                      "client_id",
                      "client_secret",
                      "grant_type",
                      "redirect_uri"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The authorization code."
                      },
                      "client_id": {
                        "type": "string",
                        "description": "The client ID."
                      },
                      "client_secret": {
                        "type": "string",
                        "description": "The client secret."
                      },
                      "grant_type": {
                        "type": "string",
                        "description": "Value is always \"authorization_code\"."
                      },
                      "redirect_uri": {
                        "type": "string",
                        "description": "The redirect URI used to get the authorization code."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "refresh_token",
                      "client_id",
                      "client_secret",
                      "grant_type"
                    ],
                    "properties": {
                      "refresh_token": {
                        "type": "string",
                        "description": "The current refresh token."
                      },
                      "client_id": {
                        "type": "string",
                        "description": "The client ID."
                      },
                      "client_secret": {
                        "type": "string",
                        "description": "The client secret."
                      },
                      "grant_type": {
                        "type": "string",
                        "description": "Value is always \"refresh_token\"."
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK application/json with the access token and refresh token (if the offline_access scope was included for creating access token).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "Token to be used when making requests with OAuth 2.0 authentication.",
                      "example": "oauth2-Yzh4Y2Q3ZTVhY2FjYjkwOGJlZGNjNjU5NDM2NjgzZmUwMmNmMjkzM..."
                    },
                    "client_id": {
                      "type": "string",
                      "description": "The client ID.",
                      "example": "30VYbvlkqZv-SmJd7fTdpH9B9et2yqZA6Wvi5NY_"
                    },
                    "expires_in": {
                      "type": "number",
                      "description": "The lifetime in seconds of the access token.",
                      "example": 3600
                    },
                    "expires": {
                      "type": "number",
                      "format": "int64",
                      "description": "Time until this token expires (expressed in milliseconds since Unix epoch).",
                      "example": 1605732868411
                    },
                    "refresh_token": {
                      "type": "string",
                      "description": "If the token includes the scope `offline_access`, then a refresh token will be provided.",
                      "example": "oauth2-AVU=-yPcwtzLkusIEnT7D9slQH4g8Ur0MdpUmpT0Z6BSMf6lmesRpTTSBGNniKd"
                    },
                    "scopes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Scopes allowed on this token.",
                      "example": [
                        "lucidchart.document.app",
                        "offline_access"
                      ]
                    },
                    "token_type": {
                      "type": "string",
                      "description": "Value is always \"bearer\".",
                      "example": "bearer"
                    },
                    "user_id": {
                      "type": "number",
                      "description": "ID of the user this token is on behalf of.",
                      "example": 341
                    }
                  },
                  "required": [
                    "access_token",
                    "user_id",
                    "client_id",
                    "expires_in",
                    "expires",
                    "scopes",
                    "token_type"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the client credentials are invalid."
          }
        }
      }
    },
    "/oauth2/token/introspect": {
      "post": {
        "summary": "Introspect Access Token",
        "operationId": "introspectAccessToken",
        "tags": [
          "OAuth 2.0 Tokens"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "client_id",
                  "client_secret",
                  "token"
                ],
                "properties": {
                  "client_id": {
                    "type": "string",
                    "description": "The client ID."
                  },
                  "client_secret": {
                    "type": "string",
                    "description": "The client secret."
                  },
                  "token": {
                    "type": "string",
                    "description": "The token to inspect."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK with information about the token, as specified in OAuth2 Introspect Token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "active": {
                      "type": "boolean",
                      "description": "A boolean value indicating whether or not the token is active.",
                      "example": true
                    },
                    "client_id": {
                      "type": "string",
                      "description": "The client ID.",
                      "example": "30VYbvlkqZv-SmJd7fTdpH9B9et2yqZA6Wvi5NY_"
                    },
                    "expires_in": {
                      "type": "number",
                      "description": "The remaining lifetime in seconds of the access token.",
                      "example": 3500
                    },
                    "expires": {
                      "type": "number",
                      "format": "int64",
                      "description": "Timestamp for when this token expires (expressed in milliseconds since Unix epoch).",
                      "example": 1605732868411
                    },
                    "scope": {
                      "type": "string",
                      "description": "Space-separated list of scopes allowed on this token.",
                      "example": "document.app offline_access"
                    },
                    "token_type": {
                      "type": "string",
                      "description": "The type of token returned (currently, always \"bearer\").",
                      "example": "bearer"
                    },
                    "user_id": {
                      "type": "number",
                      "description": "ID of the user this token is on behalf of.",
                      "example": 1001
                    }
                  },
                  "required": [
                    "active",
                    "user_id",
                    "client_id",
                    "token_type",
                    "scope",
                    "expires_in",
                    "expires"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the client credentials are invalid."
          }
        }
      }
    },
    "/oauth2/token/revoke": {
      "post": {
        "summary": "Revoke Access Token",
        "operationId": "revokeAccessToken",
        "tags": [
          "OAuth 2.0 Tokens"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "client_id",
                  "client_secret",
                  "token"
                ],
                "properties": {
                  "client_id": {
                    "type": "string",
                    "description": "The client ID."
                  },
                  "client_secret": {
                    "type": "string",
                    "description": "The client secret."
                  },
                  "token": {
                    "type": "string",
                    "description": "The token to revoke."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK if the client credentials are valid."
          },
          "403": {
            "description": "Forbidden if the client credentials are invalid."
          }
        }
      }
    },
    "/accounts/me": {
      "get": {
        "summary": "Get Account Information",
        "operationId": "getAccountInformation",
        "tags": [
          "Accounts"
        ],
        "security": [
          {
            "ApiKey": [
              "AccountReadonly"
            ]
          },
          {
            "OAuth2": [
              "account.info"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "The unique ID for the authenticated account."
                    },
                    "name": {
                      "type": "string",
                      "nullable": true,
                      "description": "The name assigned to the account. This field is null if no name has been assigned. Names are usually set by an admin and can be a helpful way to orient a user by informing them about which account an app will interact with."
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/accounts/me/documents/search": {
      "post": {
        "summary": "Search Account Documents",
        "operationId": "SearchAccountDocuments",
        "tags": [
          "Document Access"
        ],
        "security": [
          {
            "ApiKeys": [
              "DocumentAdmin"
            ]
          },
          {
            "Oauth2": [
              "lucidchart.document.content:admin.readonly",
              "lucidspark.document.content:admin.readonly",
              "lucidscale.document.content:admin.readonly"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "header",
            "name": "Lucid-Request-As",
            "required": true,
            "description": "If the requesting user is an account owner or document admin with the required permissions and they make the request\nwith the value of “admin” as this header and include an admin scope, the request will be made using their admin\npermissions.\n",
            "schema": {
              "type": "string"
            },
            "example": "admin"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userIds": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "description": "List of userIds to include in the search. If no ids are provided, it will search across the entire account."
                  },
                  "ownedByUsers": {
                    "type": "boolean",
                    "description": "Truthy if search results should only include documents owned by users specified by userIds. Ignored if no userIds are provided."
                  },
                  "documentIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "description": "List of documentIds to filter by."
                  },
                  "classificationIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "description": "List of classificationIds to filter by."
                  },
                  "statusIds": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "description": "List of statusIds to filter by."
                  },
                  "createdStartTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Start of range to filter documents by created time."
                  },
                  "createdEndTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "End of range to filter documents by created time."
                  },
                  "lastModifiedStartTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Start of range to filter documents by last modified time."
                  },
                  "lastModifiedEndTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "End of range to filter documents by last modified time."
                  },
                  "product": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "lucidchart",
                        "lucidscale",
                        "lucidspark"
                      ],
                      "example": "lucidchart"
                    },
                    "description": "Array of Lucid Suite products to filter by. Default value assumes all valid products for the given scopes.",
                    "default": [
                      "lucidchart",
                      "lucidscale",
                      "lucidspark"
                    ]
                  },
                  "keywords": {
                    "type": "string",
                    "description": "Keyword(s) to search against document content and titles. When provided, results will be sorted by relevance to keyword search."
                  },
                  "documentLocation": {
                    "type": "string",
                    "enum": [
                      "team folders",
                      "users",
                      "deleted"
                    ],
                    "description": "Specify to search for documents owned by team folders, owned by users, or deleted"
                  },
                  "externalAccess": {
                    "type": "string",
                    "enum": [
                      "any",
                      "external-collaborators",
                      "external-links"
                    ],
                    "description": "Specify to search for documents with either “any” type of external access, “external-collaborators”, or \"external-links\""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "With paginated list of Account Documents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique ID of the document",
                      "example": "110808fd-4553-4316-bccf-4f25ff59a532"
                    },
                    "title": {
                      "type": "string",
                      "description": "Title of the document",
                      "example": "document title"
                    },
                    "adminViewUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "Link to view the document",
                      "example": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/adminView"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of when the document was created",
                      "example": "2019-04-22T13:47:23Z"
                    },
                    "owner": {
                      "type": "object",
                      "properties": {
                        "ownerType": {
                          "type": "string",
                          "description": "user or account"
                        },
                        "id": {
                          "type": "number",
                          "description": "userId or accountId"
                        }
                      }
                    },
                    "lastModified": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of when the document was last modified",
                      "example": "2020-06-26T16:29:37Z"
                    },
                    "trashed": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "If defined, the timestamp when the document was moved to the trash",
                      "example": null
                    },
                    "customTags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of any custom tags assigned to the document",
                      "example": [
                        "in progress"
                      ]
                    },
                    "product": {
                      "type": "string",
                      "enum": [
                        "lucidchart",
                        "lucidscale",
                        "lucidspark"
                      ],
                      "example": "lucidchart"
                    },
                    "status": {
                      "type": "string",
                      "nullable": true,
                      "description": "Current assigned status of the document",
                      "example": "Complete"
                    },
                    "classification": {
                      "type": "string",
                      "nullable": true,
                      "description": "Current assigned classification of the document",
                      "example": "Private"
                    },
                    "parent": {
                      "type": "integer",
                      "nullable": true,
                      "description": "ID of the parent folder",
                      "example": 123456788
                    }
                  },
                  "required": [
                    "documentId",
                    "title",
                    "adminViewUrl",
                    "created",
                    "owner",
                    "lastModified",
                    "customTags",
                    "product"
                  ],
                  "example": {
                    "documentId": "110808fd-4553-4316-bccf-4f25ff59a532",
                    "title": "document title",
                    "adminViewUrl": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/adminView",
                    "created": "2019-04-22T13:47:23Z",
                    "owner": {
                      "ownerType": "user",
                      "id": "123456"
                    },
                    "lastModified": "2020-06-26T16:29:37Z",
                    "customTags": [
                      "in progress"
                    ],
                    "product": "lucidchart",
                    "status": "Complete",
                    "parent": 123456788,
                    "trashed": null
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request if incorrect format"
          },
          "403": {
            "description": "Forbidden if \"product\" query parameter is used and the token’s scopes do not contain the matching readonly scope for each product, or account does not have access to the API"
          },
          "429": {
            "description": "Too Many Requests if account makes more than 300 requests in 5 seconds"
          }
        }
      }
    },
    "/accounts/me/legalHolds": {
      "post": {
        "summary": "Create Legal Hold",
        "operationId": "createLegalHold",
        "tags": [
          "Legal Holds"
        ],
        "security": [
          {
            "ApiKey": [
              "LegalHoldEdit"
            ]
          },
          {
            "OAuth2": [
              "account.legalhold"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string",
                    "description": "Title that should be given to the newly created legal hold. Max length of title is 80 characters."
                  },
                  "StartTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time that the legal hold should start. Must not be in the past."
                  },
                  "EndTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time that the legal hold should end. End time must be greater than or equal to 24 hours after the start time."
                  },
                  "Description": {
                    "type": "string",
                    "description": "Description that should be given to the newly created legal hold. Max length of description is 256 characters."
                  },
                  "Keywords": {
                    "type": "string",
                    "description": "Keyword(s) to search against document content and titles. Note: When provided, only relevant results will be added to the legal hold. Empty strings will be treated the same as when no keywords are provided. Max length of keywords is 400 characters."
                  }
                },
                "required": [
                  "Title",
                  "StartTime",
                  "EndTime"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "With the newly created legal hold.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "LegalHoldId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique ID of the legal hold.",
                      "example": "110808fd-4553-4316-bccf-4f25ff59a532"
                    },
                    "AccountId": {
                      "type": "number",
                      "description": "Unique ID for the creating admin’s account.",
                      "example": 100
                    },
                    "StartTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Start time of the legal hold.",
                      "example": "2025-01-01T16:18:26Z"
                    },
                    "EndTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "End time of the legal hold.",
                      "example": "2025-12-01T16:18:26Z"
                    },
                    "Title": {
                      "type": "string",
                      "description": "Title of the legal hold.",
                      "example": "New Legal Hold"
                    },
                    "Description": {
                      "type": "string",
                      "description": "Description of the legal hold.",
                      "example": "Legal hold example"
                    },
                    "Keywords": {
                      "type": "string",
                      "description": "Keyword(s) of the legal hold.",
                      "example": "alpha"
                    },
                    "Created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time that the legal hold was created.",
                      "example": "2024-12-01T16:25:44Z"
                    },
                    "Modified": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time that the legal hold was last modified.",
                      "example": "2024-12-01T16:25:44Z"
                    }
                  },
                  "required": [
                    "LegalHoldId",
                    "AccountId",
                    "StartTime",
                    "EndTime",
                    "Title",
                    "Created",
                    "Modified"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Incorrect format or invalid parameters."
          },
          "403": {
            "description": "Account does not have permission to access the API."
          }
        }
      },
      "get": {
        "summary": "Get Legal Holds",
        "operationId": "getLegalHolds",
        "tags": [
          "Legal Holds"
        ],
        "security": [
          {
            "ApiKey": [
              "LegalHoldReadonly"
            ]
          },
          {
            "OAuth2": [
              "account.legalhold",
              "account.legalhold:readonly"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "With paginated list of legal holds.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "LegalHoldId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique ID of the legal hold.",
                        "example": "110808fd-4553-4316-bccf-4f25ff59a532"
                      },
                      "AccountId": {
                        "type": "number",
                        "description": "Unique ID for the creating admin’s account.",
                        "example": 100
                      },
                      "StartTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start time of the legal hold.",
                        "example": "2025-01-01T16:18:26Z"
                      },
                      "EndTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End time of the legal hold.",
                        "example": "2025-12-01T16:18:26Z"
                      },
                      "Title": {
                        "type": "string",
                        "description": "Title of the legal hold.",
                        "example": "New Legal Hold"
                      },
                      "Description": {
                        "type": "string",
                        "description": "Description of the legal hold.",
                        "example": "Legal hold example"
                      },
                      "Keywords": {
                        "type": "string",
                        "description": "Keyword(s) of the legal hold.",
                        "example": "alpha"
                      },
                      "Created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time that the legal hold was created.",
                        "example": "2024-12-01T16:25:44Z"
                      },
                      "Modified": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time that the legal hold was last modified.",
                        "example": "2024-12-01T16:25:44Z"
                      }
                    },
                    "required": [
                      "LegalHoldId",
                      "AccountId",
                      "StartTime",
                      "EndTime",
                      "Title",
                      "Created",
                      "Modified"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Account does not have permission to access the API."
          }
        }
      }
    },
    "/accounts/me/legalHolds/{legalHoldId}/users/add": {
      "post": {
        "summary": "Add Legal Hold Users",
        "operationId": "addLegalHoldUsers",
        "tags": [
          "Legal Holds"
        ],
        "security": [
          {
            "ApiKey": [
              "LegalHoldEdit"
            ]
          },
          {
            "OAuth2": [
              "account.legalhold",
              "account.legalhold.users"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "legalHoldId",
            "required": true,
            "description": "Unique ID of the legal hold.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Users": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "description": "List of user ids for users to be put on the specified legal hold. Users must belong to the admin’s account. Max number of users per request is 200."
                  }
                },
                "required": [
                  "Users"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Users were correctly added to the legal hold."
          },
          "400": {
            "description": "Incorrect format or invalid parameters."
          },
          "403": {
            "description": "Account does not have permission to access the API."
          },
          "404": {
            "description": "The specified legal hold id was not found."
          }
        }
      }
    },
    "/accounts/me/legalHolds/{legalHoldId}/users/remove": {
      "post": {
        "summary": "Remove Legal Hold Users",
        "operationId": "removeLegalHoldUsers",
        "tags": [
          "Legal Holds"
        ],
        "security": [
          {
            "ApiKey": [
              "LegalHoldEdit"
            ]
          },
          {
            "OAuth2": [
              "account.legalhold",
              "account.legalhold.users"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "legalHoldId",
            "required": true,
            "description": "Unique ID of the legal hold.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Users": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "description": "List of user ids for users to be removed from the specified legal hold. Users must belong to the admin’s account. Max number of users per request is 200."
                  }
                },
                "required": [
                  "Users"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Users were correctly removed from the legal hold."
          },
          "400": {
            "description": "Incorrect format or invalid parameters."
          },
          "403": {
            "description": "Account does not have permission to access the API."
          },
          "404": {
            "description": "The specified legal hold id was not found."
          }
        }
      }
    },
    "/accounts/me/legalHolds/{legalHoldId}": {
      "patch": {
        "summary": "Edit Legal Hold",
        "operationId": "editLegalHold",
        "tags": [
          "Legal Holds"
        ],
        "security": [
          {
            "ApiKey": [
              "LegalHoldEdit"
            ]
          },
          {
            "OAuth2": [
              "account.legalhold"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "legalHoldId",
            "required": true,
            "description": "Unique ID of the legal hold.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string",
                    "description": "The new title for the legal hold (the existing one will be replaced). Max length of title is 80 characters."
                  },
                  "StartTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The new time that the legal hold will begin. Must be at least 24 hours before the end time and cannot be in the past. Cannot be changed if the legal hold has already started."
                  },
                  "EndTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The new time that the legal hold will end and documents on the legal hold will be released. Must be at least 24 hours after the start time and cannot be in the past."
                  },
                  "Description": {
                    "type": "string",
                    "description": "The new description for the legal hold (the existing one will be replaced). Max length of description is 256 characters."
                  },
                  "Keywords": {
                    "type": "string",
                    "description": "The new keywords for the legal hold (any existing ones will be replaced). Max length of keywords is 400 characters. Cannot be changed if the legal hold has already started."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "With the legal hold that was successfully modified.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "LegalHoldId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique ID of the legal hold.",
                      "example": "110808fd-4553-4316-bccf-4f25ff59a532"
                    },
                    "AccountId": {
                      "type": "number",
                      "description": "Unique ID for the creating admin’s account.",
                      "example": 100
                    },
                    "StartTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Start time of the legal hold.",
                      "example": "2025-01-01T16:18:26Z"
                    },
                    "EndTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "End time of the legal hold.",
                      "example": "2025-12-01T16:18:26Z"
                    },
                    "Title": {
                      "type": "string",
                      "description": "Title of the legal hold.",
                      "example": "New Legal Hold"
                    },
                    "Description": {
                      "type": "string",
                      "description": "Description of the legal hold.",
                      "example": "Legal hold example"
                    },
                    "Keywords": {
                      "type": "string",
                      "description": "Keyword(s) of the legal hold.",
                      "example": "alpha"
                    },
                    "Created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time that the legal hold was created.",
                      "example": "2024-12-01T16:25:44Z"
                    },
                    "Modified": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time that the legal hold was last modified.",
                      "example": "2024-12-01T16:25:44Z"
                    }
                  },
                  "required": [
                    "LegalHoldId",
                    "AccountId",
                    "StartTime",
                    "EndTime",
                    "Title",
                    "Created",
                    "Modified"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Incorrect format or invalid parameters."
          },
          "403": {
            "description": "Account does not have permission to access the API."
          },
          "404": {
            "description": "The specified legal hold id was not found."
          }
        }
      }
    },
    "/accounts/me/legalHolds/{legalHoldId}/release": {
      "post": {
        "summary": "Release Legal Hold",
        "operationId": "releaseLegalHold",
        "tags": [
          "Legal Holds"
        ],
        "security": [
          {
            "ApiKey": [
              "LegalHoldEdit"
            ]
          },
          {
            "OAuth2": [
              "account.legalhold"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "legalHoldId",
            "required": true,
            "description": "Unique ID of the legal hold.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "With the legal hold that was released.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "LegalHoldId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique ID of the legal hold.",
                      "example": "110808fd-4553-4316-bccf-4f25ff59a532"
                    },
                    "AccountId": {
                      "type": "number",
                      "description": "Unique ID for the creating admin’s account.",
                      "example": 100
                    },
                    "StartTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Start time of the legal hold.",
                      "example": "2025-01-01T16:18:26Z"
                    },
                    "EndTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "End time of the legal hold.",
                      "example": "2025-12-01T16:18:26Z"
                    },
                    "Title": {
                      "type": "string",
                      "description": "Title of the legal hold.",
                      "example": "New Legal Hold"
                    },
                    "Description": {
                      "type": "string",
                      "description": "Description of the legal hold.",
                      "example": "Legal hold example"
                    },
                    "Keywords": {
                      "type": "string",
                      "description": "Keyword(s) of the legal hold.",
                      "example": "alpha"
                    },
                    "Created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time that the legal hold was created.",
                      "example": "2024-12-01T16:25:44Z"
                    },
                    "Modified": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time that the legal hold was last modified.",
                      "example": "2024-12-01T16:25:44Z"
                    }
                  },
                  "required": [
                    "LegalHoldId",
                    "AccountId",
                    "StartTime",
                    "EndTime",
                    "Title",
                    "Created",
                    "Modified"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Account does not have permission to access the API."
          },
          "404": {
            "description": "The specified legal hold id was not found."
          }
        }
      }
    },
    "/accounts/me/legalHolds/{legalHoldId}/users": {
      "get": {
        "summary": "Get Legal Hold Users",
        "operationId": "getLegalHoldUsers",
        "tags": [
          "Legal Holds"
        ],
        "security": [
          {
            "ApiKey": [
              "LegalHoldReadonly"
            ]
          },
          {
            "OAuth2": [
              "account.legalhold",
              "account.legalhold:readonly",
              "account.legalhold.users",
              "account.legalhold.users:readonly"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "legalHoldId",
            "required": true,
            "description": "Unique ID of the legal hold.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "With paginated list of Users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "number",
                        "example": 100,
                        "description": "The unique ID for the user's account."
                      },
                      "email": {
                        "type": "string",
                        "example": "john-doe@example.com",
                        "description": "The user's email."
                      },
                      "name": {
                        "type": "string",
                        "example": "John Doe",
                        "description": "The user's full name."
                      },
                      "userId": {
                        "type": "number",
                        "example": 101,
                        "description": "The unique ID for the user."
                      },
                      "username": {
                        "type": "string",
                        "example": "johndoe",
                        "description": "The user's username."
                      },
                      "roles": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "billing-admin",
                            "team-admin",
                            "document-admin",
                            "template-admin"
                          ],
                          "description": "Allows various administrative actions."
                        },
                        "example": [
                          "billing-admin",
                          "team-admin"
                        ],
                        "description": "A list of administrative roles assigned to the user."
                      }
                    },
                    "description": "A standard representation of a user."
                  }
                }
              }
            }
          },
          "403": {
            "description": "Account does not have permission to access the API."
          },
          "404": {
            "description": "The specified legal hold id was not found."
          }
        }
      }
    },
    "/accounts/me/legalHoldDocuments/{legalHoldId}": {
      "get": {
        "summary": "Get Legal Hold Documents",
        "operationId": "getLegalHoldDocuments",
        "tags": [
          "Legal Holds"
        ],
        "security": [
          {
            "ApiKey": [
              "LegalHoldReadonly"
            ]
          },
          {
            "OAuth2": [
              "account.legalhold",
              "account.legalhold:readonly"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "legalHoldId",
            "required": true,
            "description": "Unique ID of the legal hold.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "With paginated list of Documents.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "documentId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique ID of the document",
                        "example": "110808fd-4553-4316-bccf-4f25ff59a532"
                      },
                      "title": {
                        "type": "string",
                        "description": "Title of the document",
                        "example": "document title"
                      },
                      "editUrl": {
                        "type": "string",
                        "format": "uri",
                        "description": "Link to edit the document",
                        "example": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/edit"
                      },
                      "viewUrl": {
                        "type": "string",
                        "format": "uri",
                        "description": "Link to view the document",
                        "example": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/view"
                      },
                      "version": {
                        "type": "integer",
                        "description": "Most recent version",
                        "example": 101
                      },
                      "pageCount": {
                        "type": "integer",
                        "description": "Number of pages within the document",
                        "example": 5
                      },
                      "canEdit": {
                        "type": "boolean",
                        "description": "If requesting user can edit the document",
                        "example": false
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time of when the document was created",
                        "example": "2019-04-22T13:47:23Z"
                      },
                      "creatorId": {
                        "type": "integer",
                        "description": "ID of user who created and owns the document",
                        "example": 12345
                      },
                      "lastModified": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time of when the document was last modified",
                        "example": "2020-06-26T16:29:37Z"
                      },
                      "lastModifiedUserId": {
                        "type": "integer",
                        "description": "ID of user who most recently modified the document",
                        "example": 54321
                      },
                      "customAttributes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "singleLineText",
                                "multiLineText",
                                "singleSelectDropdown",
                                "multiSelectDropdown",
                                "webLink",
                                "numericalRange",
                                "hierarchicalDropdown"
                              ],
                              "description": "The custom attribute type",
                              "example": "singleLineText"
                            },
                            "name": {
                              "type": "string",
                              "description": "Title of the custom attribute. hierarchicalDropdown attributes do not have names.",
                              "example": "Sample Label"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Custom data key"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "Custom data value"
                                          }
                                        },
                                        "description": "Object representing a key-value pair of data.",
                                        "required": [
                                          "name",
                                          "value"
                                        ],
                                        "example": {
                                          "name": "City",
                                          "value": "New York"
                                        }
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "description": "The value assigned to the custom attribute. The type of this value is determined by the Attribute Type.",
                              "example": null
                            }
                          },
                          "description": "Object representing a custom attribute value for a document.",
                          "required": [
                            "type"
                          ]
                        },
                        "description": "List of any custom attributes belonging to the document. Populated for Enterprise Accounts only.",
                        "example": []
                      },
                      "customTags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of any custom tags assigned to the document",
                        "example": [
                          "in progress"
                        ]
                      },
                      "product": {
                        "type": "string",
                        "enum": [
                          "lucidchart",
                          "lucidscale",
                          "lucidspark"
                        ],
                        "example": "lucidchart"
                      },
                      "status": {
                        "type": "string",
                        "nullable": true,
                        "description": "Current assigned status of the document",
                        "example": "Complete"
                      },
                      "classification": {
                        "type": "string",
                        "nullable": true,
                        "description": "Current assigned classification of the document",
                        "example": "Private"
                      },
                      "trashed": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "If defined, the timestamp when the document was moved to the trash",
                        "example": null
                      },
                      "parent": {
                        "type": "integer",
                        "nullable": true,
                        "description": "ID of the parent folder",
                        "example": null
                      },
                      "owner": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "description": "Id of either the user or the account, depending on the type of the document user resource.",
                            "example": 123456
                          },
                          "type": {
                            "type": "string",
                            "description": "Specifies if the owner resource is referring to a user or an account. Value will be either \"user\" or \"account\".",
                            "example": "user"
                          },
                          "name": {
                            "type": "string",
                            "description": "Full name of the user that owns this document. This field is excluded if this document is owned by an account.",
                            "example": "John Doe"
                          }
                        }
                      }
                    },
                    "required": [
                      "documentId",
                      "title",
                      "editUrl",
                      "viewUrl",
                      "version",
                      "pageCount",
                      "canEdit",
                      "created",
                      "creatorId",
                      "lastModified",
                      "lastModifiedUserId",
                      "customAttributes",
                      "customTags",
                      "product"
                    ],
                    "example": {
                      "documentId": "110808fd-4553-4316-bccf-4f25ff59a532",
                      "title": "document title",
                      "editUrl": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/edit",
                      "viewUrl": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/view",
                      "version": 101,
                      "pageCount": 5,
                      "canEdit": false,
                      "created": "2019-04-22T13:47:23Z",
                      "creatorId": 12345,
                      "lastModified": "2020-06-26T16:29:37Z",
                      "lastModifiedUserId": 54321,
                      "customAttributes": [],
                      "customTags": [
                        "in progress"
                      ],
                      "product": "lucidchart",
                      "status": "Complete",
                      "classification": "Private",
                      "trashed": null,
                      "parent": null,
                      "owner": {
                        "id": 123456,
                        "type": "user",
                        "name": "John Doe"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Account does not have permission to access the API."
          },
          "404": {
            "description": "The specified legal hold id was not found."
          }
        }
      }
    },
    "/documents/{id}/shares/users/{userId}": {
      "get": {
        "summary": "Get Document User Collaborator",
        "operationId": "getDocumentUserCollaborators",
        "tags": [
          "Documents Collaboration"
        ],
        "security": [
          {
            "ApiKey": [
              "DocumentReadonly"
            ]
          },
          {
            "OAuth2": [
              "lucidchart.document.content.share.collaborator:readonly",
              "lucidchart.document.app.picker.share.collaborator:readonly",
              "lucidchart.document.app.folder",
              "lucidscale.document.content.share.collaborator:readonly",
              "lucidscale.document.app.picker.share.collaborator:readonly",
              "lucidscale.document.app.folder",
              "lucidspark.document.content.share.collaborator:readonly",
              "lucidspark.document.app.picker.share.collaborator:readonly",
              "lucidspark.document.app.folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the document.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "110808fd-4553-4316-bccf-4f25ff59a532"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "ID of the user to retrieve collaborator settings for.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK with a Document User Collaborator Resource containing information about the user's collaboration settings.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Document ID"
                    },
                    "userId": {
                      "type": "integer",
                      "description": "User ID"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "owner",
                        "editandshare",
                        "edit",
                        "comment",
                        "view"
                      ],
                      "description": "The Collaborator Role on the document or folder"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the collaboration was created"
                    }
                  },
                  "required": [
                    "documentId",
                    "userId",
                    "role",
                    "created"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the app making the request does not have permission to the document, or if the document has been deleted, or does not exist."
          },
          "404": {
            "description": "Not Found when a user with the specified ID can not be found or does not have collaborator access to the document."
          }
        }
      },
      "put": {
        "summary": "Create/Update Document User Collaborator",
        "operationId": "putDocumentUserCollaborators",
        "tags": [
          "Documents Collaboration"
        ],
        "security": [
          {
            "ApiKey": [
              "DocumentEdit"
            ]
          },
          {
            "OAuth2": [
              "lucidchart.document.content.share.collaborator",
              "lucidchart.document.app.picker.share.collaborator",
              "lucidchart.document.app.folder",
              "lucidscale.document.content.share.collaborator",
              "lucidscale.document.app.picker.share.collaborator",
              "lucidscale.document.app.folder",
              "lucidspark.document.content.share.collaborator",
              "lucidspark.document.app.picker.share.collaborator",
              "lucidspark.document.app.folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the document.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "110808fd-4553-4316-bccf-4f25ff59a532"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "ID of the user to retrieve collaborator settings for.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "enum": [
                      "owner",
                      "editandshare",
                      "edit",
                      "comment",
                      "view"
                    ],
                    "example": "comment",
                    "description": "The Collaborator Role to assign to the user for this document."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK when updating an existing Document User Collaborator. Contains the updated Document User Collaborator Resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Document ID"
                    },
                    "userId": {
                      "type": "integer",
                      "description": "User ID"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "owner",
                        "editandshare",
                        "edit",
                        "comment",
                        "view"
                      ],
                      "description": "The Collaborator Role on the document or folder"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the collaboration was created"
                    }
                  },
                  "required": [
                    "documentId",
                    "userId",
                    "role",
                    "created"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created when creating a new Document User Collaborator. Contains the new Document User Collaborator Resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Document ID"
                    },
                    "userId": {
                      "type": "integer",
                      "description": "User ID"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "owner",
                        "editandshare",
                        "edit",
                        "comment",
                        "view"
                      ],
                      "description": "The Collaborator Role on the document or folder"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the collaboration was created"
                    }
                  },
                  "required": [
                    "documentId",
                    "userId",
                    "role",
                    "created"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the token does not have permission to the document, or if the document has been deleted or does not exist."
          }
        }
      },
      "delete": {
        "summary": "Delete Document User Collaborator",
        "operationId": "deleteDocumentUserCollaborators",
        "tags": [
          "Documents Collaboration"
        ],
        "security": [
          {
            "ApiKey": [
              "DocumentEdit"
            ]
          },
          {
            "OAuth2": [
              "lucidchart.document.content.share.collaborator",
              "lucidchart.document.app.picker.share.collaborator",
              "lucidchart.document.app.folder",
              "lucidscale.document.content.share.collaborator",
              "lucidscale.document.app.picker.share.collaborator",
              "lucidscale.document.app.folder",
              "lucidspark.document.content.share.collaborator",
              "lucidspark.document.app.picker.share.collaborator",
              "lucidspark.document.app.folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the document.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "110808fd-4553-4316-bccf-4f25ff59a532"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "ID of the user to retrieve collaborator settings for.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content when the user's collaborator record on the document was successfully deleted."
          },
          "403": {
            "description": "Forbidden\n* if the token does not have permission to the document, or if the document has been deleted or does not exist.\n* when attempting to revoke the collaboration for the document owner.\n"
          }
        }
      }
    },
    "/documents/{id}/shares/users": {
      "get": {
        "summary": "List Document User Collaborators",
        "operationId": "listDocumentUserCollaborators",
        "tags": [
          "Documents Collaboration"
        ],
        "security": [
          {
            "ApiKey": [
              "DocumentReadonly"
            ]
          },
          {
            "OAuth2": [
              "lucidchart.document.content.share.collaborator:readonly",
              "lucidchart.document.app.picker.share.collaborator:readonly",
              "lucidchart.document.app.folder",
              "lucidscale.document.content.share.collaborator:readonly",
              "lucidscale.document.app.picker.share.collaborator:readonly",
              "lucidscale.document.app.folder",
              "lucidspark.document.content.share.collaborator:readonly",
              "lucidspark.document.app.picker.share.collaborator:readonly",
              "lucidspark.document.app.folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the document.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK with an array of Document User Collaborator Resources for the document's collaborators.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "documentId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Document ID"
                      },
                      "userId": {
                        "type": "integer",
                        "description": "User ID"
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "owner",
                          "editandshare",
                          "edit",
                          "comment",
                          "view"
                        ],
                        "description": "The Collaborator Role on the document or folder"
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time when the collaboration was created"
                      }
                    },
                    "required": [
                      "documentId",
                      "userId",
                      "role",
                      "created"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the token does not have permission to the document, or if the document has been deleted or does not exist."
          }
        }
      }
    },
    "/documents/{id}/shares/teams/{teamId}": {
      "get": {
        "summary": "Get Document Team Collaborator",
        "operationId": "getDocumentTeamCollaborator",
        "tags": [
          "Documents Collaboration"
        ],
        "security": [
          {
            "ApiKey": [
              "DocumentReadonly"
            ]
          },
          {
            "OAuth2": [
              "lucidchart.document.app.folder",
              "lucidchart.document.app.picker.share.collaborator:readonly",
              "lucidchart.document.content.share.collaborator:readonly",
              "lucidscale.document.app.folder",
              "lucidscale.document.app.picker.share.collaborator:readonly",
              "lucidscale.document.content.share.collaborator:readonly",
              "lucidspark.document.app.folder",
              "lucidspark.document.app.picker.share.collaborator:readonly",
              "lucidspark.document.content.share.collaborator:readonly"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the document.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "110808fd-4553-4316-bccf-4f25ff59a532"
          },
          {
            "in": "path",
            "name": "teamId",
            "required": true,
            "description": "ID of the team to retrieve collaborator settings for.",
            "schema": {
              "type": "number"
            },
            "example": 99
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns a Document Team Collaborator Resource containing information about the team's collaboration settings.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Document ID"
                    },
                    "teamId": {
                      "type": "integer",
                      "description": "Team ID"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "owner",
                        "editandshare",
                        "edit",
                        "comment",
                        "view"
                      ],
                      "description": "The Collaborator Role on the document or folder"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the collaboration was created"
                    }
                  },
                  "required": [
                    "documentId",
                    "teamId",
                    "role",
                    "created"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Occurs if the app making the request does not have permission for the document, or if the document has been deleted or does not exist."
          },
          "404": {
            "description": "Not Found. Occurs when a team with the specified ID can not be found or does not have collaborator access to the document."
          }
        }
      },
      "put": {
        "summary": "Create/Update Document Team Collaborator",
        "operationId": "putDocumentTeamCollaborator",
        "tags": [
          "Documents Collaboration"
        ],
        "security": [
          {
            "ApiKey": [
              "DocumentEdit"
            ]
          },
          {
            "OAuth2": [
              "lucidchart.document.app.folder",
              "lucidchart.document.app.picker.share.collaborator",
              "lucidchart.document.content.share.collaborator",
              "lucidscale.document.app.folder",
              "lucidscale.document.app.picker.share.collaborator",
              "lucidscale.document.content.share.collaborator",
              "lucidspark.document.app.folder",
              "lucidspark.document.app.picker.share.collaborator",
              "lucidspark.document.content.share.collaborator"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the document.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "110808fd-4553-4316-bccf-4f25ff59a532"
          },
          {
            "in": "path",
            "name": "teamId",
            "required": true,
            "description": "ID of the team to retrieve collaborator settings for.",
            "schema": {
              "type": "number"
            },
            "example": 99
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "enum": [
                      "owner",
                      "editandshare",
                      "edit",
                      "comment",
                      "view"
                    ],
                    "example": "comment",
                    "description": "The Collaborator Role to assign to the user for this document."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK when updating an existing Document Team Collaborator. Contains the updated Document Team Collaborator Resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Document ID"
                    },
                    "teamId": {
                      "type": "integer",
                      "description": "Team ID"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "owner",
                        "editandshare",
                        "edit",
                        "comment",
                        "view"
                      ],
                      "description": "The Collaborator Role on the document or folder"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the collaboration was created"
                    }
                  },
                  "required": [
                    "documentId",
                    "teamId",
                    "role",
                    "created"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created when creating a new Document Team Collaborator. Contains the new Document Team Collaborator Resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Document ID"
                    },
                    "teamId": {
                      "type": "integer",
                      "description": "Team ID"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "owner",
                        "editandshare",
                        "edit",
                        "comment",
                        "view"
                      ],
                      "description": "The Collaborator Role on the document or folder"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the collaboration was created"
                    }
                  },
                  "required": [
                    "documentId",
                    "teamId",
                    "role",
                    "created"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the token does not have permission to the document, or if the document has been deleted or does not exist."
          }
        }
      },
      "delete": {
        "summary": "Delete Document Team Collaborator",
        "operationId": "deleteDocumentTeamCollaborator",
        "tags": [
          "Documents Collaboration"
        ],
        "security": [
          {
            "ApiKey": [
              "DocumentEdit"
            ]
          },
          {
            "OAuth2": [
              "lucidchart.document.app.folder",
              "lucidchart.document.app.picker.share.collaborator",
              "lucidchart.document.content.share.collaborator",
              "lucidscale.document.app.folder",
              "lucidscale.document.app.picker.share.collaborator",
              "lucidscale.document.content.share.collaborator",
              "lucidspark.document.app.folder",
              "lucidspark.document.app.picker.share.collaborator",
              "lucidspark.document.content.share.collaborator"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the document.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "110808fd-4553-4316-bccf-4f25ff59a532"
          },
          {
            "in": "path",
            "name": "teamId",
            "required": true,
            "description": "ID of the team to retrieve collaborator settings for.",
            "schema": {
              "type": "number"
            },
            "example": 99
          }
        ],
        "responses": {
          "204": {
            "description": "No Content. The team's collaborator record on the document was successfully deleted."
          },
          "403": {
            "description": "Forbidden\n* if the token does not have permission to the document, or if the document has been deleted or does not exist.\n* when attempting to revoke the collaboration for the document owner.\n"
          }
        }
      }
    },
    "/folders/{id}/shares/users/{userId}": {
      "get": {
        "summary": "Get Folder User Collaborator",
        "operationId": "getFolderUserCollaborators",
        "tags": [
          "Folders Collaboration"
        ],
        "security": [
          {
            "ApiKey": [
              "FolderReadonly"
            ]
          },
          {
            "OAuth2": [
              "folder:readonly"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the folder.",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "ID of the user to retrieve collaborator settings for.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK with a Folder User Collaborator Resource containing information about the user's collaboration settings.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "folderId": {
                      "type": "integer",
                      "description": "Folder ID"
                    },
                    "userId": {
                      "type": "integer",
                      "description": "User ID"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "owner",
                        "editandshare",
                        "edit",
                        "comment",
                        "view"
                      ],
                      "description": "The Collaborator Role on the document or folder"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the collaboration was created"
                    }
                  },
                  "required": [
                    "folderId",
                    "userId",
                    "role",
                    "created"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the app making the request does not have permission to the folder, or if the folder has been deleted, or does not exist."
          },
          "404": {
            "description": "Not Found when a user with the specified ID cannot be found or does not have collaborator access to the folder."
          }
        }
      },
      "put": {
        "summary": "Create/Update Folder User Collaborator",
        "operationId": "putFolderUserCollaborator",
        "tags": [
          "Folders Collaboration"
        ],
        "security": [
          {
            "ApiKey": [
              "FolderEdit"
            ]
          },
          {
            "OAuth2": [
              "folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the folder.",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "ID of the user whose role to create or modify.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "enum": [
                      "editandshare",
                      "edit",
                      "comment",
                      "view"
                    ],
                    "example": "comment",
                    "description": "The Collaborator Role to assign to the user for this folder."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK when updating an existing Folder User Collaborator. Contains the updated Folder User Collaborator Resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "folderId": {
                      "type": "integer",
                      "description": "Folder ID"
                    },
                    "userId": {
                      "type": "integer",
                      "description": "User ID"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "owner",
                        "editandshare",
                        "edit",
                        "comment",
                        "view"
                      ],
                      "description": "The Collaborator Role on the document or folder"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the collaboration was created"
                    }
                  },
                  "required": [
                    "folderId",
                    "userId",
                    "role",
                    "created"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created when creating a new Folder User Collaborator. Contains the new Folder User Collaborator Resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "folderId": {
                      "type": "integer",
                      "description": "Folder ID"
                    },
                    "userId": {
                      "type": "integer",
                      "description": "User ID"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "owner",
                        "editandshare",
                        "edit",
                        "comment",
                        "view"
                      ],
                      "description": "The Collaborator Role on the document or folder"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the collaboration was created"
                    }
                  },
                  "required": [
                    "folderId",
                    "userId",
                    "role",
                    "created"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request when trying to add or update a Folder User Collaborator to have the \"owner\" role."
          },
          "403": {
            "description": "Forbidden if the token does not have permission to the folder, or if the folder has been deleted or does not exist."
          }
        }
      },
      "delete": {
        "summary": "Delete Folder User Collaborator",
        "operationId": "deleteFolderUserCollaborator",
        "tags": [
          "Folders Collaboration"
        ],
        "security": [
          {
            "ApiKey": [
              "FolderEdit"
            ]
          },
          {
            "OAuth2": [
              "folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the folder.",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "ID of the user to delete collaborator settings for.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content when the user's collaborator record on the folder was successfully deleted."
          },
          "403": {
            "description": "Forbidden\n* if the token does not have permission to the folder, or if the folder has been deleted or does not exist.\n* when attempting to revoke the collaboration for the folder owner.\n"
          }
        }
      }
    },
    "/folders/{id}/shares/users": {
      "get": {
        "summary": "List Folder User Collaborators",
        "operationId": "listFolderUserCollaborators",
        "tags": [
          "Folders Collaboration"
        ],
        "security": [
          {
            "ApiKey": [
              "FolderReadonly"
            ]
          },
          {
            "OAuth2": [
              "folder:readonly"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the folder.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK with an array of Folder User Collaborator Resources for the folder's collaborators.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "folderId": {
                        "type": "integer",
                        "description": "Folder ID"
                      },
                      "userId": {
                        "type": "integer",
                        "description": "User ID"
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "owner",
                          "editandshare",
                          "edit",
                          "comment",
                          "view"
                        ],
                        "description": "The Collaborator Role on the document or folder"
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time when the collaboration was created"
                      }
                    },
                    "required": [
                      "folderId",
                      "userId",
                      "role",
                      "created"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the token does not have permission to the folder, or if the folder has been deleted or does not exist."
          }
        }
      }
    },
    "/folders/{id}/shares/groups/{groupId}": {
      "get": {
        "summary": "Get Folder Group Collaborator",
        "operationId": "getFolderGroupCollaborator",
        "tags": [
          "Folders Collaboration"
        ],
        "security": [
          {
            "ApiKey": [
              "FolderReadonly"
            ]
          },
          {
            "OAuth2": [
              "folder",
              "folder:readonly"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Folder ID.",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "description": "Group ID.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK with a Folder Group Collaborator Resource containing information about the group's collaboration access on the folder.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "folderId": {
                      "type": "integer",
                      "description": "Folder ID"
                    },
                    "groupId": {
                      "type": "integer",
                      "description": "Group ID"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "owner",
                        "editandshare",
                        "edit",
                        "comment",
                        "view"
                      ],
                      "description": "The Collaborator Role on the document or folder"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the collaboration was created"
                    }
                  },
                  "required": [
                    "folderId",
                    "groupId",
                    "role",
                    "created"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the token does not have access to the folder, or if the folder has been deleted or does not exist."
          },
          "404": {
            "description": "Not Found when the group does not have direct collaborator access to the folder."
          }
        }
      },
      "put": {
        "summary": "Create/Update Folder Group Collaborator",
        "operationId": "updateFolderGroupCollaborator",
        "tags": [
          "Folders Collaboration"
        ],
        "security": [
          {
            "ApiKey": [
              "FolderEdit"
            ]
          },
          {
            "OAuth2": [
              "folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Folder ID.",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "description": "Group ID.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "enum": [
                      "editandshare",
                      "edit",
                      "comment",
                      "view"
                    ],
                    "example": "comment",
                    "description": "The Collaborator Role to assign to the group for this folder."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK when updating an existing Folder Group Collaborator. Contains the updated Folder Group Collaborator Resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "folderId": {
                      "type": "integer",
                      "description": "Folder ID"
                    },
                    "groupId": {
                      "type": "integer",
                      "description": "Group ID"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "owner",
                        "editandshare",
                        "edit",
                        "comment",
                        "view"
                      ],
                      "description": "The Collaborator Role on the document or folder"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the collaboration was created"
                    }
                  },
                  "required": [
                    "folderId",
                    "groupId",
                    "role",
                    "created"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created when creating a new Folder Group Collaborator. Contains the new Folder Group Collaborator Resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "folderId": {
                      "type": "integer",
                      "description": "Folder ID"
                    },
                    "groupId": {
                      "type": "integer",
                      "description": "Group ID"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "owner",
                        "editandshare",
                        "edit",
                        "comment",
                        "view"
                      ],
                      "description": "The Collaborator Role on the document or folder"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the collaboration was created"
                    }
                  },
                  "required": [
                    "folderId",
                    "groupId",
                    "role",
                    "created"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request when trying to add or update a Folder Group Collaborator to have the \"owner\" role."
          },
          "403": {
            "description": "Forbidden if the token does not have permission to the folder, or if the folder or group have been deleted or do not exist."
          }
        }
      },
      "delete": {
        "summary": "Delete Folder Group Collaborator",
        "operationId": "deleteFolderGroupCollaborator",
        "tags": [
          "Folders Collaboration"
        ],
        "security": [
          {
            "ApiKey": [
              "FolderEdit"
            ]
          },
          {
            "OAuth2": [
              "folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Folder ID.",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "description": "Group ID.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content when the group's collaborator record on the folder was successfully deleted."
          },
          "403": {
            "description": "Forbidden if the token does not have permission to the folder, or if the folder has been deleted or does not exist."
          }
        }
      }
    },
    "/folders/{id}/shares/groups": {
      "get": {
        "summary": "List Folder Group Collaborators",
        "operationId": "listFolderGroupCollaborators",
        "tags": [
          "Folders Collaboration"
        ],
        "security": [
          {
            "ApiKey": [
              "FolderReadonly"
            ]
          },
          {
            "OAuth2": [
              "folder",
              "folder:readonly"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Folder ID.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK with an array of Folder Group Collaborator Resources containing the folder's collaborators, as well as Pagination headers.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "folderId": {
                        "type": "integer",
                        "description": "Folder ID"
                      },
                      "groupId": {
                        "type": "integer",
                        "description": "Group ID"
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "owner",
                          "editandshare",
                          "edit",
                          "comment",
                          "view"
                        ],
                        "description": "The Collaborator Role on the document or folder"
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time when the collaboration was created"
                      }
                    },
                    "required": [
                      "folderId",
                      "groupId",
                      "role",
                      "created"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the token does not have access to the folder, or if the folder has been deleted or does not exist."
          }
        }
      }
    },
    "/folders/{id}/shares/teams/{teamId}": {
      "get": {
        "summary": "Get Folder Team Collaborator",
        "operationId": "getFolderTeamCollaborator",
        "tags": [
          "Folders Collaboration"
        ],
        "security": [
          {
            "ApiKey": [
              "FolderReadonly"
            ]
          },
          {
            "OAuth2": [
              "folder:readonly"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the folder.",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "teamId",
            "required": true,
            "description": "ID of the team to retrieve collaborator settings for.",
            "schema": {
              "type": "number"
            },
            "example": 99
          }
        ],
        "responses": {
          "200": {
            "description": "OK when updating an existing Folder User Collaborator. Contains the updated Folder User Collaborator Resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "folderId": {
                      "type": "integer",
                      "description": "Folder ID"
                    },
                    "teamId": {
                      "type": "integer",
                      "description": "Team ID"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "owner",
                        "editandshare",
                        "edit",
                        "comment",
                        "view"
                      ],
                      "description": "The Collaborator Role on the document or folder"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the collaboration was created"
                    }
                  },
                  "required": [
                    "folderId",
                    "teamId",
                    "role",
                    "created"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden when the app making the request does not have permission for the folder, or if the folder has been deleted or does not exist."
          },
          "404": {
            "description": "Not Found when a team with the specified ID cannot be found or does not have collaborator access to the folder."
          }
        }
      },
      "put": {
        "summary": "Create/Update Folder Team Collaborator",
        "operationId": "putFolderTeamCollaborator",
        "tags": [
          "Folders Collaboration"
        ],
        "security": [
          {
            "ApiKey": [
              "FolderEdit"
            ]
          },
          {
            "OAuth2": [
              "folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the folder.",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "teamId",
            "required": true,
            "description": "ID of the team whose role is to be created or modified.",
            "schema": {
              "type": "number"
            },
            "example": 99
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "enum": [
                      "editandshare",
                      "edit",
                      "comment",
                      "view"
                    ],
                    "example": "comment",
                    "description": "The Collaborator Role to assign to the team for this folder."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK when updating an existing Folder Team Collaborator. Contains the updated Folder Team Collaborator Resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "folderId": {
                      "type": "integer",
                      "description": "Folder ID"
                    },
                    "teamId": {
                      "type": "integer",
                      "description": "Team ID"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "owner",
                        "editandshare",
                        "edit",
                        "comment",
                        "view"
                      ],
                      "description": "The Collaborator Role on the document or folder"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the collaboration was created"
                    }
                  },
                  "required": [
                    "folderId",
                    "teamId",
                    "role",
                    "created"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created when creating a new Folder Team Collaborator. Contains the new Folder Team Collaborator Resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "folderId": {
                      "type": "integer",
                      "description": "Folder ID"
                    },
                    "teamId": {
                      "type": "integer",
                      "description": "Team ID"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "owner",
                        "editandshare",
                        "edit",
                        "comment",
                        "view"
                      ],
                      "description": "The Collaborator Role on the document or folder"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the collaboration was created"
                    }
                  },
                  "required": [
                    "folderId",
                    "teamId",
                    "role",
                    "created"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request when trying to add or update a collaborator to have the \"owner\" role."
          },
          "403": {
            "description": "Forbidden when the token does not have permission for the folder, or if the folder has been deleted or does not exist."
          }
        }
      },
      "delete": {
        "summary": "Delete Folder Team Collaborator",
        "operationId": "deleteFolderTeamCollaborator",
        "tags": [
          "Folders Collaboration"
        ],
        "security": [
          {
            "ApiKey": [
              "FolderEdit"
            ]
          },
          {
            "OAuth2": [
              "folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the folder.",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "teamId",
            "required": true,
            "description": "ID of the team to delete collaborator settings for.",
            "schema": {
              "type": "number"
            },
            "example": 99
          }
        ],
        "responses": {
          "204": {
            "description": "No Content when the team's collaborator record on the folder was successfully deleted."
          },
          "403": {
            "description": "Forbidden\n* if the token does not have permission to the folder, or if the folder has been deleted or does not exist.\n* when attempting to revoke the collaboration for the folder owner.\n"
          }
        }
      }
    },
    "/documents": {
      "post": {
        "summary": "Create/Copy/Import Document",
        "operationId": "createOrCopyOrImportDocument",
        "tags": [
          "Document Access"
        ],
        "security": [
          {
            "ApiKey": [
              "DocumentEdit"
            ]
          },
          {
            "OAuth2": [
              "lucidchart.document.content",
              "lucidchart.document.app.folder",
              "lucidspark.document.content",
              "lucidspark.document.app.folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title that should be given to the newly created or copied document.\nRequired for Creating or Copying a document.\n"
                  },
                  "product": {
                    "type": "string",
                    "enum": [
                      "lucidchart",
                      "lucidscale",
                      "lucidspark"
                    ],
                    "example": "lucidchart",
                    "description": "\"lucidchart\" or \"lucidspark\".\nRequired for Creating a document.\n"
                  },
                  "parent": {
                    "type": "number",
                    "description": "ID of the folder to create the new document in.\nOptionally used for Creating or Copying a document.\n"
                  },
                  "template": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the document to copy.\nRequired for Copying a document.\n"
                  },
                  "extensionBootstrapData": {
                    "type": "object",
                    "properties": {
                      "packageId": {
                        "type": "string",
                        "description": "Id of the extension package which will consume this data",
                        "example": "74672098-cf36-492c-b8e6-2c4233549cd3"
                      },
                      "extensionName": {
                        "type": "string",
                        "description": "Name of the editor extension which will consume this data. Note this is the name field of an editor extension found in your manifest.json file.",
                        "example": "sheets-adapter"
                      },
                      "minimumVersion": {
                        "type": "string",
                        "description": "Minimum version of the extension package which will consume this data",
                        "example": "1.4.0"
                      },
                      "data": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Data to provide to the extension package",
                        "example": {
                          "a": 1,
                          "b": 2
                        }
                      }
                    },
                    "required": [
                      "packageId",
                      "extensionName",
                      "minimumVersion",
                      "data"
                    ],
                    "description": "Bootstrap data can be attached to the created document to be consumed by a specific Extension Package."
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The file data as multipart/form-data. Generally, the application or client used to make the API request will handle reading in the file data and setting the multi-part boundaries.\nRequired for Importing a document.\n"
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of file provided for import. Supported types are listed in the above chart.\nRequired for Importing a document.\n"
                  },
                  "product": {
                    "type": "string",
                    "enum": [
                      "lucidchart",
                      "lucidscale",
                      "lucidspark"
                    ],
                    "example": "lucidchart",
                    "description": "\"lucidchart\" or \"lucidspark\".\nRequired for Importing a document.\n"
                  },
                  "title": {
                    "type": "string",
                    "description": "Title that should be given to the newly imported document.\nOptionally used for Importing a document.\n"
                  },
                  "parent": {
                    "type": "number",
                    "description": "ID of the folder to create the new document in.\nOptionally used for Importing a document.\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created with Document resource containing information about the newly created or copied document.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique ID of the document",
                      "example": "110808fd-4553-4316-bccf-4f25ff59a532"
                    },
                    "title": {
                      "type": "string",
                      "description": "Title of the document",
                      "example": "document title"
                    },
                    "editUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "Link to edit the document",
                      "example": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/edit"
                    },
                    "viewUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "Link to view the document",
                      "example": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/view"
                    },
                    "version": {
                      "type": "integer",
                      "description": "Most recent version",
                      "example": 101
                    },
                    "pageCount": {
                      "type": "integer",
                      "description": "Number of pages within the document",
                      "example": 5
                    },
                    "canEdit": {
                      "type": "boolean",
                      "description": "If requesting user can edit the document",
                      "example": false
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of when the document was created",
                      "example": "2019-04-22T13:47:23Z"
                    },
                    "creatorId": {
                      "type": "integer",
                      "description": "ID of user who created and owns the document",
                      "example": 12345
                    },
                    "lastModified": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of when the document was last modified",
                      "example": "2020-06-26T16:29:37Z"
                    },
                    "lastModifiedUserId": {
                      "type": "integer",
                      "description": "ID of user who most recently modified the document",
                      "example": 54321
                    },
                    "customAttributes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "singleLineText",
                              "multiLineText",
                              "singleSelectDropdown",
                              "multiSelectDropdown",
                              "webLink",
                              "numericalRange",
                              "hierarchicalDropdown"
                            ],
                            "description": "The custom attribute type",
                            "example": "singleLineText"
                          },
                          "name": {
                            "type": "string",
                            "description": "Title of the custom attribute. hierarchicalDropdown attributes do not have names.",
                            "example": "Sample Label"
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Custom data key"
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Custom data value"
                                        }
                                      },
                                      "description": "Object representing a key-value pair of data.",
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "example": {
                                        "name": "City",
                                        "value": "New York"
                                      }
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ]
                                }
                              }
                            ],
                            "description": "The value assigned to the custom attribute. The type of this value is determined by the Attribute Type.",
                            "example": null
                          }
                        },
                        "description": "Object representing a custom attribute value for a document.",
                        "required": [
                          "type"
                        ]
                      },
                      "description": "List of any custom attributes belonging to the document. Populated for Enterprise Accounts only.",
                      "example": []
                    },
                    "customTags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of any custom tags assigned to the document",
                      "example": [
                        "in progress"
                      ]
                    },
                    "product": {
                      "type": "string",
                      "enum": [
                        "lucidchart",
                        "lucidscale",
                        "lucidspark"
                      ],
                      "example": "lucidchart"
                    },
                    "status": {
                      "type": "string",
                      "nullable": true,
                      "description": "Current assigned status of the document",
                      "example": "Complete"
                    },
                    "classification": {
                      "type": "string",
                      "nullable": true,
                      "description": "Current assigned classification of the document",
                      "example": "Private"
                    },
                    "trashed": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "If defined, the timestamp when the document was moved to the trash",
                      "example": null
                    },
                    "parent": {
                      "type": "integer",
                      "nullable": true,
                      "description": "ID of the parent folder",
                      "example": null
                    },
                    "owner": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "description": "Id of either the user or the account, depending on the type of the document user resource.",
                          "example": 123456
                        },
                        "type": {
                          "type": "string",
                          "description": "Specifies if the owner resource is referring to a user or an account. Value will be either \"user\" or \"account\".",
                          "example": "user"
                        },
                        "name": {
                          "type": "string",
                          "description": "Full name of the user that owns this document. This field is excluded if this document is owned by an account.",
                          "example": "John Doe"
                        }
                      }
                    }
                  },
                  "required": [
                    "documentId",
                    "title",
                    "editUrl",
                    "viewUrl",
                    "version",
                    "pageCount",
                    "canEdit",
                    "created",
                    "creatorId",
                    "lastModified",
                    "lastModifiedUserId",
                    "customAttributes",
                    "customTags",
                    "product"
                  ],
                  "example": {
                    "documentId": "110808fd-4553-4316-bccf-4f25ff59a532",
                    "title": "document title",
                    "editUrl": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/edit",
                    "viewUrl": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/view",
                    "version": 101,
                    "pageCount": 5,
                    "canEdit": false,
                    "created": "2019-04-22T13:47:23Z",
                    "creatorId": 12345,
                    "lastModified": "2020-06-26T16:29:37Z",
                    "lastModifiedUserId": 54321,
                    "customAttributes": [],
                    "customTags": [
                      "in progress"
                    ],
                    "product": "lucidchart",
                    "status": "Complete",
                    "classification": "Private",
                    "trashed": null,
                    "parent": null,
                    "owner": {
                      "id": 123456,
                      "type": "user",
                      "name": "John Doe"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.\n* if the user doesn't have access to or permissions to create within the specified parent folder.\n* if the user doesn't have permissions to access the specified template to create from.\n* if the token authorizing the request has the document.app scope with a specified parent folder that is outside the app folder's folder tree.\n* if the token does not have the correct scope for the import type.\n* if the token requesting a board import does not have a Lucidspark Enterprise License.\n"
          },
          "415": {
            "description": "Unsupported Media Type. The file type provided is not supported (Import Document operation)."
          }
        }
      }
    },
    "/documents/{id}": {
      "get": {
        "summary": "Get/Export Document",
        "operationId": "getOrExportDocument",
        "tags": [
          "Document Access"
        ],
        "security": [
          {
            "ApiKey": [
              "DocumentReadonly"
            ]
          },
          {
            "OAuth2": [
              "lucidchart.document.content:readonly",
              "lucidchart.document.app.picker:readonly",
              "lucidchart.document.app.folder",
              "lucidscale.document.content:readonly",
              "lucidscale.document.app.picker:readonly",
              "lucidscale.document.app.folder",
              "lucidspark.document.content:readonly",
              "lucidspark.document.app.picker:readonly",
              "lucidspark.document.app.folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the document to be retrieved or exported.",
            "example": "110808fd-4553-4316-bccf-4f25ff59a532"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "When using the Export Document API, the format of the exported document is set via the `Accept` header. This header contains up to two parts, separated by a semicolon:\n  * A prefix stating which type of image you would like the document exported as. Options are:\n    * `image/jpeg`\n    * `image/png`\n  * Optionally, you can also supply the dots per inch (DPI) you want the exported image to have. If this value is not provided, a default of 160 will be used. For example:\n    * `image/png;dpi=256`\n    * `image/jpeg;dpi=64`\n",
            "required": false,
            "schema": {
              "type": "string",
              "example": "image/png"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "1-based page index of the document to export. Defaults to the first page. Only a single page is allowed. Optional for export operation. Cannot be provided when pageId is provided.",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "pageId",
            "in": "query",
            "description": "Specific page of the document to export. Only a single page is allowed. Optional for export operation. Cannot be provided when page is provided.",
            "example": "J~65X_X714o2",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "crop",
            "in": "query",
            "description": "Specifies the crop settings for the document export. Optional for export operation.\nPossible values are\n  * `x, y, width, height` - Crop to the specified region (in pixels) on the page. Example crop=1000,300,30,7\n    * Note: The region (in pixels) is accurate to the number of pixels on the canvas. The number of pixels of the outputted image will only match the crop window at a DPI of 160.\n  * `content` - Crop to page content. Example crop=content\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK with Document resource containing information about the requested document or the binary data in the response body for exports. The Accept header specifies the type of image for exports.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique ID of the document",
                      "example": "110808fd-4553-4316-bccf-4f25ff59a532"
                    },
                    "title": {
                      "type": "string",
                      "description": "Title of the document",
                      "example": "document title"
                    },
                    "editUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "Link to edit the document",
                      "example": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/edit"
                    },
                    "viewUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "Link to view the document",
                      "example": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/view"
                    },
                    "version": {
                      "type": "integer",
                      "description": "Most recent version",
                      "example": 101
                    },
                    "pageCount": {
                      "type": "integer",
                      "description": "Number of pages within the document",
                      "example": 5
                    },
                    "canEdit": {
                      "type": "boolean",
                      "description": "If requesting user can edit the document",
                      "example": false
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of when the document was created",
                      "example": "2019-04-22T13:47:23Z"
                    },
                    "creatorId": {
                      "type": "integer",
                      "description": "ID of user who created and owns the document",
                      "example": 12345
                    },
                    "lastModified": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of when the document was last modified",
                      "example": "2020-06-26T16:29:37Z"
                    },
                    "lastModifiedUserId": {
                      "type": "integer",
                      "description": "ID of user who most recently modified the document",
                      "example": 54321
                    },
                    "customAttributes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "singleLineText",
                              "multiLineText",
                              "singleSelectDropdown",
                              "multiSelectDropdown",
                              "webLink",
                              "numericalRange",
                              "hierarchicalDropdown"
                            ],
                            "description": "The custom attribute type",
                            "example": "singleLineText"
                          },
                          "name": {
                            "type": "string",
                            "description": "Title of the custom attribute. hierarchicalDropdown attributes do not have names.",
                            "example": "Sample Label"
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Custom data key"
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Custom data value"
                                        }
                                      },
                                      "description": "Object representing a key-value pair of data.",
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "example": {
                                        "name": "City",
                                        "value": "New York"
                                      }
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ]
                                }
                              }
                            ],
                            "description": "The value assigned to the custom attribute. The type of this value is determined by the Attribute Type.",
                            "example": null
                          }
                        },
                        "description": "Object representing a custom attribute value for a document.",
                        "required": [
                          "type"
                        ]
                      },
                      "description": "List of any custom attributes belonging to the document. Populated for Enterprise Accounts only.",
                      "example": []
                    },
                    "customTags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of any custom tags assigned to the document",
                      "example": [
                        "in progress"
                      ]
                    },
                    "product": {
                      "type": "string",
                      "enum": [
                        "lucidchart",
                        "lucidscale",
                        "lucidspark"
                      ],
                      "example": "lucidchart"
                    },
                    "status": {
                      "type": "string",
                      "nullable": true,
                      "description": "Current assigned status of the document",
                      "example": "Complete"
                    },
                    "classification": {
                      "type": "string",
                      "nullable": true,
                      "description": "Current assigned classification of the document",
                      "example": "Private"
                    },
                    "trashed": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "If defined, the timestamp when the document was moved to the trash",
                      "example": null
                    },
                    "parent": {
                      "type": "integer",
                      "nullable": true,
                      "description": "ID of the parent folder",
                      "example": null
                    },
                    "owner": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "description": "Id of either the user or the account, depending on the type of the document user resource.",
                          "example": 123456
                        },
                        "type": {
                          "type": "string",
                          "description": "Specifies if the owner resource is referring to a user or an account. Value will be either \"user\" or \"account\".",
                          "example": "user"
                        },
                        "name": {
                          "type": "string",
                          "description": "Full name of the user that owns this document. This field is excluded if this document is owned by an account.",
                          "example": "John Doe"
                        }
                      }
                    }
                  },
                  "required": [
                    "documentId",
                    "title",
                    "editUrl",
                    "viewUrl",
                    "version",
                    "pageCount",
                    "canEdit",
                    "created",
                    "creatorId",
                    "lastModified",
                    "lastModifiedUserId",
                    "customAttributes",
                    "customTags",
                    "product"
                  ],
                  "example": {
                    "documentId": "110808fd-4553-4316-bccf-4f25ff59a532",
                    "title": "document title",
                    "editUrl": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/edit",
                    "viewUrl": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/view",
                    "version": 101,
                    "pageCount": 5,
                    "canEdit": false,
                    "created": "2019-04-22T13:47:23Z",
                    "creatorId": 12345,
                    "lastModified": "2020-06-26T16:29:37Z",
                    "lastModifiedUserId": 54321,
                    "customAttributes": [],
                    "customTags": [
                      "in progress"
                    ],
                    "product": "lucidchart",
                    "status": "Complete",
                    "classification": "Private",
                    "trashed": null,
                    "parent": null,
                    "owner": {
                      "id": 123456,
                      "type": "user",
                      "name": "John Doe"
                    }
                  }
                }
              },
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. More than one page and/or pageId was provided for export."
          },
          "403": {
            "description": "Forbidden. The app making the request does not have permission to the document, or if the document has been deleted or does not exist."
          },
          "404": {
            "description": "Not Found. The specified page or pageID could not be found for export."
          },
          "406": {
            "description": "Not Acceptable. The specified image type is not supported for export."
          },
          "429": {
            "description": "Too Many Requests. If the account makes more than 75 requests in 5 seconds."
          }
        }
      }
    },
    "/documents/{id}/trash": {
      "post": {
        "summary": "Trash Document",
        "operationId": "trashDocument",
        "tags": [
          "Document Access"
        ],
        "security": [
          {
            "ApiKey": [
              "DocumentEdit"
            ]
          },
          {
            "OAuth2": [
              "lucidchart.document.content",
              "lucidchart.document.app.folder",
              "lucidscale.document.content",
              "lucidscale.document.app.folder",
              "lucidspark.document.content",
              "lucidspark.document.app.folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the document to be moved to the trash.",
            "example": "110808fd-4553-4316-bccf-4f25ff59a532"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content when the document is successfully moved into the trash or is already trashed."
          },
          "403": {
            "description": "Forbidden. if the app making the request does not have permission to the document, or if the document has been deleted or does not exist."
          }
        }
      }
    },
    "/documents/search": {
      "post": {
        "summary": "Search Documents",
        "operationId": "searchDocuments",
        "tags": [
          "Document Access"
        ],
        "security": [
          {
            "ApiKey": [
              "DocumentReadonly"
            ]
          },
          {
            "OAuth2": [
              "lucidchart.document.content:readonly",
              "lucidscale.document.content:readonly",
              "lucidspark.document.content:readonly"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "lucidchart",
                        "lucidscale",
                        "lucidspark"
                      ],
                      "example": "lucidchart"
                    },
                    "description": "Array of Lucid Suite products to filter by. Default value assumes all valid products for the given scopes.",
                    "default": [
                      "lucidchart",
                      "lucidscale",
                      "lucidspark"
                    ]
                  },
                  "createdStartTime": {
                    "type": "string",
                    "format": "date-time",
                    "default": "0001-01-01T00:00:00Z",
                    "description": "Date and time to filter documents that have been created after. Default value assumes the beginning of time."
                  },
                  "createdEndTime": {
                    "type": "string",
                    "format": "date-time",
                    "default": "now",
                    "description": "Date and time to filter documents that have been created before. Default value assumes the current instant of time."
                  },
                  "lastModifiedAfter": {
                    "type": "string",
                    "format": "date-time",
                    "default": "0001-01-01T00:00:00Z",
                    "description": "Date and time to filter documents that have been modified after. Default value assumes the beginning of time."
                  },
                  "keywords": {
                    "type": "string",
                    "description": "Keywords to search against document content and titles. This field is truncated to 400 characters. When provided, results will be sorted by relevance to keyword search."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK with an array of Document Resource objects containing information about documents the authenticated user has access to.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Unique ID of the document",
                      "example": "110808fd-4553-4316-bccf-4f25ff59a532"
                    },
                    "title": {
                      "type": "string",
                      "description": "Title of the document",
                      "example": "document title"
                    },
                    "editUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "Link to edit the document",
                      "example": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/edit"
                    },
                    "viewUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "Link to view the document",
                      "example": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/view"
                    },
                    "version": {
                      "type": "integer",
                      "description": "Most recent version",
                      "example": 101
                    },
                    "pageCount": {
                      "type": "integer",
                      "description": "Number of pages within the document",
                      "example": 5
                    },
                    "canEdit": {
                      "type": "boolean",
                      "description": "If requesting user can edit the document",
                      "example": false
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of when the document was created",
                      "example": "2019-04-22T13:47:23Z"
                    },
                    "creatorId": {
                      "type": "integer",
                      "description": "ID of user who created and owns the document",
                      "example": 12345
                    },
                    "lastModified": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of when the document was last modified",
                      "example": "2020-06-26T16:29:37Z"
                    },
                    "lastModifiedUserId": {
                      "type": "integer",
                      "description": "ID of user who most recently modified the document",
                      "example": 54321
                    },
                    "customAttributes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "singleLineText",
                              "multiLineText",
                              "singleSelectDropdown",
                              "multiSelectDropdown",
                              "webLink",
                              "numericalRange",
                              "hierarchicalDropdown"
                            ],
                            "description": "The custom attribute type",
                            "example": "singleLineText"
                          },
                          "name": {
                            "type": "string",
                            "description": "Title of the custom attribute. hierarchicalDropdown attributes do not have names.",
                            "example": "Sample Label"
                          },
                          "value": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Custom data key"
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Custom data value"
                                        }
                                      },
                                      "description": "Object representing a key-value pair of data.",
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "example": {
                                        "name": "City",
                                        "value": "New York"
                                      }
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ]
                                }
                              }
                            ],
                            "description": "The value assigned to the custom attribute. The type of this value is determined by the Attribute Type.",
                            "example": null
                          }
                        },
                        "description": "Object representing a custom attribute value for a document.",
                        "required": [
                          "type"
                        ]
                      },
                      "description": "List of any custom attributes belonging to the document. Populated for Enterprise Accounts only.",
                      "example": []
                    },
                    "customTags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of any custom tags assigned to the document",
                      "example": [
                        "in progress"
                      ]
                    },
                    "product": {
                      "type": "string",
                      "enum": [
                        "lucidchart",
                        "lucidscale",
                        "lucidspark"
                      ],
                      "example": "lucidchart"
                    },
                    "status": {
                      "type": "string",
                      "nullable": true,
                      "description": "Current assigned status of the document",
                      "example": "Complete"
                    },
                    "classification": {
                      "type": "string",
                      "nullable": true,
                      "description": "Current assigned classification of the document",
                      "example": "Private"
                    },
                    "trashed": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "If defined, the timestamp when the document was moved to the trash",
                      "example": null
                    },
                    "parent": {
                      "type": "integer",
                      "nullable": true,
                      "description": "ID of the parent folder",
                      "example": null
                    },
                    "owner": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "description": "Id of either the user or the account, depending on the type of the document user resource.",
                          "example": 123456
                        },
                        "type": {
                          "type": "string",
                          "description": "Specifies if the owner resource is referring to a user or an account. Value will be either \"user\" or \"account\".",
                          "example": "user"
                        },
                        "name": {
                          "type": "string",
                          "description": "Full name of the user that owns this document. This field is excluded if this document is owned by an account.",
                          "example": "John Doe"
                        }
                      }
                    }
                  },
                  "required": [
                    "documentId",
                    "title",
                    "editUrl",
                    "viewUrl",
                    "version",
                    "pageCount",
                    "canEdit",
                    "created",
                    "creatorId",
                    "lastModified",
                    "lastModifiedUserId",
                    "customAttributes",
                    "customTags",
                    "product"
                  ],
                  "example": {
                    "documentId": "110808fd-4553-4316-bccf-4f25ff59a532",
                    "title": "document title",
                    "editUrl": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/edit",
                    "viewUrl": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/view",
                    "version": 101,
                    "pageCount": 5,
                    "canEdit": false,
                    "created": "2019-04-22T13:47:23Z",
                    "creatorId": 12345,
                    "lastModified": "2020-06-26T16:29:37Z",
                    "lastModifiedUserId": 54321,
                    "customAttributes": [],
                    "customTags": [
                      "in progress"
                    ],
                    "product": "lucidchart",
                    "status": "Complete",
                    "classification": "Private",
                    "trashed": null,
                    "parent": null,
                    "owner": {
                      "id": 123456,
                      "type": "user",
                      "name": "John Doe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request if the request does not contain a body."
          },
          "403": {
            "description": "Forbidden if the product query parameter is used and the token's scopes do not contain the matching readonly scope for each product."
          },
          "429": {
            "description": "Too Many Requests if the account makes more than 300 requests in 5 seconds."
          }
        }
      }
    },
    "/documents/{id}/contents": {
      "get": {
        "summary": "Document Contents",
        "operationId": "getDocumentContent",
        "tags": [
          "Document Access"
        ],
        "security": [
          {
            "ApiKey": [
              "DocumentReadonly"
            ]
          },
          {
            "OAuth2": [
              "lucidchart.document.content:readonly",
              "lucidchart.document.app.picker:readonly",
              "lucidchart.document.app.folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the document to have contents retrieved.",
            "example": "110808fd-4553-4316-bccf-4f25ff59a532"
          }
        ],
        "responses": {
          "200": {
            "description": "OK with Document Content resource containing information about the requested document's content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Document ID",
                      "example": "8e7b19ec-27ff-40e3-beb8-03f51b1661b2"
                    },
                    "title": {
                      "type": "string",
                      "description": "Title of the document",
                      "example": "document title"
                    },
                    "product": {
                      "type": "string",
                      "enum": [
                        "lucidchart",
                        "lucidscale",
                        "lucidspark"
                      ],
                      "example": "lucidchart"
                    },
                    "pages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Page ID",
                            "example": "YGcM5DNywbTK"
                          },
                          "title": {
                            "type": "string",
                            "description": "Title of the page",
                            "example": "document page title"
                          },
                          "index": {
                            "type": "integer",
                            "description": "0-Based index of the page in the document",
                            "example": 0
                          },
                          "items": {
                            "description": "Shapes, Lines, Groups, and Layers on the page",
                            "type": "object",
                            "properties": {
                              "shapes": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Shape ID",
                                      "example": "VTAu-oQASzul"
                                    },
                                    "class": {
                                      "type": "string",
                                      "description": "A unique string representing the type of the shape (e.g., ProcessBlock)",
                                      "example": "ProcessBlock"
                                    },
                                    "textAreas": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "description": "Text area label",
                                            "example": "Text"
                                          },
                                          "text": {
                                            "type": "string",
                                            "description": "Text displayed in the text area. This is plain text. All formatting has been removed & formulas evaluated.",
                                            "example": "Start here"
                                          }
                                        },
                                        "description": "Object representing a text area on a Shape or Line.",
                                        "required": [
                                          "label",
                                          "text"
                                        ]
                                      }
                                    },
                                    "customData": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Custom data key"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "Custom data value"
                                          }
                                        },
                                        "description": "Object representing a key-value pair of data.",
                                        "required": [
                                          "name",
                                          "value"
                                        ],
                                        "example": {
                                          "name": "City",
                                          "value": "New York"
                                        }
                                      }
                                    },
                                    "linkedData": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "collection_id": {
                                            "type": "string",
                                            "description": "Id of the collection containing the data",
                                            "example": "ABAuwlf2BTy8"
                                          },
                                          "data": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Custom data key"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "description": "Custom data value"
                                                }
                                              },
                                              "description": "Object representing a key-value pair of data.",
                                              "required": [
                                                "name",
                                                "value"
                                              ],
                                              "example": {
                                                "name": "City",
                                                "value": "New York"
                                              }
                                            },
                                            "description": "Key-value pairs from the dataset"
                                          },
                                          "primaryKeyValue": {
                                            "type": "string",
                                            "description": "The value of the primary key of the dataset",
                                            "example": "Pkey Value"
                                          }
                                        },
                                        "description": "Object representing data linked to a resource on a document.",
                                        "required": [
                                          "data",
                                          "primaryKeyValue"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "class",
                                    "textAreas",
                                    "customData",
                                    "linkedData"
                                  ],
                                  "description": "Object representing a shape placed on a page of a document. Note that the ItemId of a shape is unique across all groups, layers, shapes, and lines."
                                },
                                "description": "Array of Shape resources"
                              },
                              "lines": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Line ID",
                                      "example": "VTAuwAeC0_R1"
                                    },
                                    "endpoint1": {
                                      "type": "object",
                                      "properties": {
                                        "style": {
                                          "type": "string",
                                          "description": "Line end style",
                                          "example": "Arrow"
                                        },
                                        "connectedTo": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "Id of shape or line the line is connected to",
                                          "example": null
                                        }
                                      },
                                      "description": "Object representing the endpoint of a Line.",
                                      "required": [
                                        "style",
                                        "connectedTo"
                                      ]
                                    },
                                    "endpoint2": {
                                      "type": "object",
                                      "properties": {
                                        "style": {
                                          "type": "string",
                                          "description": "Line end style",
                                          "example": "Arrow"
                                        },
                                        "connectedTo": {
                                          "type": "string",
                                          "nullable": true,
                                          "description": "Id of shape or line the line is connected to",
                                          "example": null
                                        }
                                      },
                                      "description": "Object representing the endpoint of a Line.",
                                      "required": [
                                        "style",
                                        "connectedTo"
                                      ]
                                    },
                                    "textAreas": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "description": "Text area label",
                                            "example": "Text"
                                          },
                                          "text": {
                                            "type": "string",
                                            "description": "Text displayed in the text area. This is plain text. All formatting has been removed & formulas evaluated.",
                                            "example": "Start here"
                                          }
                                        },
                                        "description": "Object representing a text area on a Shape or Line.",
                                        "required": [
                                          "label",
                                          "text"
                                        ]
                                      }
                                    },
                                    "customData": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Custom data key"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "Custom data value"
                                          }
                                        },
                                        "description": "Object representing a key-value pair of data.",
                                        "required": [
                                          "name",
                                          "value"
                                        ],
                                        "example": {
                                          "name": "City",
                                          "value": "New York"
                                        }
                                      }
                                    },
                                    "linkedData": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "collection_id": {
                                            "type": "string",
                                            "description": "Id of the collection containing the data",
                                            "example": "ABAuwlf2BTy8"
                                          },
                                          "data": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Custom data key"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "description": "Custom data value"
                                                }
                                              },
                                              "description": "Object representing a key-value pair of data.",
                                              "required": [
                                                "name",
                                                "value"
                                              ],
                                              "example": {
                                                "name": "City",
                                                "value": "New York"
                                              }
                                            },
                                            "description": "Key-value pairs from the dataset"
                                          },
                                          "primaryKeyValue": {
                                            "type": "string",
                                            "description": "The value of the primary key of the dataset",
                                            "example": "Pkey Value"
                                          }
                                        },
                                        "description": "Object representing data linked to a resource on a document.",
                                        "required": [
                                          "data",
                                          "primaryKeyValue"
                                        ]
                                      }
                                    }
                                  },
                                  "description": "Object representing a line on the page of a document. Note that the ItemId of a line is unique across all groups, layers, shapes, and lines.",
                                  "required": [
                                    "id",
                                    "endpoint1",
                                    "endpoint2",
                                    "textAreas",
                                    "customData",
                                    "linkedData"
                                  ]
                                },
                                "description": "Array of Line resources"
                              },
                              "groups": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Group ID",
                                      "example": "VTAu-dl6qtyx"
                                    },
                                    "members": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Array of IDs of shapes, lines, & groups contained within the group",
                                      "example": [
                                        "VTAuCB8~evzW",
                                        "VTAuo_Y56.q~"
                                      ]
                                    },
                                    "customData": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Custom data key"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "Custom data value"
                                          }
                                        },
                                        "description": "Object representing a key-value pair of data.",
                                        "required": [
                                          "name",
                                          "value"
                                        ],
                                        "example": {
                                          "name": "City",
                                          "value": "New York"
                                        }
                                      }
                                    },
                                    "linkedData": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "collection_id": {
                                            "type": "string",
                                            "description": "Id of the collection containing the data",
                                            "example": "ABAuwlf2BTy8"
                                          },
                                          "data": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Custom data key"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "description": "Custom data value"
                                                }
                                              },
                                              "description": "Object representing a key-value pair of data.",
                                              "required": [
                                                "name",
                                                "value"
                                              ],
                                              "example": {
                                                "name": "City",
                                                "value": "New York"
                                              }
                                            },
                                            "description": "Key-value pairs from the dataset"
                                          },
                                          "primaryKeyValue": {
                                            "type": "string",
                                            "description": "The value of the primary key of the dataset",
                                            "example": "Pkey Value"
                                          }
                                        },
                                        "description": "Object representing data linked to a resource on a document.",
                                        "required": [
                                          "data",
                                          "primaryKeyValue"
                                        ]
                                      }
                                    }
                                  },
                                  "description": "Object representing a group on the page of a document. Note that the ItemId of a group is unique across all groups, layers, shapes, and lines.",
                                  "required": [
                                    "id",
                                    "members"
                                  ]
                                },
                                "description": "Array of Group resources"
                              },
                              "layers": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Layer ID",
                                      "example": "VTAu-dl6qtyx"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the layer",
                                      "example": "Layer 1"
                                    },
                                    "members": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Array of IDs of shapes, lines, & groups contained within the layer",
                                      "example": [
                                        "VTAuCB8~evzW",
                                        "VTAuo_Y56.q~"
                                      ]
                                    },
                                    "customData": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Custom data key"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "Custom data value"
                                          }
                                        },
                                        "description": "Object representing a key-value pair of data.",
                                        "required": [
                                          "name",
                                          "value"
                                        ],
                                        "example": {
                                          "name": "City",
                                          "value": "New York"
                                        }
                                      }
                                    },
                                    "linkedData": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "collection_id": {
                                            "type": "string",
                                            "description": "Id of the collection containing the data",
                                            "example": "ABAuwlf2BTy8"
                                          },
                                          "data": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Custom data key"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "description": "Custom data value"
                                                }
                                              },
                                              "description": "Object representing a key-value pair of data.",
                                              "required": [
                                                "name",
                                                "value"
                                              ],
                                              "example": {
                                                "name": "City",
                                                "value": "New York"
                                              }
                                            },
                                            "description": "Key-value pairs from the dataset"
                                          },
                                          "primaryKeyValue": {
                                            "type": "string",
                                            "description": "The value of the primary key of the dataset",
                                            "example": "Pkey Value"
                                          }
                                        },
                                        "description": "Object representing data linked to a resource on a document.",
                                        "required": [
                                          "data",
                                          "primaryKeyValue"
                                        ]
                                      }
                                    }
                                  },
                                  "description": "Object representing a layer on the page of a document. Note that the ItemId of a layer is unique across all groups, layers, shapes, and lines.",
                                  "required": [
                                    "id",
                                    "name",
                                    "members",
                                    "customData",
                                    "linkedData"
                                  ]
                                },
                                "description": "Array of Layer resources"
                              }
                            },
                            "required": [
                              "shapes",
                              "lines",
                              "groups",
                              "layers"
                            ]
                          },
                          "customData": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Custom data key"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Custom data value"
                                }
                              },
                              "description": "Object representing a key-value pair of data.",
                              "required": [
                                "name",
                                "value"
                              ],
                              "example": {
                                "name": "City",
                                "value": "New York"
                              }
                            },
                            "description": "Array of Data Pair resources linked to the page"
                          },
                          "linkedData": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "collection_id": {
                                  "type": "string",
                                  "description": "Id of the collection containing the data",
                                  "example": "ABAuwlf2BTy8"
                                },
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Custom data key"
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Custom data value"
                                      }
                                    },
                                    "description": "Object representing a key-value pair of data.",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "example": {
                                      "name": "City",
                                      "value": "New York"
                                    }
                                  },
                                  "description": "Key-value pairs from the dataset"
                                },
                                "primaryKeyValue": {
                                  "type": "string",
                                  "description": "The value of the primary key of the dataset",
                                  "example": "Pkey Value"
                                }
                              },
                              "description": "Object representing data linked to a resource on a document.",
                              "required": [
                                "data",
                                "primaryKeyValue"
                              ]
                            },
                            "description": "Array of Linked Data resources linked to the page"
                          }
                        },
                        "description": "Object representing a single page of a Lucidchart document.",
                        "required": [
                          "id",
                          "title",
                          "index",
                          "items",
                          "customData",
                          "linkedData"
                        ],
                        "example": {
                          "id": "YGcM5DNywbTK",
                          "title": "document page title",
                          "index": 0,
                          "items": {
                            "shapes": [],
                            "lines": [],
                            "groups": [],
                            "layers": []
                          },
                          "customData": [],
                          "linkedData": []
                        }
                      },
                      "description": "Array of Page resources on the document"
                    },
                    "data": {
                      "description": "Data contained on the document",
                      "type": "object",
                      "properties": {
                        "collections": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Id of the collection",
                                "example": "ABAuwlf2BTy8"
                              },
                              "name": {
                                "type": "string",
                                "description": "Collection name",
                                "example": "Collection 1"
                              },
                              "primaryKey": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The primary key column name",
                                "example": [
                                  "PKey 1"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "primaryKey"
                            ],
                            "description": "A collection is a container inside of a source of data. A data source can have many collections, but a collection can only belong to one data source. A collection can be thought of as a tab or individual sheet in a spreadsheet file."
                          },
                          "description": "Array of collections"
                        }
                      },
                      "required": [
                        "collections"
                      ]
                    }
                  },
                  "description": "Object representing the contents of a Lucidchart document",
                  "required": [
                    "id",
                    "title",
                    "product",
                    "pages",
                    "data"
                  ],
                  "example": {
                    "id": "8e7b19ec-27ff-40e3-beb8-03f51b1661b2",
                    "title": "document title",
                    "product": "lucidchart",
                    "pages": [],
                    "data": {
                      "collections": []
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the app making the request does not have permission to the document, or if the document has been deleted or does not exist."
          },
          "429": {
            "description": "Too Many Requests if the account makes more than 100 requests in 5 seconds."
          }
        }
      }
    },
    "/embeds": {
      "get": {
        "summary": "Embed Viewer",
        "operationId": "documentEmbeds",
        "tags": [
          "Document Embedding"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The embed session token retrieved from the Generate Embed Session Token endpoint."
          }
        ],
        "responses": {
          "200": {
            "description": "The iframe content displaying the embedded document picker or viewer.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The token is missing or invalid."
          },
          "403": {
            "description": "Forbidden. The access to the embed is forbidden."
          },
          "404": {
            "description": "Not Found. The embed id is not found."
          }
        }
      }
    },
    "/embeds/token": {
      "post": {
        "summary": "Generate Embed Session Token",
        "operationId": "documentEmbedsToken",
        "tags": [
          "Document Embedding"
        ],
        "security": [
          {
            "OAuth2": [
              "lucidchart.document.app.picker.share.embed",
              "lucidscale.document.app.picker.share.embed",
              "lucidspark.document.app.picker.share.embed"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "embedId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the document embed. This is needed for viewing an existing embed."
                  },
                  "origin": {
                    "type": "string",
                    "description": "The domain that will be used to host the webpage in which the document picker will be embedded."
                  },
                  "sessionConfig": {
                    "type": "object",
                    "properties": {
                      "products": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "lucidchart",
                            "lucidscale",
                            "lucidspark"
                          ],
                          "example": "lucidchart"
                        },
                        "description": "A list of Products that a user can choose a document from to be embedded. Defaults to all products."
                      },
                      "viewerType": {
                        "type": "object",
                        "properties": {
                          "default": {
                            "type": "string",
                            "enum": [
                              "rich",
                              "simple"
                            ],
                            "description": "- rich: The standard Lucid viewer experience. A fully interactive viewer with zoom, panning, and support for hotspots and other interactive elements.\n- simple: A basic Lucid viewer experience that can be used in place of the rich viewer if there are performance or load time concerns. The simple viewer renders non-interactive raster images instead of a high-fidelity vector experience and is a poorer fit for viewing larger documents.\n"
                          }
                        },
                        "description": "What type of viewer to load by defaults. If not specified, defaults to rich. Users can change this later."
                      },
                      "ui": {
                        "type": "string",
                        "enum": [
                          "viewer",
                          "settings"
                        ],
                        "description": "- viewer: When loading an existing embed, go directly to the standard embedded view of the document.\n- settings: When loading an existing embed, show the user the embed settings interface before taking them to the standard embed view of the document.\n"
                      },
                      "customSettings": {
                        "type": "string",
                        "enum": [
                          "postMessage",
                          "none"
                        ],
                        "description": "- postMessage: Display a \"Settings for <app>\" link in the embed settings view where users can update the settings. When clicked, the OpenCustomSettings postMessage event would be fired so the app can display its own customized settings view.\n- none: \"Settings for <app>\" link would not be available in the settings editor.\n"
                      }
                    }
                  }
                },
                "required": [
                  "origin"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Valid token that can be used to embed a document picker or a document viewer.",
            "content": {
              "application/jwt": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid."
          },
          "403": {
            "description": "Access to the embed is forbidden."
          },
          "404": {
            "description": "The embed id in the parameter is not found."
          }
        }
      }
    },
    "/folders/{id}": {
      "get": {
        "summary": "Get Folder",
        "operationId": "getFolder",
        "tags": [
          "Folders"
        ],
        "security": [
          {
            "ApiKey": [
              "FolderReadonly"
            ]
          },
          {
            "OAuth2": [
              "folder:readonly"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "ID of the folder to be retrieved."
          }
        ],
        "responses": {
          "200": {
            "description": "OK with a Folder resource containing information about the requested folder.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "A standard representation of a folder.",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "Unique ID of the folder",
                      "example": 123456789
                    },
                    "type": {
                      "type": "string",
                      "description": "* folder - Folders can live in other folders, team folders, or the root of a user’s folder manager (\"My Documents\"). A folder in \"My Documents\" will have a null parent field.\n* team   - Team folders can never live in another folder and are always located in the \"Team Folders\" section of a user's folder manager. Team folders will not have a parent field. Learn more\n",
                      "enum": [
                        "folder",
                        "team"
                      ],
                      "example": "folder"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the folder",
                      "example": "Folder Name"
                    },
                    "parent": {
                      "type": "number",
                      "description": "ID of the parent folder.",
                      "example": 123456788,
                      "nullable": true
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of when the folder was created",
                      "example": "2020-06-26T16:29:37Z"
                    },
                    "trashed": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of when the folder was trashed",
                      "example": "2022-01-20T12:14:18Z"
                    },
                    "attributes": {
                      "type": "array",
                      "description": "An array of attributes assigned to the folder. Can be null or empty.",
                      "items": {
                        "type": "object",
                        "description": "An attribute assigned to the folder.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the attribute",
                            "example": "Sample Label"
                          },
                          "value": {
                            "description": "Value of the attribute. Can be any type, but attributes with the same name will always have the same type.",
                            "example": "Sample Value"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "type",
                    "name",
                    "created"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the app making the request does not have permission to the folder, or if the folder has been deleted (trashed is okay) or does not exist."
          }
        }
      },
      "patch": {
        "summary": "Update Folder",
        "operationId": "updateFolder",
        "tags": [
          "Folders"
        ],
        "security": [
          {
            "ApiKey": [
              "FolderEdit"
            ]
          },
          {
            "OAuth2": [
              "folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "ID of the folder to be updated."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "New name for the folder being updated."
                  },
                  "parent": {
                    "type": "number",
                    "nullable": true,
                    "description": "New parent for the folder being updated. Causes the folder to be moved into another folder if an ID is provided or into the user's root folder (\"My Documents\") if `null` is provided. If the parent field is not included in the request, the folder will not be moved. Cannot be provided for Team Folders.\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK with a Folder resource containing information about the updated folder.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "A standard representation of a folder.",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "Unique ID of the folder",
                      "example": 123456789
                    },
                    "type": {
                      "type": "string",
                      "description": "* folder - Folders can live in other folders, team folders, or the root of a user’s folder manager (\"My Documents\"). A folder in \"My Documents\" will have a null parent field.\n* team   - Team folders can never live in another folder and are always located in the \"Team Folders\" section of a user's folder manager. Team folders will not have a parent field. Learn more\n",
                      "enum": [
                        "folder",
                        "team"
                      ],
                      "example": "folder"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the folder",
                      "example": "Folder Name"
                    },
                    "parent": {
                      "type": "number",
                      "description": "ID of the parent folder.",
                      "example": 123456788,
                      "nullable": true
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of when the folder was created",
                      "example": "2020-06-26T16:29:37Z"
                    },
                    "trashed": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of when the folder was trashed",
                      "example": "2022-01-20T12:14:18Z"
                    },
                    "attributes": {
                      "type": "array",
                      "description": "An array of attributes assigned to the folder. Can be null or empty.",
                      "items": {
                        "type": "object",
                        "description": "An attribute assigned to the folder.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the attribute",
                            "example": "Sample Label"
                          },
                          "value": {
                            "description": "Value of the attribute. Can be any type, but attributes with the same name will always have the same type.",
                            "example": "Sample Value"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "type",
                    "name",
                    "created"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request if the parent field is included in a request for a team folder, or if invalid input types are provided for id, name, or parent."
          },
          "403": {
            "description": "Forbidden if the app making the request does not have permission to the folder, the folder has been deleted or does not exist, or the request was not authorized to move the folder."
          }
        }
      }
    },
    "/folders": {
      "post": {
        "summary": "Create Folder",
        "operationId": "createFolder",
        "tags": [
          "Folders"
        ],
        "security": [
          {
            "ApiKey": [
              "FolderEdit"
            ]
          },
          {
            "OAuth2": [
              "folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the folder being created."
                  },
                  "type": {
                    "type": "string",
                    "description": "* folder - Folders can live in other folders, team folders, or the root of a user’s folder manager (\"My Documents\"). A folder in \"My Documents\" will have a null parent field.\n* team   - Team folders can never live in another folder and are always located in the \"Team Folders\" section of a user's folder manager. Team folders will not have a parent field. Learn more\n",
                    "enum": [
                      "folder",
                      "team"
                    ],
                    "example": "folder"
                  },
                  "parent": {
                    "type": "number",
                    "nullable": true,
                    "description": "Destination folder to create the new folder in.\nIf it is not provided, the folder will be created in the root of the user's folder manager (\"My Documents\").\n"
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created with a Folder resource containing information about the newly created folder.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "A standard representation of a folder.",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "Unique ID of the folder",
                      "example": 123456789
                    },
                    "type": {
                      "type": "string",
                      "description": "* folder - Folders can live in other folders, team folders, or the root of a user’s folder manager (\"My Documents\"). A folder in \"My Documents\" will have a null parent field.\n* team   - Team folders can never live in another folder and are always located in the \"Team Folders\" section of a user's folder manager. Team folders will not have a parent field. Learn more\n",
                      "enum": [
                        "folder",
                        "team"
                      ],
                      "example": "folder"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the folder",
                      "example": "Folder Name"
                    },
                    "parent": {
                      "type": "number",
                      "description": "ID of the parent folder.",
                      "example": 123456788,
                      "nullable": true
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of when the folder was created",
                      "example": "2020-06-26T16:29:37Z"
                    },
                    "trashed": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of when the folder was trashed",
                      "example": "2022-01-20T12:14:18Z"
                    },
                    "attributes": {
                      "type": "array",
                      "description": "An array of attributes assigned to the folder. Can be null or empty.",
                      "items": {
                        "type": "object",
                        "description": "An attribute assigned to the folder.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the attribute",
                            "example": "Sample Label"
                          },
                          "value": {
                            "description": "Value of the attribute. Can be any type, but attributes with the same name will always have the same type.",
                            "example": "Sample Value"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "type",
                    "name",
                    "created"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the request is not authorized to create in the specified `parent` folder."
          }
        }
      }
    },
    "/folders/{id}/trash": {
      "post": {
        "summary": "Trash Folder",
        "operationId": "trashFolder",
        "tags": [
          "Folders"
        ],
        "security": [
          {
            "ApiKey": [
              "FolderEdit"
            ]
          },
          {
            "OAuth2": [
              "folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "ID of the folder to be moved to the trash."
          }
        ],
        "responses": {
          "204": {
            "description": "No Content when the folder is successfully moved into the trash or is already trashed."
          },
          "403": {
            "description": "Forbidden if the app making the request does not have permission to the folder, or if the folder has been deleted or does not exist."
          }
        }
      }
    },
    "/folders/{id}/restore": {
      "post": {
        "summary": "Restore Folder",
        "operationId": "restoreFolder",
        "tags": [
          "Folders"
        ],
        "security": [
          {
            "ApiKey": [
              "FolderEdit"
            ]
          },
          {
            "OAuth2": [
              "folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "ID of the folder to be restored from the trash."
          }
        ],
        "responses": {
          "204": {
            "description": "No Content when the folder is successfully moved out of the trash or is already not in the trash."
          },
          "403": {
            "description": "Forbidden if the app making the request does not have permission to the folder, or if the folder has been deleted or does not exist."
          }
        }
      }
    },
    "/folders/search": {
      "post": {
        "summary": "Search Folders",
        "operationId": "searchFolders",
        "tags": [
          "Folders"
        ],
        "security": [
          {
            "ApiKey": [
              "FolderReadonly",
              "FolderAdmin"
            ]
          },
          {
            "OAuth2": [
              "folder:readonly",
              "folder:admin.readonly"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "header",
            "name": "Lucid-Request-As",
            "required": true,
            "description": "If the requesting user is an account owner or folder admin with the required permissions and they make the request\nwith the value of “admin” as this header and include an admin scope, the request will be made using their admin\npermissions.\nAccount owners and document admins can access the admin version of folder search.\n",
            "schema": {
              "type": "string"
            },
            "example": "admin"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Note: This endpoint only accepts the folder type",
                    "enum": [
                      "folder",
                      "team"
                    ],
                    "example": "folder"
                  },
                  "userIds": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "description": "List of userIds to include in search. If no ids are provided it will search across the entire account."
                  },
                  "ownedByUsers": {
                    "type": "boolean",
                    "description": "Truthy if search results should only include documents owned by users specified by userIds. Ignored if no userIds are provided."
                  },
                  "keywords": {
                    "type": "string",
                    "description": "Keywords to search against folder content and titles. This field is truncated to 400 characters. When provided, results will be sorted by relevance to keyword search."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK with an array of Folder Resource objects containing information about folders the authenticated user has access to.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "A standard representation of a folder.",
                    "properties": {
                      "id": {
                        "type": "number",
                        "description": "Unique ID of the folder",
                        "example": 123456789
                      },
                      "type": {
                        "type": "string",
                        "description": "* folder - Folders can live in other folders, team folders, or the root of a user’s folder manager (\"My Documents\"). A folder in \"My Documents\" will have a null parent field.\n* team   - Team folders can never live in another folder and are always located in the \"Team Folders\" section of a user's folder manager. Team folders will not have a parent field. Learn more\n",
                        "enum": [
                          "folder",
                          "team"
                        ],
                        "example": "folder"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the folder",
                        "example": "Folder Name"
                      },
                      "parent": {
                        "type": "number",
                        "description": "ID of the parent folder.",
                        "example": 123456788,
                        "nullable": true
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time of when the folder was created",
                        "example": "2020-06-26T16:29:37Z"
                      },
                      "trashed": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time of when the folder was trashed",
                        "example": "2022-01-20T12:14:18Z"
                      },
                      "attributes": {
                        "type": "array",
                        "description": "An array of attributes assigned to the folder. Can be null or empty.",
                        "items": {
                          "type": "object",
                          "description": "An attribute assigned to the folder.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the attribute",
                              "example": "Sample Label"
                            },
                            "value": {
                              "description": "Value of the attribute. Can be any type, but attributes with the same name will always have the same type.",
                              "example": "Sample Value"
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "id",
                      "type",
                      "name",
                      "created"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request if the request does not contain a body."
          },
          "403": {
            "description": "Forbidden if User requests with admin scope and without Lucid-Request-As=admin header, User requests without an admin scope and includes Lucid-Request-As=admin header, or Account does not have access to the API"
          },
          "429": {
            "description": "Too Many Requests if the account makes more than 300 requests in 5 seconds."
          }
        }
      }
    },
    "/folders/{id}/contents": {
      "get": {
        "summary": "List Folder Contents",
        "operationId": "listFolderContents",
        "tags": [
          "Folders"
        ],
        "security": [
          {
            "ApiKey": [
              "FolderReadonly"
            ]
          },
          {
            "OAuth2": [
              "folder:readonly"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string",
                  "enum": [
                    "root"
                  ]
                }
              ]
            },
            "description": "ID of the folder or `root` to retrieve contents of the authenticated user's root directory (\"My Documents\")."
          }
        ],
        "responses": {
          "200": {
            "description": "OK with an array of Folder Content Resources containing information about the contents of the requested folder.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "A representation of a single item contained in a folder.",
                    "properties": {
                      "id": {
                        "anyOf": [
                          {
                            "type": "string",
                            "format": "uuid"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "description": "Unique ID of the folder or document being referred to. This field will be a Number for folders and a UUID for documents.",
                        "example": 123456789
                      },
                      "type": {
                        "type": "string",
                        "description": "* folder  -  Type denoting that the Folder Content Resource is a folder and will have a Number id field and no product field.\n* document  -  Type denoting that the Folder Content Resource is a document and will have a UUID id field and will contain a product field.\n",
                        "enum": [
                          "folder",
                          "document"
                        ],
                        "example": "document"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the folder or document",
                        "example": "Folder Name"
                      },
                      "shortcut": {
                        "type": "boolean",
                        "description": "A boolean value indicating whether or not the folder or document is a shortcut. For more information on shortcuts and permissions.",
                        "example": false
                      },
                      "product": {
                        "type": "string",
                        "enum": [
                          "lucidchart",
                          "lucidscale",
                          "lucidspark"
                        ],
                        "example": "lucidchart"
                      }
                    },
                    "required": [
                      "id",
                      "type",
                      "name",
                      "shortcut"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the app making the request does not have permission to the folder, or if the folder has been deleted or does not exist."
          }
        }
      }
    },
    "/folders/root/contents": {
      "get": {
        "summary": "List Root Folder Contents",
        "operationId": "listRootFolderContents",
        "tags": [
          "Folders"
        ],
        "security": [
          {
            "ApiKey": [
              "FolderReadonly"
            ]
          },
          {
            "OAuth2": [
              "folder:readonly"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "OK with an array of Folder Content Resources containing information about the contents of the requested folder.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "A representation of a single item contained in a folder.",
                    "properties": {
                      "id": {
                        "anyOf": [
                          {
                            "type": "string",
                            "format": "uuid"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "description": "Unique ID of the folder or document being referred to. This field will be a Number for folders and a UUID for documents.",
                        "example": 123456789
                      },
                      "type": {
                        "type": "string",
                        "description": "* folder  -  Type denoting that the Folder Content Resource is a folder and will have a Number id field and no product field.\n* document  -  Type denoting that the Folder Content Resource is a document and will have a UUID id field and will contain a product field.\n",
                        "enum": [
                          "folder",
                          "document"
                        ],
                        "example": "document"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the folder or document",
                        "example": "Folder Name"
                      },
                      "shortcut": {
                        "type": "boolean",
                        "description": "A boolean value indicating whether or not the folder or document is a shortcut. For more information on shortcuts and permissions.",
                        "example": false
                      },
                      "product": {
                        "type": "string",
                        "enum": [
                          "lucidchart",
                          "lucidscale",
                          "lucidspark"
                        ],
                        "example": "lucidchart"
                      }
                    },
                    "required": [
                      "id",
                      "type",
                      "name",
                      "shortcut"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the app making the request does not have permission to the folder, or if the folder has been deleted or does not exist."
          }
        }
      }
    },
    "/documents/{id}/shares/shareLinks/{shareLinkId}": {
      "get": {
        "summary": "Get Document Share Link",
        "operationId": "getDocumentShareLink",
        "tags": [
          "Documents Sharing"
        ],
        "security": [
          {
            "OAuth2": [
              "lucidchart.document.content.share.link:readonly",
              "lucidchart.document.app.picker.share.link:readonly",
              "lucidchart.document.app.folder",
              "lucidscale.document.content.share.link:readonly",
              "lucidscale.document.app.picker.share.link:readonly",
              "lucidscale.document.app.folder",
              "lucidspark.document.content.share.link:readonly",
              "lucidspark.document.app.picker.share.link:readonly",
              "lucidspark.document.app.folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the document."
          },
          {
            "name": "shareLinkId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Id of the share link to retrieve information for."
          }
        ],
        "responses": {
          "200": {
            "description": "OK with a Document Share Link resource containing information about the requested share link.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "shareLinkId": {
                      "type": "string",
                      "description": "Id of the share link.",
                      "example": "inv_8a38797a-e5fc-4479-8492-e000dc93cb60"
                    },
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Id of the document the share link belongs to.",
                      "example": "f6bf19b5-d109-4ef5-92b2-cdaf0de43001"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "editandshare",
                        "edit",
                        "comment",
                        "view"
                      ],
                      "description": "Roles determine what actions an invitation will grant on a document. Invitations to a document only grant the specified level of access to just that one document.\n- `editandshare`: View, comment on, edit, and control which users can access the document.\n- `edit`: View, comment on, and edit the document.\n- `comment`: View the document. Leave comments on the document.\n- `view`: View the document.\n"
                    },
                    "linkSecurity": {
                      "type": "object",
                      "properties": {
                        "restrictToAccount": {
                          "type": "boolean",
                          "description": "Whether or not users outside the document's account can accept the share link."
                        },
                        "expires": {
                          "type": "string",
                          "format": "date-time",
                          "description": "If defined, the date and time the share link expires."
                        },
                        "passcode": {
                          "type": "string",
                          "description": "If defined, the required passcode to accept the share link."
                        },
                        "allowAnonymous": {
                          "type": "boolean",
                          "description": "Whether or not the share link allows for anonymous guests."
                        }
                      },
                      "required": [
                        "restrictToAccount",
                        "allowAnonymous"
                      ],
                      "example": {
                        "restrictToAccount": false,
                        "expires": "2023-12-11T21:48:35.293Z",
                        "passcode": "password",
                        "allowAnonymous": false
                      }
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time the share link was created.",
                      "example": "2022-11-11T21:48:35.293Z"
                    },
                    "createdBy": {
                      "type": "number",
                      "description": "User Id of the user that created the share link.",
                      "example": 1280
                    },
                    "lastModified": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time the share link was last modified.",
                      "example": "2022-11-11T21:48:35.293Z"
                    },
                    "acceptUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "Link to accept the share link invitation.",
                      "example": "https://lucid.app/lucidchart/f6bf19b5-d109-4ef5-92b2-cdaf0de43001/edit?invitationId=inv_8a38797a-e5fc-4479-8492-e000dc93cb60"
                    }
                  },
                  "required": [
                    "shareLinkId",
                    "documentId",
                    "role",
                    "linkSecurity",
                    "created",
                    "createdBy",
                    "lastModified",
                    "acceptUrl"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the app making the request does not have permission to the document, or if the document has been deleted, or does not exist."
          },
          "404": {
            "description": "Not Found if the share link id with the specified document id does not belong to the document, does not exist, or the requesting app did not create the share link."
          }
        }
      },
      "patch": {
        "summary": "Update Document Share Link",
        "operationId": "updateDocumentShareLink",
        "tags": [
          "Documents Sharing"
        ],
        "security": [
          {
            "OAuth2": [
              "lucidchart.document.content.share.link",
              "lucidchart.document.app.picker.share.link",
              "lucidchart.document.app.folder",
              "lucidscale.document.content.share.link",
              "lucidscale.document.app.picker.share.link",
              "lucidscale.document.app.folder",
              "lucidspark.document.content.share.link",
              "lucidspark.document.app.picker.share.link",
              "lucidspark.document.app.folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the document."
          },
          {
            "name": "shareLinkId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Id of the share link to retrieve information for."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "enum": [
                      "editandshare",
                      "edit",
                      "comment",
                      "view"
                    ],
                    "description": "Roles determine what actions an invitation will grant on a document. Invitations to a document only grant the specified level of access to just that one document.\n- `editandshare`: View, comment on, edit, and control which users can access the document.\n- `edit`: View, comment on, and edit the document.\n- `comment`: View the document. Leave comments on the document.\n- `view`: View the document.\n"
                  },
                  "linkSecurity": {
                    "type": "object",
                    "properties": {
                      "restrictToAccount": {
                        "type": "boolean",
                        "description": "Whether or not users outside the document's account can accept the share link."
                      },
                      "expires": {
                        "type": "string",
                        "format": "date-time",
                        "description": "If defined, the date and time the share link expires."
                      },
                      "passcode": {
                        "type": "string",
                        "description": "If defined, the required passcode to accept the share link."
                      },
                      "allowAnonymous": {
                        "type": "boolean",
                        "description": "Whether or not the share link allows for anonymous guests."
                      }
                    },
                    "required": [
                      "restrictToAccount",
                      "allowAnonymous"
                    ],
                    "example": {
                      "restrictToAccount": false,
                      "expires": "2023-12-11T21:48:35.293Z",
                      "passcode": "password",
                      "allowAnonymous": false
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK with a Document Share Link resource containing information about the updated share link.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "shareLinkId": {
                      "type": "string",
                      "description": "Id of the share link.",
                      "example": "inv_8a38797a-e5fc-4479-8492-e000dc93cb60"
                    },
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Id of the document the share link belongs to.",
                      "example": "f6bf19b5-d109-4ef5-92b2-cdaf0de43001"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "editandshare",
                        "edit",
                        "comment",
                        "view"
                      ],
                      "description": "Roles determine what actions an invitation will grant on a document. Invitations to a document only grant the specified level of access to just that one document.\n- `editandshare`: View, comment on, edit, and control which users can access the document.\n- `edit`: View, comment on, and edit the document.\n- `comment`: View the document. Leave comments on the document.\n- `view`: View the document.\n"
                    },
                    "linkSecurity": {
                      "type": "object",
                      "properties": {
                        "restrictToAccount": {
                          "type": "boolean",
                          "description": "Whether or not users outside the document's account can accept the share link."
                        },
                        "expires": {
                          "type": "string",
                          "format": "date-time",
                          "description": "If defined, the date and time the share link expires."
                        },
                        "passcode": {
                          "type": "string",
                          "description": "If defined, the required passcode to accept the share link."
                        },
                        "allowAnonymous": {
                          "type": "boolean",
                          "description": "Whether or not the share link allows for anonymous guests."
                        }
                      },
                      "required": [
                        "restrictToAccount",
                        "allowAnonymous"
                      ],
                      "example": {
                        "restrictToAccount": false,
                        "expires": "2023-12-11T21:48:35.293Z",
                        "passcode": "password",
                        "allowAnonymous": false
                      }
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time the share link was created.",
                      "example": "2022-11-11T21:48:35.293Z"
                    },
                    "createdBy": {
                      "type": "number",
                      "description": "User Id of the user that created the share link.",
                      "example": 1280
                    },
                    "lastModified": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time the share link was last modified.",
                      "example": "2022-11-11T21:48:35.293Z"
                    },
                    "acceptUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "Link to accept the share link invitation.",
                      "example": "https://lucid.app/lucidchart/f6bf19b5-d109-4ef5-92b2-cdaf0de43001/edit?invitationId=inv_8a38797a-e5fc-4479-8492-e000dc93cb60"
                    }
                  },
                  "required": [
                    "shareLinkId",
                    "documentId",
                    "role",
                    "linkSecurity",
                    "created",
                    "createdBy",
                    "lastModified",
                    "acceptUrl"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request if the the document does not belong to an enterprise account and the restrictToAccount is set to true, defines a passcode, or defines an expiration or the allowAnonymous field is set to true on non-Lucidspark/Lucidchart documents."
          },
          "403": {
            "description": "Forbidden if the app making the request does not have permission to the document, or if the document has been deleted, or does not exist."
          },
          "404": {
            "description": "Not Found if the share link id with the specified document id does not belong to the document, does not exist, or the requesting app did not create the share link."
          }
        }
      },
      "delete": {
        "summary": "Delete Document Share Link",
        "operationId": "deleteDocumentShareLink",
        "tags": [
          "Documents Sharing"
        ],
        "security": [
          {
            "OAuth2": [
              "lucidchart.document.content.share.link",
              "lucidchart.document.app.picker.share.link",
              "lucidchart.document.app.folder",
              "lucidscale.document.content.share.link",
              "lucidscale.document.app.picker.share.link",
              "lucidscale.document.app.folder",
              "lucidspark.document.content.share.link",
              "lucidspark.document.app.picker.share.link",
              "lucidspark.document.app.folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the document."
          },
          {
            "name": "shareLinkId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Id of the share link to retrieve information for."
          }
        ],
        "responses": {
          "204": {
            "description": "No Content if the share link was deleted successfully."
          },
          "403": {
            "description": "Forbidden if the app making the request does not have permission to the document, or if the document has been deleted, or does not exist."
          },
          "404": {
            "description": "Not Found if the share link id with the specified document id does not belong to the document, does not exist, or the requesting app did not create the share link."
          }
        }
      }
    },
    "/documents/{id}/shares/shareLinks": {
      "post": {
        "summary": "Create Document Share Link",
        "operationId": "createDocumentShareLink",
        "tags": [
          "Documents Sharing"
        ],
        "security": [
          {
            "OAuth2": [
              "lucidchart.document.content.share.link",
              "lucidchart.document.app.picker.share.link",
              "lucidchart.document.app.folder",
              "lucidscale.document.content.share.link",
              "lucidscale.document.app.picker.share.link",
              "lucidscale.document.app.folder",
              "lucidspark.document.content.share.link",
              "lucidspark.document.app.picker.share.link",
              "lucidspark.document.app.folder"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the document."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "enum": [
                      "editandshare",
                      "edit",
                      "comment",
                      "view"
                    ],
                    "description": "Roles determine what actions an invitation will grant on a document. Invitations to a document only grant the specified level of access to just that one document.\n- `editandshare`: View, comment on, edit, and control which users can access the document.\n- `edit`: View, comment on, and edit the document.\n- `comment`: View the document. Leave comments on the document.\n- `view`: View the document.\n"
                  },
                  "linkSecurity": {
                    "type": "object",
                    "properties": {
                      "restrictToAccount": {
                        "type": "boolean",
                        "description": "Whether or not users outside the document's account can accept the share link."
                      },
                      "expires": {
                        "type": "string",
                        "format": "date-time",
                        "description": "If defined, the date and time the share link expires."
                      },
                      "passcode": {
                        "type": "string",
                        "description": "If defined, the required passcode to accept the share link."
                      },
                      "allowAnonymous": {
                        "type": "boolean",
                        "description": "Whether or not the share link allows for anonymous guests."
                      }
                    },
                    "required": [
                      "restrictToAccount",
                      "allowAnonymous"
                    ],
                    "example": {
                      "restrictToAccount": false,
                      "expires": "2023-12-11T21:48:35.293Z",
                      "passcode": "password",
                      "allowAnonymous": false
                    }
                  }
                },
                "required": [
                  "linkSecurity",
                  "role"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created with a Document Share Link resource containing information about the created share link.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "shareLinkId": {
                      "type": "string",
                      "description": "Id of the share link.",
                      "example": "inv_8a38797a-e5fc-4479-8492-e000dc93cb60"
                    },
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "Id of the document the share link belongs to.",
                      "example": "f6bf19b5-d109-4ef5-92b2-cdaf0de43001"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "editandshare",
                        "edit",
                        "comment",
                        "view"
                      ],
                      "description": "Roles determine what actions an invitation will grant on a document. Invitations to a document only grant the specified level of access to just that one document.\n- `editandshare`: View, comment on, edit, and control which users can access the document.\n- `edit`: View, comment on, and edit the document.\n- `comment`: View the document. Leave comments on the document.\n- `view`: View the document.\n"
                    },
                    "linkSecurity": {
                      "type": "object",
                      "properties": {
                        "restrictToAccount": {
                          "type": "boolean",
                          "description": "Whether or not users outside the document's account can accept the share link."
                        },
                        "expires": {
                          "type": "string",
                          "format": "date-time",
                          "description": "If defined, the date and time the share link expires."
                        },
                        "passcode": {
                          "type": "string",
                          "description": "If defined, the required passcode to accept the share link."
                        },
                        "allowAnonymous": {
                          "type": "boolean",
                          "description": "Whether or not the share link allows for anonymous guests."
                        }
                      },
                      "required": [
                        "restrictToAccount",
                        "allowAnonymous"
                      ],
                      "example": {
                        "restrictToAccount": false,
                        "expires": "2023-12-11T21:48:35.293Z",
                        "passcode": "password",
                        "allowAnonymous": false
                      }
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time the share link was created.",
                      "example": "2022-11-11T21:48:35.293Z"
                    },
                    "createdBy": {
                      "type": "number",
                      "description": "User Id of the user that created the share link.",
                      "example": 1280
                    },
                    "lastModified": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time the share link was last modified.",
                      "example": "2022-11-11T21:48:35.293Z"
                    },
                    "acceptUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "Link to accept the share link invitation.",
                      "example": "https://lucid.app/lucidchart/f6bf19b5-d109-4ef5-92b2-cdaf0de43001/edit?invitationId=inv_8a38797a-e5fc-4479-8492-e000dc93cb60"
                    }
                  },
                  "required": [
                    "shareLinkId",
                    "documentId",
                    "role",
                    "linkSecurity",
                    "created",
                    "createdBy",
                    "lastModified",
                    "acceptUrl"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request if the document does not belong to an enterprise account and the `restrictToAccount` is set to true, defines a passcode, or defines an expiration or the `allowAnonymous` field is set to true on non-Lucidspark/Lucidchart documents."
          },
          "403": {
            "description": "Forbidden if the app making the request does not have permission to the document, or if the document has been deleted, or does not exist."
          }
        }
      }
    },
    "/shareLink/{shareLinkId}/accept": {
      "post": {
        "summary": "Accept Share Links",
        "operationId": "acceptShareLink",
        "tags": [
          "Sharing"
        ],
        "security": [
          {
            "OAuth2": [
              "invitation.accept"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "shareLinkId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Id of the share link to retrieve information for."
          }
        ],
        "responses": {
          "200": {
            "description": "OK with an Accept Share Link result containing information about the accepted document or folder.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "invitationType": {
                          "type": "string",
                          "description": "The kind of share link that was accepted (document or folder).",
                          "example": "document"
                        },
                        "documentId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "If defined, the Id of the document whose share link was accepted.",
                          "example": "f6bf19b5-d109-4ef5-92b2-cdaf0de43001"
                        },
                        "folderId": {
                          "type": "string",
                          "format": "integer",
                          "description": "If defined, the Id of the folder whose share link was accepted.",
                          "example": null
                        }
                      },
                      "required": [
                        "invitationType"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "invitationType": {
                          "type": "string",
                          "description": "The kind of share link that was accepted (document or folder).",
                          "example": "folder"
                        },
                        "documentId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "If defined, the Id of the document whose share link was accepted.",
                          "example": null
                        },
                        "folderId": {
                          "type": "string",
                          "format": "integer",
                          "description": "If defined, the Id of the folder whose share link was accepted.",
                          "example": 123456789
                        }
                      },
                      "required": [
                        "invitationType"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden if the app making the request does not have permission to accept the share link, if the document/folder has been deleted, or the invitation requires a passcode (unsupported)."
          },
          "404": {
            "description": "Not Found if the share link has expired or does not exist."
          }
        }
      }
    },
    "/transferUserContent": {
      "post": {
        "summary": "Transfer User Content",
        "operationId": "transferUserContent",
        "tags": [
          "Transfer Content"
        ],
        "security": [
          {
            "OAuth2": [
              "account.user.transfercontent"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fromUser": {
                    "type": "string",
                    "format": "email",
                    "description": "Email of the user whose content will be transferred."
                  },
                  "toUser": {
                    "type": "string",
                    "format": "email",
                    "description": "Email of the user the content will be transferred to."
                  }
                },
                "required": [
                  "fromUser",
                  "toUser"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content when ownership is successfully transferred."
          },
          "400": {
            "description": "Bad Request when the `fromUser` and `toUser` are the same."
          },
          "403": {
            "description": "Forbidden when the users do not exist or are not on the authenticated account."
          },
          "429": {
            "description": "Too Many Requests if the account makes more than 30 requests in 5 seconds."
          }
        },
        "x-rate-limit": {
          "description": "This endpoint has a per account rate limit of 30 requests per 5 seconds."
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get User",
        "operationId": "getUser",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "ApiKey": [
              "AccountReadonly"
            ]
          },
          {
            "OAuth2": [
              "account.user:readonly"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "ID of the user to be retrieved.",
            "example": 204
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns with a User resource containing information about the user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountId": {
                      "type": "number",
                      "example": 100,
                      "description": "The unique ID for the user's account."
                    },
                    "email": {
                      "type": "string",
                      "example": "john-doe@example.com",
                      "description": "The user's email."
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe",
                      "description": "The user's full name."
                    },
                    "userId": {
                      "type": "number",
                      "example": 101,
                      "description": "The unique ID for the user."
                    },
                    "username": {
                      "type": "string",
                      "example": "johndoe",
                      "description": "The user's username."
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "billing-admin",
                          "team-admin",
                          "document-admin",
                          "template-admin"
                        ],
                        "description": "Allows various administrative actions."
                      },
                      "example": [
                        "billing-admin",
                        "team-admin"
                      ],
                      "description": "A list of administrative roles assigned to the user."
                    }
                  },
                  "description": "A standard representation of a user."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Occurs if the user does not belong to the authenticated account or if the user does not exist."
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List Users",
        "operationId": "listUsers",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "OAuth2": [
              "account.user:readonly"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns a list of User resources containing information about users on the account.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "number",
                        "example": 100,
                        "description": "The unique ID for the user's account."
                      },
                      "email": {
                        "type": "string",
                        "example": "john-doe@example.com",
                        "description": "The user's email."
                      },
                      "name": {
                        "type": "string",
                        "example": "John Doe",
                        "description": "The user's full name."
                      },
                      "userId": {
                        "type": "number",
                        "example": 101,
                        "description": "The unique ID for the user."
                      },
                      "username": {
                        "type": "string",
                        "example": "johndoe",
                        "description": "The user's username."
                      },
                      "roles": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "billing-admin",
                            "team-admin",
                            "document-admin",
                            "template-admin"
                          ],
                          "description": "Allows various administrative actions."
                        },
                        "example": [
                          "billing-admin",
                          "team-admin"
                        ],
                        "description": "A list of administrative roles assigned to the user."
                      }
                    },
                    "description": "A standard representation of a user."
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "summary": "Create User",
        "operationId": "createUser",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "OAuth2": [
              "account.user"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "john-doe@example.com",
                    "description": "The user's email."
                  },
                  "firstName": {
                    "type": "string",
                    "example": "John",
                    "description": "The user's first name."
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe",
                    "description": "The user's last name."
                  },
                  "username": {
                    "type": "string",
                    "example": "john-doe@example.com",
                    "description": "The user's username. If not provided the email will be used as the username."
                  },
                  "password": {
                    "type": "string",
                    "example": "`.~b\"J<CA95m`bV@",
                    "description": "The user's password."
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "billing-admin",
                        "team-admin",
                        "document-admin",
                        "template-admin"
                      ],
                      "description": "Allows various administrative actions."
                    },
                    "example": [
                      "billing-admin",
                      "team-admin"
                    ],
                    "description": "A list of roles assigned to the user."
                  }
                },
                "required": [
                  "email",
                  "firstName",
                  "lastName"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created. Returns a User resource containing information about the created user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountId": {
                      "type": "number",
                      "example": 100,
                      "description": "The unique ID for the user's account."
                    },
                    "email": {
                      "type": "string",
                      "example": "john-doe@example.com",
                      "description": "The user's email."
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe",
                      "description": "The user's full name."
                    },
                    "userId": {
                      "type": "number",
                      "example": 101,
                      "description": "The unique ID for the user."
                    },
                    "username": {
                      "type": "string",
                      "example": "johndoe",
                      "description": "The user's username."
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "billing-admin",
                          "team-admin",
                          "document-admin",
                          "template-admin"
                        ],
                        "description": "Allows various administrative actions."
                      },
                      "example": [
                        "billing-admin",
                        "team-admin"
                      ],
                      "description": "A list of administrative roles assigned to the user."
                    }
                  },
                  "description": "A standard representation of a user."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Occurs if any input field is invalid."
          },
          "403": {
            "description": "Forbidden. Occurs if the app making the request does not have permission to create users, if the email domain is under domain control by a different account, or if the token requesting to create a user is not on an Enterprise account."
          },
          "409": {
            "description": "Conflict. Occurs if a user with the same email or username already exists."
          }
        }
      }
    },
    "/users/searchByEmail": {
      "post": {
        "summary": "Search Users By Email",
        "operationId": "userEmailSearch",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "ApiKey": [
              "AccountReadonly"
            ]
          },
          {
            "OAuth2": [
              "account.user:readonly"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK. Returns a list of Profile resources containing information about users on the account. Emails that could not be matched are not included.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "number",
                        "example": 100,
                        "description": "The unique ID for the user's account."
                      },
                      "username": {
                        "type": "string",
                        "example": "johndoe",
                        "description": "Username of the user."
                      },
                      "email": {
                        "type": "string",
                        "example": "john-doe@example.com",
                        "description": "Email of the user."
                      },
                      "fullName": {
                        "type": "number",
                        "example": "John Doe",
                        "description": "Full name of the user."
                      },
                      "id": {
                        "type": "string",
                        "example": 101,
                        "description": "ID of the user."
                      }
                    },
                    "description": "The Profile resource contains basic profile information about a user."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Occurs if the request body emails exceed 200 items or if any of the strings in the request body can not be parsed into the email format."
          }
        }
      }
    },
    "/users/me/profile": {
      "get": {
        "summary": "Get Profile",
        "operationId": "getUserProfile",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "ApiKey": [
              "User"
            ]
          },
          {
            "OAuth2": [
              "user.profile"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns a Profile resource containing information about the requesting user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountId": {
                      "type": "number",
                      "example": 100,
                      "description": "The unique ID for the user's account."
                    },
                    "username": {
                      "type": "string",
                      "example": "johndoe",
                      "description": "Username of the user."
                    },
                    "email": {
                      "type": "string",
                      "example": "john-doe@example.com",
                      "description": "Email of the user."
                    },
                    "fullName": {
                      "type": "number",
                      "example": "John Doe",
                      "description": "Full name of the user."
                    },
                    "id": {
                      "type": "string",
                      "example": 101,
                      "description": "ID of the user."
                    }
                  },
                  "description": "The Profile resource contains basic profile information about a user."
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/describeLink": {
      "post": {
        "summary": "Describe Link",
        "operationId": "describeLink",
        "tags": [
          "Unfurling"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "url"
                ],
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "The URL of the Lucid document link to parse information from."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved information about the document link.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "document": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "110808fd-4553-4316-bccf-4f25ff59a532",
                          "description": "Unique identifier of the document."
                        },
                        "page": {
                          "type": "string",
                          "nullable": true,
                          "description": "Page information of the document, if applicable."
                        },
                        "product": {
                          "type": "string",
                          "example": "lucidspark",
                          "description": "The Lucid product the document belongs to."
                        }
                      },
                      "description": "Information about the Document contained in the link if it exists."
                    },
                    "invitation": {
                      "type": "object",
                      "properties": {
                        "invitationId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "inv_288b9365-685b-4bf2-9f6f-8aa9e2082542",
                          "description": "Unique identifier of the invitation."
                        }
                      },
                      "description": "Information about the Invitation contained in the link if it exists."
                    }
                  },
                  "description": "Resource representing information contained in a Lucid link."
                }
              }
            }
          },
          "403": {
            "description": "The URL is not a valid Lucid link."
          }
        },
        "security": [
          {
            "ApiKey": []
          },
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/embeds/link": {
      "get": {
        "summary": "Direct Embed",
        "operationId": "directEmbed",
        "tags": [
          "Unfurling"
        ],
        "parameters": [
          {
            "name": "document",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The URL of the Lucid document link or the documentId retrieved from the Describe Link endpoint."
          },
          {
            "name": "clientId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The client ID obtained during App registration."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - The iframe content displaying the embedded document picker or viewer."
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/documents/{documentId}/embeds/{embedId}": {
      "get": {
        "summary": "Get Document Embed",
        "operationId": "getEmbedInformation",
        "tags": [
          "Embedding Utils"
        ],
        "security": [
          {
            "OAuth2": [
              "lucidchart.document.content.share.embed:readonly",
              "lucidchart.document.app.picker.share.embed:readonly",
              "lucidscale.document.content.share.embed:readonly",
              "lucidscale.document.app.picker.share.embed:readonly",
              "lucidspark.document.content.share.embed:readonly",
              "lucidspark.document.app.picker.share.embed:readonly"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the embedded document to retrieve.",
            "example": "001bd56d-1b10-4196-8ac6-45e3c22bd1c6"
          },
          {
            "name": "embedId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the document embed to retrieve.",
            "example": "ec890631-c150-461c-992f-b96533aa05f4"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns a Document Embed Resource containing information about the requested document embed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "embedId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ec890631-c150-461c-992f-b96533aa05f4",
                      "description": "Unique identifier of the embed."
                    },
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "001bd56d-1b10-4196-8ac6-45e3c22bd1c6",
                      "description": "Unique identifier of the document."
                    },
                    "embedVersion": {
                      "type": "string",
                      "example": "snapshot-version",
                      "description": "The version of the embed."
                    },
                    "created": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-10-01T20:49:36.169Z",
                      "description": "When the embed was created."
                    },
                    "modified": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-10-01T20:49:36.169Z",
                      "description": "When the embed was last modified."
                    }
                  },
                  "description": "Information about the requested Embed."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Occurs when the authorized token does not have permission to access the requested document or embed, or when the requested document or embed does not exist."
          }
        }
      },
      "delete": {
        "summary": "Delete Document Embed",
        "operationId": "deleteEmbed",
        "tags": [
          "Embedding Utils"
        ],
        "security": [
          {
            "OAuth2": [
              "account.info"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the embedded document to retrieve.",
            "example": "001bd56d-1b10-4196-8ac6-45e3c22bd1c6"
          },
          {
            "name": "embedId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the document embed to retrieve.",
            "example": "298f9a4a-09b5-440c-b95e-4d5c2d1aaf49"
          }
        ],
        "responses": {
          "204": {
            "description": "OK. Occurs when the document embed is deleted successfully."
          },
          "403": {
            "description": "Forbidden. Occurs when the access token isn't allowed to delete the embed."
          }
        }
      }
    },
    "/documents/{documentId}/embeds/{embedId}/document": {
      "get": {
        "summary": "Get Document Embed Document",
        "operationId": "getEmbedDocument",
        "tags": [
          "Embedding Utils"
        ],
        "security": [
          {
            "OAuth2": [
              "lucidchart.document.content.share.embed:readonly",
              "lucidchart.document.app.picker.share.embed:readonly",
              "lucidscale.document.content.share.embed:readonly",
              "lucidscale.document.app.picker.share.embed:readonly",
              "lucidspark.document.content.share.embed:readonly",
              "lucidspark.document.app.picker.share.embed:readonly"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the embedded document to retrieve.",
            "example": "001bd56d-1b10-4196-8ac6-45e3c22bd1c6"
          },
          {
            "name": "embedId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the document embed to retrieve.",
            "example": "ec890631-c150-461c-992f-b96533aa05f4"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns a Document Embed Resource containing information about the requested document embed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "embedId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ec890631-c150-461c-992f-b96533aa05f4",
                      "description": "Unique identifier of the embed."
                    },
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "001bd56d-1b10-4196-8ac6-45e3c22bd1c6",
                      "description": "Unique identifier of the document."
                    },
                    "pageCount": {
                      "type": "number",
                      "example": 5,
                      "description": "The number of pages on the document"
                    },
                    "title": {
                      "type": "string",
                      "example": "Documentation example document",
                      "description": "The title of the document."
                    }
                  },
                  "description": "Information about the docuement correlated to the requested Embed."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Occurs when the authorized token does not have permission to access the requested document or embed, or when the requested document or embed does not exist."
          }
        }
      }
    },
    "/documents/{id}/embeds": {
      "post": {
        "summary": "Create Document Embed",
        "operationId": "createEmbed",
        "tags": [
          "Embedding Utils"
        ],
        "security": [
          {
            "OAuth2": [
              "lucidchart.document.content.share.embed",
              "lucidchart.document.app.picker.share.embed",
              "lucidscale.document.content.share.embed",
              "lucidscale.document.app.picker.share.embed",
              "lucidspark.document.content.share.embed",
              "lucidspark.document.app.picker.share.embed"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the document to be embedded.",
            "example": "001bd56d-1b10-4196-8ac6-45e3c22bd1c6"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "embedVersion": {
                    "type": "string",
                    "enum": [
                      "latest-version",
                      "snapshot-version"
                    ],
                    "example": "snapshot-version",
                    "description": "Determines what version of the document will be loaded in the document viewer."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK. Returns a Document Embed Resource containing information about the newly created document embed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "embedId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ec890631-c150-461c-992f-b96533aa05f4",
                      "description": "Unique identifier of the embed."
                    },
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "001bd56d-1b10-4196-8ac6-45e3c22bd1c6",
                      "description": "Unique identifier of the document."
                    },
                    "embedVersion": {
                      "type": "string",
                      "example": "snapshot-version",
                      "description": "The version of the embed."
                    },
                    "created": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-10-01T20:49:36.169Z",
                      "description": "When the embed was created."
                    },
                    "modified": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-10-01T20:49:36.169Z",
                      "description": "When the embed was last modified."
                    }
                  },
                  "description": "Information about the requested Embed."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Occurs if the embed version provided in the request body is invalid."
          },
          "403": {
            "description": "Forbidden. Occurs when the access token isn't allowed to create an embed for this document."
          }
        }
      }
    },
    "/documents/{documentId}/embeds/{embedId}/changeVersion": {
      "post": {
        "summary": "Change Document Embed Version",
        "operationId": "changeEmbedVersion",
        "tags": [
          "Embedding Utils"
        ],
        "security": [
          {
            "OAuth2": [
              "lucidchart.document.content.share.embed",
              "lucidchart.document.app.picker.share.embed",
              "lucidscale.document.content.share.embed",
              "lucidscale.document.app.picker.share.embed",
              "lucidspark.document.content.share.embed",
              "lucidspark.document.app.picker.share.embed"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the embedded document to retrieve.",
            "example": "001bd56d-1b10-4196-8ac6-45e3c22bd1c6"
          },
          {
            "name": "embedId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID of the document embed to retrieve.",
            "example": "298f9a4a-09b5-440c-b95e-4d5c2d1aaf49"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "embedVersion": {
                    "type": "string",
                    "enum": [
                      "latest-version",
                      "snapshot-version"
                    ],
                    "example": "snapshot-version",
                    "description": "Determines what version of the document will be loaded in the document viewer."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK. Returns a Document Embed Resource containing information about the updated document embed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "embedId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ec890631-c150-461c-992f-b96533aa05f4",
                      "description": "Unique identifier of the embed."
                    },
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "001bd56d-1b10-4196-8ac6-45e3c22bd1c6",
                      "description": "Unique identifier of the document."
                    },
                    "embedVersion": {
                      "type": "string",
                      "example": "snapshot-version",
                      "description": "The version of the embed."
                    },
                    "created": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-10-01T20:49:36.169Z",
                      "description": "When the embed was created."
                    },
                    "modified": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-10-01T20:49:36.169Z",
                      "description": "When the embed was last modified."
                    }
                  },
                  "description": "Information about the requested Embed."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Occurs if the embed version provided in the request body is invalid."
          },
          "403": {
            "description": "Forbidden. Occurs when the access token isn't allowed to change the embed version."
          }
        }
      }
    },
    "/documents/pickerToken": {
      "post": {
        "summary": "Generate Document Picker Token",
        "operationId": "generateDocumentPickerToken",
        "tags": [
          "Document Picker"
        ],
        "security": [
          {
            "OAuth2": [
              "lucidchart.document.app.picker",
              "lucidscale.document.app.picker",
              "lucidspark.document.app.picker"
            ]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product": {
                    "type": "string",
                    "description": "Determines which product is used for the document picker. Only documents for this product are shown.",
                    "enum": [
                      "lucidchart",
                      "lucidscale",
                      "lucidspark"
                    ],
                    "example": "lucidchart"
                  },
                  "targetOrigin": {
                    "type": "string",
                    "description": "The domain that will be used to host the webpage in which the document picker will be embedded. This will be used as the targetOrigin parameter in a call to window.postMessage when the user selects a document.",
                    "example": "https://example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - with valid token that can be used to embed a document picker.",
            "content": {
              "application/jwt": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - when parameters are missing or invalid."
          },
          "403": {
            "description": "Forbidden - when the access token is not allowed to generate a document picker token for the provided product."
          }
        }
      }
    },
    "/documents/picker?token=:token": {
      "get": {
        "summary": "Embedded Document Picker",
        "operationId": "embeddedDocumentPicker",
        "tags": [
          "Document Picker"
        ],
        "security": [
          {
            "OAuth2": []
          }
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The document picker token retrieved from the Generate Document Picker Token endpoint."
          },
          {
            "name": "allowDocumentCreation",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Enables the document picker user to create new documents. By default, created documents are not auto selected unless autoSelectCreatedDocument is set to true."
          },
          {
            "name": "autoSelectCreatedDocument",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Enables the document picker to automatically select newly created documents."
          },
          {
            "name": "newDocumenbtTitleSuggestion",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "When create button is enabled, it suggests a default title for the new document."
          },
          {
            "name": "hideCancelButton",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Determines whether the document picker hides the cancel button."
          },
          {
            "name": "onErrorRedirectUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The URL to redirect the user back to if the document picker raises an error."
          }
        ],
        "responses": {
          "200": {
            "description": "The iframe content displaying the embedded document picker.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auditLogs": {
      "get": {
        "summary": "Get Audit Logs",
        "operationId": "getAuditLogs",
        "tags": [
          "Audit Logs"
        ],
        "security": [
          {
            "OAuth2": [
              "account.audit.logs"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "The timestamp from which the audit logs will be returned. Defaults to 14 days prior to the \"to\" parameter if it is defined, otherwise 14 days prior to the current timestamp.\n",
            "example": "2021-01-01T00:00:00Z"
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "The timestamp to which the logs will be returned. Defaults to the current timestamp.\n",
            "example": "2021-01-01T00:00:00Z"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 200
            },
            "description": "The number of audit logs to return per request.\n",
            "example": 100
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "A token used for pagination to retrieve the next page of results when polling audit logs.\n",
            "example": "eyJvIjoiMjAyNC0wOS0wNFQxNzoxNDoyOS4zNjA5NzhaXzU4ODk4NTkxNCJ9"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns an array of audit log events.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "integer",
                        "description": "The unique ID for the account.",
                        "example": 1
                      },
                      "actor": {
                        "type": "object",
                        "description": "Identifies the acting user that triggered the audit log event.",
                        "properties": {
                          "actorType": {
                            "type": "string",
                            "description": "The type of actor",
                            "example": "user"
                          },
                          "actorAccountId": {
                            "type": "integer",
                            "description": "The account ID of the actor.",
                            "example": 1
                          },
                          "actorEmail": {
                            "type": "string",
                            "description": "The email address of the actor.",
                            "example": "user@example.com"
                          },
                          "actorUserId": {
                            "type": "number",
                            "description": "The user ID of the actor.",
                            "example": 100
                          },
                          "actorClient": {
                            "type": "string",
                            "nullable": true,
                            "example": "Chrome/51.0.2704.103 Safari/537.36"
                          },
                          "actorIsExternal": {
                            "type": "boolean",
                            "description": "Whether the actor is external to the account.",
                            "example": false
                          }
                        }
                      },
                      "event": {
                        "type": "object",
                        "description": "Audit event for when a document is opened.",
                        "properties": {
                          "eventType": {
                            "type": "string",
                            "description": "The event type.",
                            "example": "content.document.documentOpened"
                          },
                          "documentId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The ID of the document opened.",
                            "example": "110808fd-4553-4316-bccf-4f25ff59a532"
                          },
                          "product": {
                            "type": "string",
                            "description": "The product of the document.",
                            "example": "lucidchart"
                          },
                          "documentOpenedMethod": {
                            "type": "object",
                            "description": "The method used to open the document.",
                            "properties": {
                              "methodType": {
                                "type": "string",
                                "description": "The method used to open the document.",
                                "example": "InApp"
                              }
                            }
                          }
                        }
                      },
                      "target": {
                        "type": "array",
                        "description": "A list of objects identifying the target of the audit event.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "targetType": {
                              "type": "string",
                              "description": "The type of the target.",
                              "example": "userTarget"
                            },
                            "targetId": {
                              "type": "number",
                              "description": "Unique identifier of the target.",
                              "example": 100
                            },
                            "displayName": {
                              "type": "string",
                              "description": "The display name of the target.",
                              "example": "User Name"
                            },
                            "userEmail": {
                              "type": "string",
                              "format": "email",
                              "description": "The email of the target user.",
                              "example": "user@example.com"
                            },
                            "isExternal": {
                              "type": "boolean",
                              "description": "Whether the target is external to the organization.",
                              "example": false
                            }
                          }
                        }
                      },
                      "flowId": {
                        "type": "string",
                        "nullable": true,
                        "description": "A flow id identifier.",
                        "example": "55ce2349da62cba"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Occurs when the query parameters are invalid."
          },
          "403": {
            "description": "Forbidden. Occurs when the authorized token does not have permission to access audit logs."
          }
        }
      }
    },
    "/teams": {
      "get": {
        "summary": "List Teams",
        "operationId": "listTeams",
        "tags": [
          "Teams"
        ],
        "security": [
          {
            "ApiKey": [
              "TeamsReadonly",
              "TeamsAdmin"
            ]
          },
          {
            "OAuth2": [
              "teams:readonly",
              "teams:admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "header",
            "name": "Lucid-Request-As",
            "required": false,
            "description": "If the requesting user is an account owner, team admin, or team manager with the required permissions and they make\nthe request with the value of “admin” as this header and include an admin scope, the request will be made using\ntheir admin permissions.\n",
            "schema": {
              "type": "string"
            },
            "example": "admin"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "include=memberonly"
              ]
            },
            "description": "The filter to apply to the returned teams. The only supported filter is \"include=memberonly\", which returns\nonly teams that the requesting user is a member of. If no filter is provided, all `open` and `closed` teams on\nthe account are returned, along with `hidden` teams that the requesting user is a member of.\n",
            "example": "include=memberonly"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns a list of Team resources containing information about teams directly accessible to the authenticated user. If requesting as admin, the list includes all teams on the account. If a filter is specified, only teams matching the filter are returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "A standard representation of a team.",
                    "properties": {
                      "id": {
                        "type": "number",
                        "description": "The unique ID for the team.",
                        "example": 123456789
                      },
                      "name": {
                        "type": "string",
                        "description": "The team's name.",
                        "example": "Team Name"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "hidden",
                          "closed",
                          "open"
                        ],
                        "description": "The type of the team",
                        "example": "open"
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time when the team was created.",
                        "example": "2024-01-30T16:29:37Z"
                      },
                      "archived": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time when the team was archived (if it has been archived).",
                        "nullable": true,
                        "example": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Team",
        "operationId": "createTeam",
        "tags": [
          "Teams"
        ],
        "security": [
          {
            "ApiKey": [
              "TeamsEdit",
              "TeamsAdmin"
            ]
          },
          {
            "OAuth2": [
              "teams",
              "teams:admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "header",
            "name": "Lucid-Request-As",
            "required": false,
            "description": "If the requesting user is an account owner, team admin, or team manager with the required permissions and they make\nthe request with the value of “admin” as this header and include an admin scope, the request will be made using\ntheir admin permissions.\n",
            "schema": {
              "type": "string"
            },
            "example": "admin"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The team's name. Max length of name is 80 characters.",
                    "example": "Team Name"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "hidden",
                      "closed",
                      "open"
                    ],
                    "description": "The type of the team",
                    "example": "open"
                  },
                  "users": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "Array of IDs of users to be on the team.",
                    "example": [
                      321,
                      654,
                      987
                    ]
                  }
                },
                "required": [
                  "name",
                  "type",
                  "users"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created. Returns a Team resource containing information about the created team. If requesting as admin, the user making the request will not have been automatically included as a user on the team.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "A standard representation of a team.",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "The unique ID for the team.",
                      "example": 123456789
                    },
                    "name": {
                      "type": "string",
                      "description": "The team's name.",
                      "example": "Team Name"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "hidden",
                        "closed",
                        "open"
                      ],
                      "description": "The type of the team",
                      "example": "open"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the team was created.",
                      "example": "2024-01-30T16:29:37Z"
                    },
                    "archived": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the team was archived (if it has been archived).",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Occurs if the name in the request body is empty or exceeds the maximum allowed length."
          },
          "403": {
            "description": "Forbidden. Occurs if the user making the request does not have permission to create teams."
          },
          "409": {
            "description": "Conflict. Occurs if a team already exists with an identical name."
          }
        }
      }
    },
    "/teams/{id}": {
      "get": {
        "summary": "Get Team",
        "operationId": "getTeam",
        "tags": [
          "Teams"
        ],
        "security": [
          {
            "ApiKey": [
              "TeamsReadonly",
              "TeamsAdmin"
            ]
          },
          {
            "OAuth2": [
              "teams:readonly",
              "teams:admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "header",
            "name": "Lucid-Request-As",
            "required": false,
            "description": "If the requesting user is an account owner, team admin, or team manager with the required permissions and they make\nthe request with the value of “admin” as this header and include an admin scope, the request will be made using\ntheir admin permissions.\n",
            "schema": {
              "type": "string"
            },
            "example": "admin"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "ID of the team to get.",
            "example": 99
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns a Team resource containing information about the specified team. If requesting as admin, a Team resource may be returned even if the authenticated user does not have direct access to the specified team.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "A standard representation of a team.",
                    "properties": {
                      "id": {
                        "type": "number",
                        "description": "The unique ID for the team.",
                        "example": 123456789
                      },
                      "name": {
                        "type": "string",
                        "description": "The team's name.",
                        "example": "Team Name"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "hidden",
                          "closed",
                          "open"
                        ],
                        "description": "The type of the team",
                        "example": "open"
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time when the team was created.",
                        "example": "2024-01-30T16:29:37Z"
                      },
                      "archived": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time when the team was archived (if it has been archived).",
                        "nullable": true,
                        "example": null
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. * if the user making the request does not have access to the specified team. * if the team is not directly accessible by the authenticated user or does not exist."
          }
        }
      }
    },
    "/teams/{id}/users": {
      "get": {
        "summary": "List Users on Team",
        "operationId": "listUsersOnTeam",
        "tags": [
          "Teams"
        ],
        "security": [
          {
            "ApiKey": [
              "TeamsReadonly",
              "TeamsAdmin"
            ]
          },
          {
            "OAuth2": [
              "teams:readonly",
              "teams:admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "header",
            "name": "Lucid-Request-As",
            "required": false,
            "description": "If the requesting user is an account owner, team admin, or team manager with the required permissions and they make\nthe request with the value of “admin” as this header and include an admin scope, the request will be made using\ntheir admin permissions.\n",
            "schema": {
              "type": "string"
            },
            "example": "admin"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "ID of the team to be queried.",
            "example": 99
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns a list of Profile resources containing basic information about users on the specified team. If requesting as admin, Profile resources may be returned even if the authenticated user does not have direct access to the specified team.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "number",
                        "example": 100,
                        "description": "The unique ID for the user's account."
                      },
                      "username": {
                        "type": "string",
                        "example": "johndoe",
                        "description": "Username of the user."
                      },
                      "email": {
                        "type": "string",
                        "example": "john-doe@example.com",
                        "description": "Email of the user."
                      },
                      "fullName": {
                        "type": "number",
                        "example": "John Doe",
                        "description": "Full name of the user."
                      },
                      "id": {
                        "type": "string",
                        "example": 101,
                        "description": "ID of the user."
                      }
                    },
                    "description": "The Profile resource contains basic profile information about a user."
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. * if the user making the request does not have access to the specified team. * if the team has been archived, is not directly accessible by the authenticated user, or does not exist."
          }
        }
      }
    },
    "/teams/{id}/users/add": {
      "post": {
        "summary": "Add Users to Team",
        "operationId": "addUsersToTeam",
        "tags": [
          "Teams"
        ],
        "security": [
          {
            "ApiKey": [
              "TeamsEdit",
              "TeamsAdmin"
            ]
          },
          {
            "OAuth2": [
              "teams",
              "teams:admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "header",
            "name": "Lucid-Request-As",
            "required": false,
            "description": "If the requesting user is an account owner, team admin, or team manager with the required permissions and they make\nthe request with the value of “admin” as this header and include an admin scope, the request will be made using\ntheir admin permissions.\n",
            "schema": {
              "type": "string"
            },
            "example": "admin"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "ID of the team to which to add users.",
            "example": 99
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "users": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "Array of IDs of users to add to the team.",
                    "example": [
                      321,
                      654,
                      987
                    ]
                  }
                },
                "required": [
                  "users"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content. The users were successfully added to the team. If requesting as admin, users may be have been added even though the authenticated user does not have direct access to the specified team."
          },
          "403": {
            "description": "Forbidden.\n* if not all the specified users are on the authenticated account.\n* if the user making the request does not have permission to edit teams.\n* if the user making the request does not have access to the specified team.\n"
          }
        }
      }
    },
    "/teams/{id}/users/remove": {
      "post": {
        "summary": "Remove Users from Team",
        "operationId": "removeUsersFromTeam",
        "tags": [
          "Teams"
        ],
        "security": [
          {
            "ApiKey": [
              "TeamsEdit",
              "TeamsAdmin"
            ]
          },
          {
            "OAuth2": [
              "teams",
              "teams:admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "header",
            "name": "Lucid-Request-As",
            "required": false,
            "description": "If the requesting user is an account owner, team admin, or team manager with the required permissions and they make\nthe request with the value of “admin” as this header and include an admin scope, the request will be made using\ntheir admin permissions.\n",
            "schema": {
              "type": "string"
            },
            "example": "admin"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "ID of the team from which to remove users.",
            "example": 99
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "users": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "Array of IDs of users to remove from the team.",
                    "example": [
                      321,
                      654,
                      987
                    ]
                  }
                },
                "required": [
                  "users"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content. The users were successfully removed from the team. If requesting as admin, users may be have been removed even if the authenticated user does not have direct access to the specified team."
          },
          "400": {
            "description": "Bad Request.\n* if the user making the request attempts to remove all users from the team.\n* if not all the specified users are members of the team.\n"
          },
          "403": {
            "description": "Forbidden.\n* if the user making the request does not have permission to edit teams.\n* if the user making the request does not have access to the specified team.\n"
          }
        }
      }
    },
    "/teams/{id}/archive": {
      "post": {
        "summary": "Archive Team",
        "operationId": "archiveTeam",
        "tags": [
          "Teams"
        ],
        "security": [
          {
            "ApiKey": [
              "TeamsEdit",
              "TeamsAdmin"
            ]
          },
          {
            "OAuth2": [
              "teams",
              "teams:admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "header",
            "name": "Lucid-Request-As",
            "required": false,
            "description": "If the requesting user is an account owner, team admin, or team manager with the required permissions and they make\nthe request with the value of “admin” as this header and include an admin scope, the request will be made using\ntheir admin permissions.\n",
            "schema": {
              "type": "string"
            },
            "example": "admin"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "ID of the team to be archived.",
            "example": 99
          }
        ],
        "responses": {
          "204": {
            "description": "No Content. The team was successfully archived. If requesting as admin, the specified team may have been archived even though the authenticated user did not have direct access to it."
          },
          "403": {
            "description": "Forbidden.\n* if the user making the request does not have permission to edit teams.\n* if the user making the request does not have access to the specified team.\n"
          }
        }
      }
    },
    "/teams/{id}/restore": {
      "post": {
        "summary": "Restore Team",
        "operationId": "restoreTeam",
        "tags": [
          "Teams"
        ],
        "security": [
          {
            "ApiKey": [
              "TeamsEdit",
              "TeamsAdmin"
            ]
          },
          {
            "OAuth2": [
              "teams",
              "teams:admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Lucid-Api-Version",
            "required": true,
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "The API version used in the request.",
            "example": "1"
          },
          {
            "in": "header",
            "name": "Lucid-Request-As",
            "required": false,
            "description": "If the requesting user is an account owner, team admin, or team manager with the required permissions and they make\nthe request with the value of “admin” as this header and include an admin scope, the request will be made using\ntheir admin permissions.\n",
            "schema": {
              "type": "string"
            },
            "example": "admin"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            },
            "description": "ID of the team to be restored.",
            "example": 99
          }
        ],
        "responses": {
          "204": {
            "description": "No Content. The team was successfully restored. If requesting as admin, the specified team may have been restored even though the authenticated user did not have direct access to it."
          },
          "403": {
            "description": "Forbidden.\n* if the user making the request does not have permission to edit teams.\n* if the user making the request does not have access to the specified team.\n"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountInformationResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique ID for the authenticated account."
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "The name assigned to the account. This field is null if no name has been assigned. Names are usually set by an admin and can be a helpful way to orient a user by informing them about which account an app will interact with."
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "Role": {
        "type": "string",
        "enum": [
          "owner",
          "editandshare",
          "edit",
          "comment",
          "view"
        ],
        "description": "The Collaborator Role on the document or folder"
      },
      "Product": {
        "type": "string",
        "enum": [
          "lucidchart",
          "lucidscale",
          "lucidspark"
        ],
        "example": "lucidchart"
      },
      "DocumentUserCollaborator": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "string",
            "format": "uuid",
            "description": "Document ID"
          },
          "userId": {
            "type": "integer",
            "description": "User ID"
          },
          "role": {
            "type": "string",
            "enum": [
              "owner",
              "editandshare",
              "edit",
              "comment",
              "view"
            ],
            "description": "The Collaborator Role on the document or folder"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the collaboration was created"
          }
        },
        "required": [
          "documentId",
          "userId",
          "role",
          "created"
        ]
      },
      "DocumentTeamCollaborator": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "string",
            "format": "uuid",
            "description": "Document ID"
          },
          "teamId": {
            "type": "integer",
            "description": "Team ID"
          },
          "role": {
            "type": "string",
            "enum": [
              "owner",
              "editandshare",
              "edit",
              "comment",
              "view"
            ],
            "description": "The Collaborator Role on the document or folder"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the collaboration was created"
          }
        },
        "required": [
          "documentId",
          "teamId",
          "role",
          "created"
        ]
      },
      "FolderUserCollaborator": {
        "type": "object",
        "properties": {
          "folderId": {
            "type": "integer",
            "description": "Folder ID"
          },
          "userId": {
            "type": "integer",
            "description": "User ID"
          },
          "role": {
            "type": "string",
            "enum": [
              "owner",
              "editandshare",
              "edit",
              "comment",
              "view"
            ],
            "description": "The Collaborator Role on the document or folder"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the collaboration was created"
          }
        },
        "required": [
          "folderId",
          "userId",
          "role",
          "created"
        ]
      },
      "FolderGroupCollaborator": {
        "type": "object",
        "properties": {
          "folderId": {
            "type": "integer",
            "description": "Folder ID"
          },
          "groupId": {
            "type": "integer",
            "description": "Group ID"
          },
          "role": {
            "type": "string",
            "enum": [
              "owner",
              "editandshare",
              "edit",
              "comment",
              "view"
            ],
            "description": "The Collaborator Role on the document or folder"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the collaboration was created"
          }
        },
        "required": [
          "folderId",
          "groupId",
          "role",
          "created"
        ]
      },
      "FolderTeamCollaborator": {
        "type": "object",
        "properties": {
          "folderId": {
            "type": "integer",
            "description": "Folder ID"
          },
          "teamId": {
            "type": "integer",
            "description": "Team ID"
          },
          "role": {
            "type": "string",
            "enum": [
              "owner",
              "editandshare",
              "edit",
              "comment",
              "view"
            ],
            "description": "The Collaborator Role on the document or folder"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the collaboration was created"
          }
        },
        "required": [
          "folderId",
          "teamId",
          "role",
          "created"
        ]
      },
      "CustomAttribute": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "singleLineText",
              "multiLineText",
              "singleSelectDropdown",
              "multiSelectDropdown",
              "webLink",
              "numericalRange",
              "hierarchicalDropdown"
            ],
            "description": "The custom attribute type",
            "example": "singleLineText"
          },
          "name": {
            "type": "string",
            "description": "Title of the custom attribute. hierarchicalDropdown attributes do not have names.",
            "example": "Sample Label"
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Custom data key"
                        },
                        "value": {
                          "type": "string",
                          "description": "Custom data value"
                        }
                      },
                      "description": "Object representing a key-value pair of data.",
                      "required": [
                        "name",
                        "value"
                      ],
                      "example": {
                        "name": "City",
                        "value": "New York"
                      }
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            ],
            "description": "The value assigned to the custom attribute. The type of this value is determined by the Attribute Type.",
            "example": null
          }
        },
        "description": "Object representing a custom attribute value for a document.",
        "required": [
          "type"
        ]
      },
      "DataPair": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Custom data key"
          },
          "value": {
            "type": "string",
            "description": "Custom data value"
          }
        },
        "description": "Object representing a key-value pair of data.",
        "required": [
          "name",
          "value"
        ],
        "example": {
          "name": "City",
          "value": "New York"
        }
      },
      "Document": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique ID of the document",
            "example": "110808fd-4553-4316-bccf-4f25ff59a532"
          },
          "title": {
            "type": "string",
            "description": "Title of the document",
            "example": "document title"
          },
          "editUrl": {
            "type": "string",
            "format": "uri",
            "description": "Link to edit the document",
            "example": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/edit"
          },
          "viewUrl": {
            "type": "string",
            "format": "uri",
            "description": "Link to view the document",
            "example": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/view"
          },
          "version": {
            "type": "integer",
            "description": "Most recent version",
            "example": 101
          },
          "pageCount": {
            "type": "integer",
            "description": "Number of pages within the document",
            "example": 5
          },
          "canEdit": {
            "type": "boolean",
            "description": "If requesting user can edit the document",
            "example": false
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time of when the document was created",
            "example": "2019-04-22T13:47:23Z"
          },
          "creatorId": {
            "type": "integer",
            "description": "ID of user who created and owns the document",
            "example": 12345
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time of when the document was last modified",
            "example": "2020-06-26T16:29:37Z"
          },
          "lastModifiedUserId": {
            "type": "integer",
            "description": "ID of user who most recently modified the document",
            "example": 54321
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "singleLineText",
                    "multiLineText",
                    "singleSelectDropdown",
                    "multiSelectDropdown",
                    "webLink",
                    "numericalRange",
                    "hierarchicalDropdown"
                  ],
                  "description": "The custom attribute type",
                  "example": "singleLineText"
                },
                "name": {
                  "type": "string",
                  "description": "Title of the custom attribute. hierarchicalDropdown attributes do not have names.",
                  "example": "Sample Label"
                },
                "value": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Custom data key"
                              },
                              "value": {
                                "type": "string",
                                "description": "Custom data value"
                              }
                            },
                            "description": "Object representing a key-value pair of data.",
                            "required": [
                              "name",
                              "value"
                            ],
                            "example": {
                              "name": "City",
                              "value": "New York"
                            }
                          },
                          {
                            "type": "string"
                          }
                        ]
                      }
                    }
                  ],
                  "description": "The value assigned to the custom attribute. The type of this value is determined by the Attribute Type.",
                  "example": null
                }
              },
              "description": "Object representing a custom attribute value for a document.",
              "required": [
                "type"
              ]
            },
            "description": "List of any custom attributes belonging to the document. Populated for Enterprise Accounts only.",
            "example": []
          },
          "customTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of any custom tags assigned to the document",
            "example": [
              "in progress"
            ]
          },
          "product": {
            "type": "string",
            "enum": [
              "lucidchart",
              "lucidscale",
              "lucidspark"
            ],
            "example": "lucidchart"
          },
          "status": {
            "type": "string",
            "nullable": true,
            "description": "Current assigned status of the document",
            "example": "Complete"
          },
          "classification": {
            "type": "string",
            "nullable": true,
            "description": "Current assigned classification of the document",
            "example": "Private"
          },
          "trashed": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "If defined, the timestamp when the document was moved to the trash",
            "example": null
          },
          "parent": {
            "type": "integer",
            "nullable": true,
            "description": "ID of the parent folder",
            "example": null
          },
          "owner": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Id of either the user or the account, depending on the type of the document user resource.",
                "example": 123456
              },
              "type": {
                "type": "string",
                "description": "Specifies if the owner resource is referring to a user or an account. Value will be either \"user\" or \"account\".",
                "example": "user"
              },
              "name": {
                "type": "string",
                "description": "Full name of the user that owns this document. This field is excluded if this document is owned by an account.",
                "example": "John Doe"
              }
            }
          }
        },
        "required": [
          "documentId",
          "title",
          "editUrl",
          "viewUrl",
          "version",
          "pageCount",
          "canEdit",
          "created",
          "creatorId",
          "lastModified",
          "lastModifiedUserId",
          "customAttributes",
          "customTags",
          "product"
        ],
        "example": {
          "documentId": "110808fd-4553-4316-bccf-4f25ff59a532",
          "title": "document title",
          "editUrl": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/edit",
          "viewUrl": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/view",
          "version": 101,
          "pageCount": 5,
          "canEdit": false,
          "created": "2019-04-22T13:47:23Z",
          "creatorId": 12345,
          "lastModified": "2020-06-26T16:29:37Z",
          "lastModifiedUserId": 54321,
          "customAttributes": [],
          "customTags": [
            "in progress"
          ],
          "product": "lucidchart",
          "status": "Complete",
          "classification": "Private",
          "trashed": null,
          "parent": null,
          "owner": {
            "id": 123456,
            "type": "user",
            "name": "John Doe"
          }
        }
      },
      "DocumentContent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Document ID",
            "example": "8e7b19ec-27ff-40e3-beb8-03f51b1661b2"
          },
          "title": {
            "type": "string",
            "description": "Title of the document",
            "example": "document title"
          },
          "product": {
            "type": "string",
            "enum": [
              "lucidchart",
              "lucidscale",
              "lucidspark"
            ],
            "example": "lucidchart"
          },
          "pages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Page ID",
                  "example": "YGcM5DNywbTK"
                },
                "title": {
                  "type": "string",
                  "description": "Title of the page",
                  "example": "document page title"
                },
                "index": {
                  "type": "integer",
                  "description": "0-Based index of the page in the document",
                  "example": 0
                },
                "items": {
                  "description": "Shapes, Lines, Groups, and Layers on the page",
                  "type": "object",
                  "properties": {
                    "shapes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Shape ID",
                            "example": "VTAu-oQASzul"
                          },
                          "class": {
                            "type": "string",
                            "description": "A unique string representing the type of the shape (e.g., ProcessBlock)",
                            "example": "ProcessBlock"
                          },
                          "textAreas": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "label": {
                                  "type": "string",
                                  "description": "Text area label",
                                  "example": "Text"
                                },
                                "text": {
                                  "type": "string",
                                  "description": "Text displayed in the text area. This is plain text. All formatting has been removed & formulas evaluated.",
                                  "example": "Start here"
                                }
                              },
                              "description": "Object representing a text area on a Shape or Line.",
                              "required": [
                                "label",
                                "text"
                              ]
                            }
                          },
                          "customData": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Custom data key"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Custom data value"
                                }
                              },
                              "description": "Object representing a key-value pair of data.",
                              "required": [
                                "name",
                                "value"
                              ],
                              "example": {
                                "name": "City",
                                "value": "New York"
                              }
                            }
                          },
                          "linkedData": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "collection_id": {
                                  "type": "string",
                                  "description": "Id of the collection containing the data",
                                  "example": "ABAuwlf2BTy8"
                                },
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Custom data key"
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Custom data value"
                                      }
                                    },
                                    "description": "Object representing a key-value pair of data.",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "example": {
                                      "name": "City",
                                      "value": "New York"
                                    }
                                  },
                                  "description": "Key-value pairs from the dataset"
                                },
                                "primaryKeyValue": {
                                  "type": "string",
                                  "description": "The value of the primary key of the dataset",
                                  "example": "Pkey Value"
                                }
                              },
                              "description": "Object representing data linked to a resource on a document.",
                              "required": [
                                "data",
                                "primaryKeyValue"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "class",
                          "textAreas",
                          "customData",
                          "linkedData"
                        ],
                        "description": "Object representing a shape placed on a page of a document. Note that the ItemId of a shape is unique across all groups, layers, shapes, and lines."
                      },
                      "description": "Array of Shape resources"
                    },
                    "lines": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Line ID",
                            "example": "VTAuwAeC0_R1"
                          },
                          "endpoint1": {
                            "type": "object",
                            "properties": {
                              "style": {
                                "type": "string",
                                "description": "Line end style",
                                "example": "Arrow"
                              },
                              "connectedTo": {
                                "type": "string",
                                "nullable": true,
                                "description": "Id of shape or line the line is connected to",
                                "example": null
                              }
                            },
                            "description": "Object representing the endpoint of a Line.",
                            "required": [
                              "style",
                              "connectedTo"
                            ]
                          },
                          "endpoint2": {
                            "type": "object",
                            "properties": {
                              "style": {
                                "type": "string",
                                "description": "Line end style",
                                "example": "Arrow"
                              },
                              "connectedTo": {
                                "type": "string",
                                "nullable": true,
                                "description": "Id of shape or line the line is connected to",
                                "example": null
                              }
                            },
                            "description": "Object representing the endpoint of a Line.",
                            "required": [
                              "style",
                              "connectedTo"
                            ]
                          },
                          "textAreas": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "label": {
                                  "type": "string",
                                  "description": "Text area label",
                                  "example": "Text"
                                },
                                "text": {
                                  "type": "string",
                                  "description": "Text displayed in the text area. This is plain text. All formatting has been removed & formulas evaluated.",
                                  "example": "Start here"
                                }
                              },
                              "description": "Object representing a text area on a Shape or Line.",
                              "required": [
                                "label",
                                "text"
                              ]
                            }
                          },
                          "customData": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Custom data key"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Custom data value"
                                }
                              },
                              "description": "Object representing a key-value pair of data.",
                              "required": [
                                "name",
                                "value"
                              ],
                              "example": {
                                "name": "City",
                                "value": "New York"
                              }
                            }
                          },
                          "linkedData": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "collection_id": {
                                  "type": "string",
                                  "description": "Id of the collection containing the data",
                                  "example": "ABAuwlf2BTy8"
                                },
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Custom data key"
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Custom data value"
                                      }
                                    },
                                    "description": "Object representing a key-value pair of data.",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "example": {
                                      "name": "City",
                                      "value": "New York"
                                    }
                                  },
                                  "description": "Key-value pairs from the dataset"
                                },
                                "primaryKeyValue": {
                                  "type": "string",
                                  "description": "The value of the primary key of the dataset",
                                  "example": "Pkey Value"
                                }
                              },
                              "description": "Object representing data linked to a resource on a document.",
                              "required": [
                                "data",
                                "primaryKeyValue"
                              ]
                            }
                          }
                        },
                        "description": "Object representing a line on the page of a document. Note that the ItemId of a line is unique across all groups, layers, shapes, and lines.",
                        "required": [
                          "id",
                          "endpoint1",
                          "endpoint2",
                          "textAreas",
                          "customData",
                          "linkedData"
                        ]
                      },
                      "description": "Array of Line resources"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Group ID",
                            "example": "VTAu-dl6qtyx"
                          },
                          "members": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Array of IDs of shapes, lines, & groups contained within the group",
                            "example": [
                              "VTAuCB8~evzW",
                              "VTAuo_Y56.q~"
                            ]
                          },
                          "customData": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Custom data key"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Custom data value"
                                }
                              },
                              "description": "Object representing a key-value pair of data.",
                              "required": [
                                "name",
                                "value"
                              ],
                              "example": {
                                "name": "City",
                                "value": "New York"
                              }
                            }
                          },
                          "linkedData": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "collection_id": {
                                  "type": "string",
                                  "description": "Id of the collection containing the data",
                                  "example": "ABAuwlf2BTy8"
                                },
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Custom data key"
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Custom data value"
                                      }
                                    },
                                    "description": "Object representing a key-value pair of data.",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "example": {
                                      "name": "City",
                                      "value": "New York"
                                    }
                                  },
                                  "description": "Key-value pairs from the dataset"
                                },
                                "primaryKeyValue": {
                                  "type": "string",
                                  "description": "The value of the primary key of the dataset",
                                  "example": "Pkey Value"
                                }
                              },
                              "description": "Object representing data linked to a resource on a document.",
                              "required": [
                                "data",
                                "primaryKeyValue"
                              ]
                            }
                          }
                        },
                        "description": "Object representing a group on the page of a document. Note that the ItemId of a group is unique across all groups, layers, shapes, and lines.",
                        "required": [
                          "id",
                          "members"
                        ]
                      },
                      "description": "Array of Group resources"
                    },
                    "layers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Layer ID",
                            "example": "VTAu-dl6qtyx"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the layer",
                            "example": "Layer 1"
                          },
                          "members": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Array of IDs of shapes, lines, & groups contained within the layer",
                            "example": [
                              "VTAuCB8~evzW",
                              "VTAuo_Y56.q~"
                            ]
                          },
                          "customData": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Custom data key"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Custom data value"
                                }
                              },
                              "description": "Object representing a key-value pair of data.",
                              "required": [
                                "name",
                                "value"
                              ],
                              "example": {
                                "name": "City",
                                "value": "New York"
                              }
                            }
                          },
                          "linkedData": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "collection_id": {
                                  "type": "string",
                                  "description": "Id of the collection containing the data",
                                  "example": "ABAuwlf2BTy8"
                                },
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Custom data key"
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Custom data value"
                                      }
                                    },
                                    "description": "Object representing a key-value pair of data.",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "example": {
                                      "name": "City",
                                      "value": "New York"
                                    }
                                  },
                                  "description": "Key-value pairs from the dataset"
                                },
                                "primaryKeyValue": {
                                  "type": "string",
                                  "description": "The value of the primary key of the dataset",
                                  "example": "Pkey Value"
                                }
                              },
                              "description": "Object representing data linked to a resource on a document.",
                              "required": [
                                "data",
                                "primaryKeyValue"
                              ]
                            }
                          }
                        },
                        "description": "Object representing a layer on the page of a document. Note that the ItemId of a layer is unique across all groups, layers, shapes, and lines.",
                        "required": [
                          "id",
                          "name",
                          "members",
                          "customData",
                          "linkedData"
                        ]
                      },
                      "description": "Array of Layer resources"
                    }
                  },
                  "required": [
                    "shapes",
                    "lines",
                    "groups",
                    "layers"
                  ]
                },
                "customData": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Custom data key"
                      },
                      "value": {
                        "type": "string",
                        "description": "Custom data value"
                      }
                    },
                    "description": "Object representing a key-value pair of data.",
                    "required": [
                      "name",
                      "value"
                    ],
                    "example": {
                      "name": "City",
                      "value": "New York"
                    }
                  },
                  "description": "Array of Data Pair resources linked to the page"
                },
                "linkedData": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "collection_id": {
                        "type": "string",
                        "description": "Id of the collection containing the data",
                        "example": "ABAuwlf2BTy8"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Custom data key"
                            },
                            "value": {
                              "type": "string",
                              "description": "Custom data value"
                            }
                          },
                          "description": "Object representing a key-value pair of data.",
                          "required": [
                            "name",
                            "value"
                          ],
                          "example": {
                            "name": "City",
                            "value": "New York"
                          }
                        },
                        "description": "Key-value pairs from the dataset"
                      },
                      "primaryKeyValue": {
                        "type": "string",
                        "description": "The value of the primary key of the dataset",
                        "example": "Pkey Value"
                      }
                    },
                    "description": "Object representing data linked to a resource on a document.",
                    "required": [
                      "data",
                      "primaryKeyValue"
                    ]
                  },
                  "description": "Array of Linked Data resources linked to the page"
                }
              },
              "description": "Object representing a single page of a Lucidchart document.",
              "required": [
                "id",
                "title",
                "index",
                "items",
                "customData",
                "linkedData"
              ],
              "example": {
                "id": "YGcM5DNywbTK",
                "title": "document page title",
                "index": 0,
                "items": {
                  "shapes": [],
                  "lines": [],
                  "groups": [],
                  "layers": []
                },
                "customData": [],
                "linkedData": []
              }
            },
            "description": "Array of Page resources on the document"
          },
          "data": {
            "description": "Data contained on the document",
            "type": "object",
            "properties": {
              "collections": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of the collection",
                      "example": "ABAuwlf2BTy8"
                    },
                    "name": {
                      "type": "string",
                      "description": "Collection name",
                      "example": "Collection 1"
                    },
                    "primaryKey": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The primary key column name",
                      "example": [
                        "PKey 1"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "primaryKey"
                  ],
                  "description": "A collection is a container inside of a source of data. A data source can have many collections, but a collection can only belong to one data source. A collection can be thought of as a tab or individual sheet in a spreadsheet file."
                },
                "description": "Array of collections"
              }
            },
            "required": [
              "collections"
            ]
          }
        },
        "description": "Object representing the contents of a Lucidchart document",
        "required": [
          "id",
          "title",
          "product",
          "pages",
          "data"
        ],
        "example": {
          "id": "8e7b19ec-27ff-40e3-beb8-03f51b1661b2",
          "title": "document title",
          "product": "lucidchart",
          "pages": [],
          "data": {
            "collections": []
          }
        }
      },
      "DocumentOwner": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Id of either the user or the account, depending on the type of the document user resource.",
            "example": 123456
          },
          "type": {
            "type": "string",
            "description": "Specifies if the owner resource is referring to a user or an account. Value will be either \"user\" or \"account\".",
            "example": "user"
          },
          "name": {
            "type": "string",
            "description": "Full name of the user that owns this document. This field is excluded if this document is owned by an account.",
            "example": "John Doe"
          }
        }
      },
      "Page": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Page ID",
            "example": "YGcM5DNywbTK"
          },
          "title": {
            "type": "string",
            "description": "Title of the page",
            "example": "document page title"
          },
          "index": {
            "type": "integer",
            "description": "0-Based index of the page in the document",
            "example": 0
          },
          "items": {
            "description": "Shapes, Lines, Groups, and Layers on the page",
            "type": "object",
            "properties": {
              "shapes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Shape ID",
                      "example": "VTAu-oQASzul"
                    },
                    "class": {
                      "type": "string",
                      "description": "A unique string representing the type of the shape (e.g., ProcessBlock)",
                      "example": "ProcessBlock"
                    },
                    "textAreas": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "label": {
                            "type": "string",
                            "description": "Text area label",
                            "example": "Text"
                          },
                          "text": {
                            "type": "string",
                            "description": "Text displayed in the text area. This is plain text. All formatting has been removed & formulas evaluated.",
                            "example": "Start here"
                          }
                        },
                        "description": "Object representing a text area on a Shape or Line.",
                        "required": [
                          "label",
                          "text"
                        ]
                      }
                    },
                    "customData": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Custom data key"
                          },
                          "value": {
                            "type": "string",
                            "description": "Custom data value"
                          }
                        },
                        "description": "Object representing a key-value pair of data.",
                        "required": [
                          "name",
                          "value"
                        ],
                        "example": {
                          "name": "City",
                          "value": "New York"
                        }
                      }
                    },
                    "linkedData": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "collection_id": {
                            "type": "string",
                            "description": "Id of the collection containing the data",
                            "example": "ABAuwlf2BTy8"
                          },
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Custom data key"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Custom data value"
                                }
                              },
                              "description": "Object representing a key-value pair of data.",
                              "required": [
                                "name",
                                "value"
                              ],
                              "example": {
                                "name": "City",
                                "value": "New York"
                              }
                            },
                            "description": "Key-value pairs from the dataset"
                          },
                          "primaryKeyValue": {
                            "type": "string",
                            "description": "The value of the primary key of the dataset",
                            "example": "Pkey Value"
                          }
                        },
                        "description": "Object representing data linked to a resource on a document.",
                        "required": [
                          "data",
                          "primaryKeyValue"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "class",
                    "textAreas",
                    "customData",
                    "linkedData"
                  ],
                  "description": "Object representing a shape placed on a page of a document. Note that the ItemId of a shape is unique across all groups, layers, shapes, and lines."
                },
                "description": "Array of Shape resources"
              },
              "lines": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Line ID",
                      "example": "VTAuwAeC0_R1"
                    },
                    "endpoint1": {
                      "type": "object",
                      "properties": {
                        "style": {
                          "type": "string",
                          "description": "Line end style",
                          "example": "Arrow"
                        },
                        "connectedTo": {
                          "type": "string",
                          "nullable": true,
                          "description": "Id of shape or line the line is connected to",
                          "example": null
                        }
                      },
                      "description": "Object representing the endpoint of a Line.",
                      "required": [
                        "style",
                        "connectedTo"
                      ]
                    },
                    "endpoint2": {
                      "type": "object",
                      "properties": {
                        "style": {
                          "type": "string",
                          "description": "Line end style",
                          "example": "Arrow"
                        },
                        "connectedTo": {
                          "type": "string",
                          "nullable": true,
                          "description": "Id of shape or line the line is connected to",
                          "example": null
                        }
                      },
                      "description": "Object representing the endpoint of a Line.",
                      "required": [
                        "style",
                        "connectedTo"
                      ]
                    },
                    "textAreas": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "label": {
                            "type": "string",
                            "description": "Text area label",
                            "example": "Text"
                          },
                          "text": {
                            "type": "string",
                            "description": "Text displayed in the text area. This is plain text. All formatting has been removed & formulas evaluated.",
                            "example": "Start here"
                          }
                        },
                        "description": "Object representing a text area on a Shape or Line.",
                        "required": [
                          "label",
                          "text"
                        ]
                      }
                    },
                    "customData": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Custom data key"
                          },
                          "value": {
                            "type": "string",
                            "description": "Custom data value"
                          }
                        },
                        "description": "Object representing a key-value pair of data.",
                        "required": [
                          "name",
                          "value"
                        ],
                        "example": {
                          "name": "City",
                          "value": "New York"
                        }
                      }
                    },
                    "linkedData": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "collection_id": {
                            "type": "string",
                            "description": "Id of the collection containing the data",
                            "example": "ABAuwlf2BTy8"
                          },
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Custom data key"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Custom data value"
                                }
                              },
                              "description": "Object representing a key-value pair of data.",
                              "required": [
                                "name",
                                "value"
                              ],
                              "example": {
                                "name": "City",
                                "value": "New York"
                              }
                            },
                            "description": "Key-value pairs from the dataset"
                          },
                          "primaryKeyValue": {
                            "type": "string",
                            "description": "The value of the primary key of the dataset",
                            "example": "Pkey Value"
                          }
                        },
                        "description": "Object representing data linked to a resource on a document.",
                        "required": [
                          "data",
                          "primaryKeyValue"
                        ]
                      }
                    }
                  },
                  "description": "Object representing a line on the page of a document. Note that the ItemId of a line is unique across all groups, layers, shapes, and lines.",
                  "required": [
                    "id",
                    "endpoint1",
                    "endpoint2",
                    "textAreas",
                    "customData",
                    "linkedData"
                  ]
                },
                "description": "Array of Line resources"
              },
              "groups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Group ID",
                      "example": "VTAu-dl6qtyx"
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Array of IDs of shapes, lines, & groups contained within the group",
                      "example": [
                        "VTAuCB8~evzW",
                        "VTAuo_Y56.q~"
                      ]
                    },
                    "customData": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Custom data key"
                          },
                          "value": {
                            "type": "string",
                            "description": "Custom data value"
                          }
                        },
                        "description": "Object representing a key-value pair of data.",
                        "required": [
                          "name",
                          "value"
                        ],
                        "example": {
                          "name": "City",
                          "value": "New York"
                        }
                      }
                    },
                    "linkedData": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "collection_id": {
                            "type": "string",
                            "description": "Id of the collection containing the data",
                            "example": "ABAuwlf2BTy8"
                          },
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Custom data key"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Custom data value"
                                }
                              },
                              "description": "Object representing a key-value pair of data.",
                              "required": [
                                "name",
                                "value"
                              ],
                              "example": {
                                "name": "City",
                                "value": "New York"
                              }
                            },
                            "description": "Key-value pairs from the dataset"
                          },
                          "primaryKeyValue": {
                            "type": "string",
                            "description": "The value of the primary key of the dataset",
                            "example": "Pkey Value"
                          }
                        },
                        "description": "Object representing data linked to a resource on a document.",
                        "required": [
                          "data",
                          "primaryKeyValue"
                        ]
                      }
                    }
                  },
                  "description": "Object representing a group on the page of a document. Note that the ItemId of a group is unique across all groups, layers, shapes, and lines.",
                  "required": [
                    "id",
                    "members"
                  ]
                },
                "description": "Array of Group resources"
              },
              "layers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Layer ID",
                      "example": "VTAu-dl6qtyx"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the layer",
                      "example": "Layer 1"
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Array of IDs of shapes, lines, & groups contained within the layer",
                      "example": [
                        "VTAuCB8~evzW",
                        "VTAuo_Y56.q~"
                      ]
                    },
                    "customData": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Custom data key"
                          },
                          "value": {
                            "type": "string",
                            "description": "Custom data value"
                          }
                        },
                        "description": "Object representing a key-value pair of data.",
                        "required": [
                          "name",
                          "value"
                        ],
                        "example": {
                          "name": "City",
                          "value": "New York"
                        }
                      }
                    },
                    "linkedData": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "collection_id": {
                            "type": "string",
                            "description": "Id of the collection containing the data",
                            "example": "ABAuwlf2BTy8"
                          },
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Custom data key"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Custom data value"
                                }
                              },
                              "description": "Object representing a key-value pair of data.",
                              "required": [
                                "name",
                                "value"
                              ],
                              "example": {
                                "name": "City",
                                "value": "New York"
                              }
                            },
                            "description": "Key-value pairs from the dataset"
                          },
                          "primaryKeyValue": {
                            "type": "string",
                            "description": "The value of the primary key of the dataset",
                            "example": "Pkey Value"
                          }
                        },
                        "description": "Object representing data linked to a resource on a document.",
                        "required": [
                          "data",
                          "primaryKeyValue"
                        ]
                      }
                    }
                  },
                  "description": "Object representing a layer on the page of a document. Note that the ItemId of a layer is unique across all groups, layers, shapes, and lines.",
                  "required": [
                    "id",
                    "name",
                    "members",
                    "customData",
                    "linkedData"
                  ]
                },
                "description": "Array of Layer resources"
              }
            },
            "required": [
              "shapes",
              "lines",
              "groups",
              "layers"
            ]
          },
          "customData": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Custom data key"
                },
                "value": {
                  "type": "string",
                  "description": "Custom data value"
                }
              },
              "description": "Object representing a key-value pair of data.",
              "required": [
                "name",
                "value"
              ],
              "example": {
                "name": "City",
                "value": "New York"
              }
            },
            "description": "Array of Data Pair resources linked to the page"
          },
          "linkedData": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "collection_id": {
                  "type": "string",
                  "description": "Id of the collection containing the data",
                  "example": "ABAuwlf2BTy8"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Custom data key"
                      },
                      "value": {
                        "type": "string",
                        "description": "Custom data value"
                      }
                    },
                    "description": "Object representing a key-value pair of data.",
                    "required": [
                      "name",
                      "value"
                    ],
                    "example": {
                      "name": "City",
                      "value": "New York"
                    }
                  },
                  "description": "Key-value pairs from the dataset"
                },
                "primaryKeyValue": {
                  "type": "string",
                  "description": "The value of the primary key of the dataset",
                  "example": "Pkey Value"
                }
              },
              "description": "Object representing data linked to a resource on a document.",
              "required": [
                "data",
                "primaryKeyValue"
              ]
            },
            "description": "Array of Linked Data resources linked to the page"
          }
        },
        "description": "Object representing a single page of a Lucidchart document.",
        "required": [
          "id",
          "title",
          "index",
          "items",
          "customData",
          "linkedData"
        ],
        "example": {
          "id": "YGcM5DNywbTK",
          "title": "document page title",
          "index": 0,
          "items": {
            "shapes": [],
            "lines": [],
            "groups": [],
            "layers": []
          },
          "customData": [],
          "linkedData": []
        }
      },
      "Items": {
        "type": "object",
        "properties": {
          "shapes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Shape ID",
                  "example": "VTAu-oQASzul"
                },
                "class": {
                  "type": "string",
                  "description": "A unique string representing the type of the shape (e.g., ProcessBlock)",
                  "example": "ProcessBlock"
                },
                "textAreas": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Text area label",
                        "example": "Text"
                      },
                      "text": {
                        "type": "string",
                        "description": "Text displayed in the text area. This is plain text. All formatting has been removed & formulas evaluated.",
                        "example": "Start here"
                      }
                    },
                    "description": "Object representing a text area on a Shape or Line.",
                    "required": [
                      "label",
                      "text"
                    ]
                  }
                },
                "customData": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Custom data key"
                      },
                      "value": {
                        "type": "string",
                        "description": "Custom data value"
                      }
                    },
                    "description": "Object representing a key-value pair of data.",
                    "required": [
                      "name",
                      "value"
                    ],
                    "example": {
                      "name": "City",
                      "value": "New York"
                    }
                  }
                },
                "linkedData": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "collection_id": {
                        "type": "string",
                        "description": "Id of the collection containing the data",
                        "example": "ABAuwlf2BTy8"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Custom data key"
                            },
                            "value": {
                              "type": "string",
                              "description": "Custom data value"
                            }
                          },
                          "description": "Object representing a key-value pair of data.",
                          "required": [
                            "name",
                            "value"
                          ],
                          "example": {
                            "name": "City",
                            "value": "New York"
                          }
                        },
                        "description": "Key-value pairs from the dataset"
                      },
                      "primaryKeyValue": {
                        "type": "string",
                        "description": "The value of the primary key of the dataset",
                        "example": "Pkey Value"
                      }
                    },
                    "description": "Object representing data linked to a resource on a document.",
                    "required": [
                      "data",
                      "primaryKeyValue"
                    ]
                  }
                }
              },
              "required": [
                "id",
                "class",
                "textAreas",
                "customData",
                "linkedData"
              ],
              "description": "Object representing a shape placed on a page of a document. Note that the ItemId of a shape is unique across all groups, layers, shapes, and lines."
            },
            "description": "Array of Shape resources"
          },
          "lines": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Line ID",
                  "example": "VTAuwAeC0_R1"
                },
                "endpoint1": {
                  "type": "object",
                  "properties": {
                    "style": {
                      "type": "string",
                      "description": "Line end style",
                      "example": "Arrow"
                    },
                    "connectedTo": {
                      "type": "string",
                      "nullable": true,
                      "description": "Id of shape or line the line is connected to",
                      "example": null
                    }
                  },
                  "description": "Object representing the endpoint of a Line.",
                  "required": [
                    "style",
                    "connectedTo"
                  ]
                },
                "endpoint2": {
                  "type": "object",
                  "properties": {
                    "style": {
                      "type": "string",
                      "description": "Line end style",
                      "example": "Arrow"
                    },
                    "connectedTo": {
                      "type": "string",
                      "nullable": true,
                      "description": "Id of shape or line the line is connected to",
                      "example": null
                    }
                  },
                  "description": "Object representing the endpoint of a Line.",
                  "required": [
                    "style",
                    "connectedTo"
                  ]
                },
                "textAreas": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Text area label",
                        "example": "Text"
                      },
                      "text": {
                        "type": "string",
                        "description": "Text displayed in the text area. This is plain text. All formatting has been removed & formulas evaluated.",
                        "example": "Start here"
                      }
                    },
                    "description": "Object representing a text area on a Shape or Line.",
                    "required": [
                      "label",
                      "text"
                    ]
                  }
                },
                "customData": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Custom data key"
                      },
                      "value": {
                        "type": "string",
                        "description": "Custom data value"
                      }
                    },
                    "description": "Object representing a key-value pair of data.",
                    "required": [
                      "name",
                      "value"
                    ],
                    "example": {
                      "name": "City",
                      "value": "New York"
                    }
                  }
                },
                "linkedData": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "collection_id": {
                        "type": "string",
                        "description": "Id of the collection containing the data",
                        "example": "ABAuwlf2BTy8"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Custom data key"
                            },
                            "value": {
                              "type": "string",
                              "description": "Custom data value"
                            }
                          },
                          "description": "Object representing a key-value pair of data.",
                          "required": [
                            "name",
                            "value"
                          ],
                          "example": {
                            "name": "City",
                            "value": "New York"
                          }
                        },
                        "description": "Key-value pairs from the dataset"
                      },
                      "primaryKeyValue": {
                        "type": "string",
                        "description": "The value of the primary key of the dataset",
                        "example": "Pkey Value"
                      }
                    },
                    "description": "Object representing data linked to a resource on a document.",
                    "required": [
                      "data",
                      "primaryKeyValue"
                    ]
                  }
                }
              },
              "description": "Object representing a line on the page of a document. Note that the ItemId of a line is unique across all groups, layers, shapes, and lines.",
              "required": [
                "id",
                "endpoint1",
                "endpoint2",
                "textAreas",
                "customData",
                "linkedData"
              ]
            },
            "description": "Array of Line resources"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Group ID",
                  "example": "VTAu-dl6qtyx"
                },
                "members": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Array of IDs of shapes, lines, & groups contained within the group",
                  "example": [
                    "VTAuCB8~evzW",
                    "VTAuo_Y56.q~"
                  ]
                },
                "customData": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Custom data key"
                      },
                      "value": {
                        "type": "string",
                        "description": "Custom data value"
                      }
                    },
                    "description": "Object representing a key-value pair of data.",
                    "required": [
                      "name",
                      "value"
                    ],
                    "example": {
                      "name": "City",
                      "value": "New York"
                    }
                  }
                },
                "linkedData": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "collection_id": {
                        "type": "string",
                        "description": "Id of the collection containing the data",
                        "example": "ABAuwlf2BTy8"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Custom data key"
                            },
                            "value": {
                              "type": "string",
                              "description": "Custom data value"
                            }
                          },
                          "description": "Object representing a key-value pair of data.",
                          "required": [
                            "name",
                            "value"
                          ],
                          "example": {
                            "name": "City",
                            "value": "New York"
                          }
                        },
                        "description": "Key-value pairs from the dataset"
                      },
                      "primaryKeyValue": {
                        "type": "string",
                        "description": "The value of the primary key of the dataset",
                        "example": "Pkey Value"
                      }
                    },
                    "description": "Object representing data linked to a resource on a document.",
                    "required": [
                      "data",
                      "primaryKeyValue"
                    ]
                  }
                }
              },
              "description": "Object representing a group on the page of a document. Note that the ItemId of a group is unique across all groups, layers, shapes, and lines.",
              "required": [
                "id",
                "members"
              ]
            },
            "description": "Array of Group resources"
          },
          "layers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Layer ID",
                  "example": "VTAu-dl6qtyx"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the layer",
                  "example": "Layer 1"
                },
                "members": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Array of IDs of shapes, lines, & groups contained within the layer",
                  "example": [
                    "VTAuCB8~evzW",
                    "VTAuo_Y56.q~"
                  ]
                },
                "customData": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Custom data key"
                      },
                      "value": {
                        "type": "string",
                        "description": "Custom data value"
                      }
                    },
                    "description": "Object representing a key-value pair of data.",
                    "required": [
                      "name",
                      "value"
                    ],
                    "example": {
                      "name": "City",
                      "value": "New York"
                    }
                  }
                },
                "linkedData": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "collection_id": {
                        "type": "string",
                        "description": "Id of the collection containing the data",
                        "example": "ABAuwlf2BTy8"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Custom data key"
                            },
                            "value": {
                              "type": "string",
                              "description": "Custom data value"
                            }
                          },
                          "description": "Object representing a key-value pair of data.",
                          "required": [
                            "name",
                            "value"
                          ],
                          "example": {
                            "name": "City",
                            "value": "New York"
                          }
                        },
                        "description": "Key-value pairs from the dataset"
                      },
                      "primaryKeyValue": {
                        "type": "string",
                        "description": "The value of the primary key of the dataset",
                        "example": "Pkey Value"
                      }
                    },
                    "description": "Object representing data linked to a resource on a document.",
                    "required": [
                      "data",
                      "primaryKeyValue"
                    ]
                  }
                }
              },
              "description": "Object representing a layer on the page of a document. Note that the ItemId of a layer is unique across all groups, layers, shapes, and lines.",
              "required": [
                "id",
                "name",
                "members",
                "customData",
                "linkedData"
              ]
            },
            "description": "Array of Layer resources"
          }
        },
        "description": "Individual shapes, lines, groups, and layers all contain a unique ItemId identifying the object.",
        "required": [
          "shapes",
          "lines",
          "groups",
          "layers"
        ]
      },
      "Shape": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Shape ID",
            "example": "VTAu-oQASzul"
          },
          "class": {
            "type": "string",
            "description": "A unique string representing the type of the shape (e.g., ProcessBlock)",
            "example": "ProcessBlock"
          },
          "textAreas": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Text area label",
                  "example": "Text"
                },
                "text": {
                  "type": "string",
                  "description": "Text displayed in the text area. This is plain text. All formatting has been removed & formulas evaluated.",
                  "example": "Start here"
                }
              },
              "description": "Object representing a text area on a Shape or Line.",
              "required": [
                "label",
                "text"
              ]
            }
          },
          "customData": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Custom data key"
                },
                "value": {
                  "type": "string",
                  "description": "Custom data value"
                }
              },
              "description": "Object representing a key-value pair of data.",
              "required": [
                "name",
                "value"
              ],
              "example": {
                "name": "City",
                "value": "New York"
              }
            }
          },
          "linkedData": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "collection_id": {
                  "type": "string",
                  "description": "Id of the collection containing the data",
                  "example": "ABAuwlf2BTy8"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Custom data key"
                      },
                      "value": {
                        "type": "string",
                        "description": "Custom data value"
                      }
                    },
                    "description": "Object representing a key-value pair of data.",
                    "required": [
                      "name",
                      "value"
                    ],
                    "example": {
                      "name": "City",
                      "value": "New York"
                    }
                  },
                  "description": "Key-value pairs from the dataset"
                },
                "primaryKeyValue": {
                  "type": "string",
                  "description": "The value of the primary key of the dataset",
                  "example": "Pkey Value"
                }
              },
              "description": "Object representing data linked to a resource on a document.",
              "required": [
                "data",
                "primaryKeyValue"
              ]
            }
          }
        },
        "required": [
          "id",
          "class",
          "textAreas",
          "customData",
          "linkedData"
        ],
        "description": "Object representing a shape placed on a page of a document. Note that the ItemId of a shape is unique across all groups, layers, shapes, and lines."
      },
      "Line": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Line ID",
            "example": "VTAuwAeC0_R1"
          },
          "endpoint1": {
            "type": "object",
            "properties": {
              "style": {
                "type": "string",
                "description": "Line end style",
                "example": "Arrow"
              },
              "connectedTo": {
                "type": "string",
                "nullable": true,
                "description": "Id of shape or line the line is connected to",
                "example": null
              }
            },
            "description": "Object representing the endpoint of a Line.",
            "required": [
              "style",
              "connectedTo"
            ]
          },
          "endpoint2": {
            "type": "object",
            "properties": {
              "style": {
                "type": "string",
                "description": "Line end style",
                "example": "Arrow"
              },
              "connectedTo": {
                "type": "string",
                "nullable": true,
                "description": "Id of shape or line the line is connected to",
                "example": null
              }
            },
            "description": "Object representing the endpoint of a Line.",
            "required": [
              "style",
              "connectedTo"
            ]
          },
          "textAreas": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Text area label",
                  "example": "Text"
                },
                "text": {
                  "type": "string",
                  "description": "Text displayed in the text area. This is plain text. All formatting has been removed & formulas evaluated.",
                  "example": "Start here"
                }
              },
              "description": "Object representing a text area on a Shape or Line.",
              "required": [
                "label",
                "text"
              ]
            }
          },
          "customData": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Custom data key"
                },
                "value": {
                  "type": "string",
                  "description": "Custom data value"
                }
              },
              "description": "Object representing a key-value pair of data.",
              "required": [
                "name",
                "value"
              ],
              "example": {
                "name": "City",
                "value": "New York"
              }
            }
          },
          "linkedData": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "collection_id": {
                  "type": "string",
                  "description": "Id of the collection containing the data",
                  "example": "ABAuwlf2BTy8"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Custom data key"
                      },
                      "value": {
                        "type": "string",
                        "description": "Custom data value"
                      }
                    },
                    "description": "Object representing a key-value pair of data.",
                    "required": [
                      "name",
                      "value"
                    ],
                    "example": {
                      "name": "City",
                      "value": "New York"
                    }
                  },
                  "description": "Key-value pairs from the dataset"
                },
                "primaryKeyValue": {
                  "type": "string",
                  "description": "The value of the primary key of the dataset",
                  "example": "Pkey Value"
                }
              },
              "description": "Object representing data linked to a resource on a document.",
              "required": [
                "data",
                "primaryKeyValue"
              ]
            }
          }
        },
        "description": "Object representing a line on the page of a document. Note that the ItemId of a line is unique across all groups, layers, shapes, and lines.",
        "required": [
          "id",
          "endpoint1",
          "endpoint2",
          "textAreas",
          "customData",
          "linkedData"
        ]
      },
      "Group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Group ID",
            "example": "VTAu-dl6qtyx"
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of IDs of shapes, lines, & groups contained within the group",
            "example": [
              "VTAuCB8~evzW",
              "VTAuo_Y56.q~"
            ]
          },
          "customData": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Custom data key"
                },
                "value": {
                  "type": "string",
                  "description": "Custom data value"
                }
              },
              "description": "Object representing a key-value pair of data.",
              "required": [
                "name",
                "value"
              ],
              "example": {
                "name": "City",
                "value": "New York"
              }
            }
          },
          "linkedData": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "collection_id": {
                  "type": "string",
                  "description": "Id of the collection containing the data",
                  "example": "ABAuwlf2BTy8"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Custom data key"
                      },
                      "value": {
                        "type": "string",
                        "description": "Custom data value"
                      }
                    },
                    "description": "Object representing a key-value pair of data.",
                    "required": [
                      "name",
                      "value"
                    ],
                    "example": {
                      "name": "City",
                      "value": "New York"
                    }
                  },
                  "description": "Key-value pairs from the dataset"
                },
                "primaryKeyValue": {
                  "type": "string",
                  "description": "The value of the primary key of the dataset",
                  "example": "Pkey Value"
                }
              },
              "description": "Object representing data linked to a resource on a document.",
              "required": [
                "data",
                "primaryKeyValue"
              ]
            }
          }
        },
        "description": "Object representing a group on the page of a document. Note that the ItemId of a group is unique across all groups, layers, shapes, and lines.",
        "required": [
          "id",
          "members"
        ]
      },
      "Layer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Layer ID",
            "example": "VTAu-dl6qtyx"
          },
          "name": {
            "type": "string",
            "description": "The name of the layer",
            "example": "Layer 1"
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of IDs of shapes, lines, & groups contained within the layer",
            "example": [
              "VTAuCB8~evzW",
              "VTAuo_Y56.q~"
            ]
          },
          "customData": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Custom data key"
                },
                "value": {
                  "type": "string",
                  "description": "Custom data value"
                }
              },
              "description": "Object representing a key-value pair of data.",
              "required": [
                "name",
                "value"
              ],
              "example": {
                "name": "City",
                "value": "New York"
              }
            }
          },
          "linkedData": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "collection_id": {
                  "type": "string",
                  "description": "Id of the collection containing the data",
                  "example": "ABAuwlf2BTy8"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Custom data key"
                      },
                      "value": {
                        "type": "string",
                        "description": "Custom data value"
                      }
                    },
                    "description": "Object representing a key-value pair of data.",
                    "required": [
                      "name",
                      "value"
                    ],
                    "example": {
                      "name": "City",
                      "value": "New York"
                    }
                  },
                  "description": "Key-value pairs from the dataset"
                },
                "primaryKeyValue": {
                  "type": "string",
                  "description": "The value of the primary key of the dataset",
                  "example": "Pkey Value"
                }
              },
              "description": "Object representing data linked to a resource on a document.",
              "required": [
                "data",
                "primaryKeyValue"
              ]
            }
          }
        },
        "description": "Object representing a layer on the page of a document. Note that the ItemId of a layer is unique across all groups, layers, shapes, and lines.",
        "required": [
          "id",
          "name",
          "members",
          "customData",
          "linkedData"
        ]
      },
      "LinkedData": {
        "type": "object",
        "properties": {
          "collection_id": {
            "type": "string",
            "description": "Id of the collection containing the data",
            "example": "ABAuwlf2BTy8"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Custom data key"
                },
                "value": {
                  "type": "string",
                  "description": "Custom data value"
                }
              },
              "description": "Object representing a key-value pair of data.",
              "required": [
                "name",
                "value"
              ],
              "example": {
                "name": "City",
                "value": "New York"
              }
            },
            "description": "Key-value pairs from the dataset"
          },
          "primaryKeyValue": {
            "type": "string",
            "description": "The value of the primary key of the dataset",
            "example": "Pkey Value"
          }
        },
        "description": "Object representing data linked to a resource on a document.",
        "required": [
          "data",
          "primaryKeyValue"
        ]
      },
      "Endpoint": {
        "type": "object",
        "properties": {
          "style": {
            "type": "string",
            "description": "Line end style",
            "example": "Arrow"
          },
          "connectedTo": {
            "type": "string",
            "nullable": true,
            "description": "Id of shape or line the line is connected to",
            "example": null
          }
        },
        "description": "Object representing the endpoint of a Line.",
        "required": [
          "style",
          "connectedTo"
        ]
      },
      "TextArea": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Text area label",
            "example": "Text"
          },
          "text": {
            "type": "string",
            "description": "Text displayed in the text area. This is plain text. All formatting has been removed & formulas evaluated.",
            "example": "Start here"
          }
        },
        "description": "Object representing a text area on a Shape or Line.",
        "required": [
          "label",
          "text"
        ]
      },
      "Data": {
        "type": "object",
        "properties": {
          "collections": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Id of the collection",
                  "example": "ABAuwlf2BTy8"
                },
                "name": {
                  "type": "string",
                  "description": "Collection name",
                  "example": "Collection 1"
                },
                "primaryKey": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The primary key column name",
                  "example": [
                    "PKey 1"
                  ]
                }
              },
              "required": [
                "id",
                "name",
                "primaryKey"
              ],
              "description": "A collection is a container inside of a source of data. A data source can have many collections, but a collection can only belong to one data source. A collection can be thought of as a tab or individual sheet in a spreadsheet file."
            },
            "description": "Array of collections"
          }
        },
        "required": [
          "collections"
        ],
        "description": "Object representing an array of Collections on a document."
      },
      "Collection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the collection",
            "example": "ABAuwlf2BTy8"
          },
          "name": {
            "type": "string",
            "description": "Collection name",
            "example": "Collection 1"
          },
          "primaryKey": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The primary key column name",
            "example": [
              "PKey 1"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "primaryKey"
        ],
        "description": "A collection is a container inside of a source of data. A data source can have many collections, but a collection can only belong to one data source. A collection can be thought of as a tab or individual sheet in a spreadsheet file."
      },
      "BootstrapData": {
        "type": "object",
        "properties": {
          "packageId": {
            "type": "string",
            "description": "Id of the extension package which will consume this data",
            "example": "74672098-cf36-492c-b8e6-2c4233549cd3"
          },
          "extensionName": {
            "type": "string",
            "description": "Name of the editor extension which will consume this data. Note this is the name field of an editor extension found in your manifest.json file.",
            "example": "sheets-adapter"
          },
          "minimumVersion": {
            "type": "string",
            "description": "Minimum version of the extension package which will consume this data",
            "example": "1.4.0"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Data to provide to the extension package",
            "example": {
              "a": 1,
              "b": 2
            }
          }
        },
        "required": [
          "packageId",
          "extensionName",
          "minimumVersion",
          "data"
        ],
        "description": "Bootstrap data can be attached to the created document to be consumed by a specific Extension Package."
      },
      "LinkResource": {
        "type": "object",
        "properties": {
          "document": {
            "type": "object",
            "properties": {
              "documentId": {
                "type": "string",
                "format": "uuid",
                "example": "110808fd-4553-4316-bccf-4f25ff59a532",
                "description": "Unique identifier of the document."
              },
              "page": {
                "type": "string",
                "nullable": true,
                "description": "Page information of the document, if applicable."
              },
              "product": {
                "type": "string",
                "example": "lucidspark",
                "description": "The Lucid product the document belongs to."
              }
            },
            "description": "Information about the Document contained in the link if it exists."
          },
          "invitation": {
            "type": "object",
            "properties": {
              "invitationId": {
                "type": "string",
                "format": "uuid",
                "example": "inv_288b9365-685b-4bf2-9f6f-8aa9e2082542",
                "description": "Unique identifier of the invitation."
              }
            },
            "description": "Information about the Invitation contained in the link if it exists."
          }
        },
        "description": "Resource representing information contained in a Lucid link."
      },
      "LinkDocument": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "string",
            "format": "uuid",
            "example": "110808fd-4553-4316-bccf-4f25ff59a532",
            "description": "Unique identifier of the document."
          },
          "page": {
            "type": "string",
            "nullable": true,
            "description": "Page information of the document, if applicable."
          },
          "product": {
            "type": "string",
            "example": "lucidspark",
            "description": "The Lucid product the document belongs to."
          }
        },
        "description": "Information about the Document contained in the link if it exists."
      },
      "LinkInvitation": {
        "type": "object",
        "properties": {
          "invitationId": {
            "type": "string",
            "format": "uuid",
            "example": "inv_288b9365-685b-4bf2-9f6f-8aa9e2082542",
            "description": "Unique identifier of the invitation."
          }
        },
        "description": "Information about the Invitation contained in the link if it exists."
      },
      "EmbedInformation": {
        "type": "object",
        "properties": {
          "embedId": {
            "type": "string",
            "format": "uuid",
            "example": "ec890631-c150-461c-992f-b96533aa05f4",
            "description": "Unique identifier of the embed."
          },
          "documentId": {
            "type": "string",
            "format": "uuid",
            "example": "001bd56d-1b10-4196-8ac6-45e3c22bd1c6",
            "description": "Unique identifier of the document."
          },
          "embedVersion": {
            "type": "string",
            "example": "snapshot-version",
            "description": "The version of the embed."
          },
          "created": {
            "type": "string",
            "format": "date",
            "example": "2021-10-01T20:49:36.169Z",
            "description": "When the embed was created."
          },
          "modified": {
            "type": "string",
            "format": "date",
            "example": "2021-10-01T20:49:36.169Z",
            "description": "When the embed was last modified."
          }
        },
        "description": "Information about the requested Embed."
      },
      "EmbedDocument": {
        "type": "object",
        "properties": {
          "embedId": {
            "type": "string",
            "format": "uuid",
            "example": "ec890631-c150-461c-992f-b96533aa05f4",
            "description": "Unique identifier of the embed."
          },
          "documentId": {
            "type": "string",
            "format": "uuid",
            "example": "001bd56d-1b10-4196-8ac6-45e3c22bd1c6",
            "description": "Unique identifier of the document."
          },
          "pageCount": {
            "type": "number",
            "example": 5,
            "description": "The number of pages on the document"
          },
          "title": {
            "type": "string",
            "example": "Documentation example document",
            "description": "The title of the document."
          }
        },
        "description": "Information about the docuement correlated to the requested Embed."
      },
      "SessionConfig": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "lucidchart",
                "lucidscale",
                "lucidspark"
              ],
              "example": "lucidchart"
            },
            "description": "A list of Products that a user can choose a document from to be embedded. Defaults to all products."
          },
          "viewerType": {
            "type": "object",
            "properties": {
              "default": {
                "type": "string",
                "enum": [
                  "rich",
                  "simple"
                ],
                "description": "- rich: The standard Lucid viewer experience. A fully interactive viewer with zoom, panning, and support for hotspots and other interactive elements.\n- simple: A basic Lucid viewer experience that can be used in place of the rich viewer if there are performance or load time concerns. The simple viewer renders non-interactive raster images instead of a high-fidelity vector experience and is a poorer fit for viewing larger documents.\n"
              }
            },
            "description": "What type of viewer to load by defaults. If not specified, defaults to rich. Users can change this later."
          },
          "ui": {
            "type": "string",
            "enum": [
              "viewer",
              "settings"
            ],
            "description": "- viewer: When loading an existing embed, go directly to the standard embedded view of the document.\n- settings: When loading an existing embed, show the user the embed settings interface before taking them to the standard embed view of the document.\n"
          },
          "customSettings": {
            "type": "string",
            "enum": [
              "postMessage",
              "none"
            ],
            "description": "- postMessage: Display a \"Settings for <app>\" link in the embed settings view where users can update the settings. When clicked, the OpenCustomSettings postMessage event would be fired so the app can display its own customized settings view.\n- none: \"Settings for <app>\" link would not be available in the settings editor.\n"
          }
        }
      },
      "ViewerType": {
        "type": "string",
        "enum": [
          "rich",
          "simple"
        ],
        "description": "- rich: The standard Lucid viewer experience. A fully interactive viewer with zoom, panning, and support for hotspots and other interactive elements.\n- simple: A basic Lucid viewer experience that can be used in place of the rich viewer if there are performance or load time concerns. The simple viewer renders non-interactive raster images instead of a high-fidelity vector experience and is a poorer fit for viewing larger documents.\n"
      },
      "UI": {
        "type": "string",
        "enum": [
          "viewer",
          "settings"
        ],
        "description": "- viewer: When loading an existing embed, go directly to the standard embedded view of the document.\n- settings: When loading an existing embed, show the user the embed settings interface before taking them to the standard embed view of the document.\n"
      },
      "ViewerCustomSettings": {
        "type": "string",
        "enum": [
          "postMessage",
          "none"
        ],
        "description": "- postMessage: Display a \"Settings for <app>\" link in the embed settings view where users can update the settings. When clicked, the OpenCustomSettings postMessage event would be fired so the app can display its own customized settings view.\n- none: \"Settings for <app>\" link would not be available in the settings editor.\n"
      },
      "FolderAttribute": {
        "type": "object",
        "description": "An attribute assigned to the folder.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the attribute",
            "example": "Sample Label"
          },
          "value": {
            "description": "Value of the attribute. Can be any type, but attributes with the same name will always have the same type.",
            "example": "Sample Value"
          }
        }
      },
      "Folder": {
        "type": "object",
        "description": "A standard representation of a folder.",
        "properties": {
          "id": {
            "type": "number",
            "description": "Unique ID of the folder",
            "example": 123456789
          },
          "type": {
            "type": "string",
            "description": "* folder - Folders can live in other folders, team folders, or the root of a user’s folder manager (\"My Documents\"). A folder in \"My Documents\" will have a null parent field.\n* team   - Team folders can never live in another folder and are always located in the \"Team Folders\" section of a user's folder manager. Team folders will not have a parent field. Learn more\n",
            "enum": [
              "folder",
              "team"
            ],
            "example": "folder"
          },
          "name": {
            "type": "string",
            "description": "Name of the folder",
            "example": "Folder Name"
          },
          "parent": {
            "type": "number",
            "description": "ID of the parent folder.",
            "example": 123456788,
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time of when the folder was created",
            "example": "2020-06-26T16:29:37Z"
          },
          "trashed": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time of when the folder was trashed",
            "example": "2022-01-20T12:14:18Z"
          },
          "attributes": {
            "type": "array",
            "description": "An array of attributes assigned to the folder. Can be null or empty.",
            "items": {
              "type": "object",
              "description": "An attribute assigned to the folder.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the attribute",
                  "example": "Sample Label"
                },
                "value": {
                  "description": "Value of the attribute. Can be any type, but attributes with the same name will always have the same type.",
                  "example": "Sample Value"
                }
              }
            }
          }
        },
        "required": [
          "id",
          "type",
          "name",
          "created"
        ]
      },
      "FolderType": {
        "type": "string",
        "description": "* folder - Folders can live in other folders, team folders, or the root of a user’s folder manager (\"My Documents\"). A folder in \"My Documents\" will have a null parent field.\n* team   - Team folders can never live in another folder and are always located in the \"Team Folders\" section of a user's folder manager. Team folders will not have a parent field. Learn more\n",
        "enum": [
          "folder",
          "team"
        ],
        "example": "folder"
      },
      "FolderContent": {
        "type": "object",
        "description": "A representation of a single item contained in a folder.",
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "number"
              }
            ],
            "description": "Unique ID of the folder or document being referred to. This field will be a Number for folders and a UUID for documents.",
            "example": 123456789
          },
          "type": {
            "type": "string",
            "description": "* folder  -  Type denoting that the Folder Content Resource is a folder and will have a Number id field and no product field.\n* document  -  Type denoting that the Folder Content Resource is a document and will have a UUID id field and will contain a product field.\n",
            "enum": [
              "folder",
              "document"
            ],
            "example": "document"
          },
          "name": {
            "type": "string",
            "description": "Name of the folder or document",
            "example": "Folder Name"
          },
          "shortcut": {
            "type": "boolean",
            "description": "A boolean value indicating whether or not the folder or document is a shortcut. For more information on shortcuts and permissions.",
            "example": false
          },
          "product": {
            "type": "string",
            "enum": [
              "lucidchart",
              "lucidscale",
              "lucidspark"
            ],
            "example": "lucidchart"
          }
        },
        "required": [
          "id",
          "type",
          "name",
          "shortcut"
        ]
      },
      "FolderContentType": {
        "type": "string",
        "description": "* folder  -  Type denoting that the Folder Content Resource is a folder and will have a Number id field and no product field.\n* document  -  Type denoting that the Folder Content Resource is a document and will have a UUID id field and will contain a product field.\n",
        "enum": [
          "folder",
          "document"
        ],
        "example": "document"
      },
      "DocumentLinkSecurity": {
        "type": "object",
        "properties": {
          "restrictToAccount": {
            "type": "boolean",
            "description": "Whether or not users outside the document's account can accept the share link."
          },
          "expires": {
            "type": "string",
            "format": "date-time",
            "description": "If defined, the date and time the share link expires."
          },
          "passcode": {
            "type": "string",
            "description": "If defined, the required passcode to accept the share link."
          },
          "allowAnonymous": {
            "type": "boolean",
            "description": "Whether or not the share link allows for anonymous guests."
          }
        },
        "required": [
          "restrictToAccount",
          "allowAnonymous"
        ],
        "example": {
          "restrictToAccount": false,
          "expires": "2023-12-11T21:48:35.293Z",
          "passcode": "password",
          "allowAnonymous": false
        }
      },
      "SharingRole": {
        "type": "string",
        "enum": [
          "editandshare",
          "edit",
          "comment",
          "view"
        ],
        "description": "Roles determine what actions an invitation will grant on a document. Invitations to a document only grant the specified level of access to just that one document.\n- `editandshare`: View, comment on, edit, and control which users can access the document.\n- `edit`: View, comment on, and edit the document.\n- `comment`: View the document. Leave comments on the document.\n- `view`: View the document.\n"
      },
      "DocumentShareLink": {
        "type": "object",
        "properties": {
          "shareLinkId": {
            "type": "string",
            "description": "Id of the share link.",
            "example": "inv_8a38797a-e5fc-4479-8492-e000dc93cb60"
          },
          "documentId": {
            "type": "string",
            "format": "uuid",
            "description": "Id of the document the share link belongs to.",
            "example": "f6bf19b5-d109-4ef5-92b2-cdaf0de43001"
          },
          "role": {
            "type": "string",
            "enum": [
              "editandshare",
              "edit",
              "comment",
              "view"
            ],
            "description": "Roles determine what actions an invitation will grant on a document. Invitations to a document only grant the specified level of access to just that one document.\n- `editandshare`: View, comment on, edit, and control which users can access the document.\n- `edit`: View, comment on, and edit the document.\n- `comment`: View the document. Leave comments on the document.\n- `view`: View the document.\n"
          },
          "linkSecurity": {
            "type": "object",
            "properties": {
              "restrictToAccount": {
                "type": "boolean",
                "description": "Whether or not users outside the document's account can accept the share link."
              },
              "expires": {
                "type": "string",
                "format": "date-time",
                "description": "If defined, the date and time the share link expires."
              },
              "passcode": {
                "type": "string",
                "description": "If defined, the required passcode to accept the share link."
              },
              "allowAnonymous": {
                "type": "boolean",
                "description": "Whether or not the share link allows for anonymous guests."
              }
            },
            "required": [
              "restrictToAccount",
              "allowAnonymous"
            ],
            "example": {
              "restrictToAccount": false,
              "expires": "2023-12-11T21:48:35.293Z",
              "passcode": "password",
              "allowAnonymous": false
            }
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the share link was created.",
            "example": "2022-11-11T21:48:35.293Z"
          },
          "createdBy": {
            "type": "number",
            "description": "User Id of the user that created the share link.",
            "example": 1280
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the share link was last modified.",
            "example": "2022-11-11T21:48:35.293Z"
          },
          "acceptUrl": {
            "type": "string",
            "format": "uri",
            "description": "Link to accept the share link invitation.",
            "example": "https://lucid.app/lucidchart/f6bf19b5-d109-4ef5-92b2-cdaf0de43001/edit?invitationId=inv_8a38797a-e5fc-4479-8492-e000dc93cb60"
          }
        },
        "required": [
          "shareLinkId",
          "documentId",
          "role",
          "linkSecurity",
          "created",
          "createdBy",
          "lastModified",
          "acceptUrl"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "number",
            "example": 100,
            "description": "The unique ID for the user's account."
          },
          "email": {
            "type": "string",
            "example": "john-doe@example.com",
            "description": "The user's email."
          },
          "name": {
            "type": "string",
            "example": "John Doe",
            "description": "The user's full name."
          },
          "userId": {
            "type": "number",
            "example": 101,
            "description": "The unique ID for the user."
          },
          "username": {
            "type": "string",
            "example": "johndoe",
            "description": "The user's username."
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "billing-admin",
                "team-admin",
                "document-admin",
                "template-admin"
              ],
              "description": "Allows various administrative actions."
            },
            "example": [
              "billing-admin",
              "team-admin"
            ],
            "description": "A list of administrative roles assigned to the user."
          }
        },
        "description": "A standard representation of a user."
      },
      "UserRole": {
        "type": "string",
        "enum": [
          "billing-admin",
          "team-admin",
          "document-admin",
          "template-admin"
        ],
        "description": "Allows various administrative actions."
      },
      "CreateUserBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john-doe@example.com",
            "description": "The user's email."
          },
          "firstName": {
            "type": "string",
            "example": "John",
            "description": "The user's first name."
          },
          "lastName": {
            "type": "string",
            "example": "Doe",
            "description": "The user's last name."
          },
          "username": {
            "type": "string",
            "example": "john-doe@example.com",
            "description": "The user's username. If not provided the email will be used as the username."
          },
          "password": {
            "type": "string",
            "example": "`.~b\"J<CA95m`bV@",
            "description": "The user's password."
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "billing-admin",
                "team-admin",
                "document-admin",
                "template-admin"
              ],
              "description": "Allows various administrative actions."
            },
            "example": [
              "billing-admin",
              "team-admin"
            ],
            "description": "A list of roles assigned to the user."
          }
        },
        "required": [
          "email",
          "firstName",
          "lastName"
        ]
      },
      "Profile": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "number",
            "example": 100,
            "description": "The unique ID for the user's account."
          },
          "username": {
            "type": "string",
            "example": "johndoe",
            "description": "Username of the user."
          },
          "email": {
            "type": "string",
            "example": "john-doe@example.com",
            "description": "Email of the user."
          },
          "fullName": {
            "type": "number",
            "example": "John Doe",
            "description": "Full name of the user."
          },
          "id": {
            "type": "string",
            "example": 101,
            "description": "ID of the user."
          }
        },
        "description": "The Profile resource contains basic profile information about a user."
      },
      "OAuth2Token": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Token to be used when making requests with OAuth 2.0 authentication.",
            "example": "oauth2-Yzh4Y2Q3ZTVhY2FjYjkwOGJlZGNjNjU5NDM2NjgzZmUwMmNmMjkzM..."
          },
          "client_id": {
            "type": "string",
            "description": "The client ID.",
            "example": "30VYbvlkqZv-SmJd7fTdpH9B9et2yqZA6Wvi5NY_"
          },
          "expires_in": {
            "type": "number",
            "description": "The lifetime in seconds of the access token.",
            "example": 3600
          },
          "expires": {
            "type": "number",
            "format": "int64",
            "description": "Time until this token expires (expressed in milliseconds since Unix epoch).",
            "example": 1605732868411
          },
          "refresh_token": {
            "type": "string",
            "description": "If the token includes the scope `offline_access`, then a refresh token will be provided.",
            "example": "oauth2-AVU=-yPcwtzLkusIEnT7D9slQH4g8Ur0MdpUmpT0Z6BSMf6lmesRpTTSBGNniKd"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Scopes allowed on this token.",
            "example": [
              "lucidchart.document.app",
              "offline_access"
            ]
          },
          "token_type": {
            "type": "string",
            "description": "Value is always \"bearer\".",
            "example": "bearer"
          },
          "user_id": {
            "type": "number",
            "description": "ID of the user this token is on behalf of.",
            "example": 341
          }
        },
        "required": [
          "access_token",
          "user_id",
          "client_id",
          "expires_in",
          "expires",
          "scopes",
          "token_type"
        ]
      },
      "OAuth2IntrospectToken": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "A boolean value indicating whether or not the token is active.",
            "example": true
          },
          "client_id": {
            "type": "string",
            "description": "The client ID.",
            "example": "30VYbvlkqZv-SmJd7fTdpH9B9et2yqZA6Wvi5NY_"
          },
          "expires_in": {
            "type": "number",
            "description": "The remaining lifetime in seconds of the access token.",
            "example": 3500
          },
          "expires": {
            "type": "number",
            "format": "int64",
            "description": "Timestamp for when this token expires (expressed in milliseconds since Unix epoch).",
            "example": 1605732868411
          },
          "scope": {
            "type": "string",
            "description": "Space-separated list of scopes allowed on this token.",
            "example": "document.app offline_access"
          },
          "token_type": {
            "type": "string",
            "description": "The type of token returned (currently, always \"bearer\").",
            "example": "bearer"
          },
          "user_id": {
            "type": "number",
            "description": "ID of the user this token is on behalf of.",
            "example": 1001
          }
        },
        "required": [
          "active",
          "user_id",
          "client_id",
          "token_type",
          "scope",
          "expires_in",
          "expires"
        ]
      },
      "AccountDocument": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique ID of the document",
            "example": "110808fd-4553-4316-bccf-4f25ff59a532"
          },
          "title": {
            "type": "string",
            "description": "Title of the document",
            "example": "document title"
          },
          "adminViewUrl": {
            "type": "string",
            "format": "uri",
            "description": "Link to view the document",
            "example": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/adminView"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time of when the document was created",
            "example": "2019-04-22T13:47:23Z"
          },
          "owner": {
            "type": "object",
            "properties": {
              "ownerType": {
                "type": "string",
                "description": "user or account"
              },
              "id": {
                "type": "number",
                "description": "userId or accountId"
              }
            }
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time of when the document was last modified",
            "example": "2020-06-26T16:29:37Z"
          },
          "trashed": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "If defined, the timestamp when the document was moved to the trash",
            "example": null
          },
          "customTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of any custom tags assigned to the document",
            "example": [
              "in progress"
            ]
          },
          "product": {
            "type": "string",
            "enum": [
              "lucidchart",
              "lucidscale",
              "lucidspark"
            ],
            "example": "lucidchart"
          },
          "status": {
            "type": "string",
            "nullable": true,
            "description": "Current assigned status of the document",
            "example": "Complete"
          },
          "classification": {
            "type": "string",
            "nullable": true,
            "description": "Current assigned classification of the document",
            "example": "Private"
          },
          "parent": {
            "type": "integer",
            "nullable": true,
            "description": "ID of the parent folder",
            "example": 123456788
          }
        },
        "required": [
          "documentId",
          "title",
          "adminViewUrl",
          "created",
          "owner",
          "lastModified",
          "customTags",
          "product"
        ],
        "example": {
          "documentId": "110808fd-4553-4316-bccf-4f25ff59a532",
          "title": "document title",
          "adminViewUrl": "https://lucid.app/lucidchart/110808fd-4553-4316-bccf-4f25ff59a532/adminView",
          "created": "2019-04-22T13:47:23Z",
          "owner": {
            "ownerType": "user",
            "id": "123456"
          },
          "lastModified": "2020-06-26T16:29:37Z",
          "customTags": [
            "in progress"
          ],
          "product": "lucidchart",
          "status": "Complete",
          "parent": 123456788,
          "trashed": null
        }
      },
      "LegalHold": {
        "type": "object",
        "properties": {
          "LegalHoldId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique ID of the legal hold.",
            "example": "110808fd-4553-4316-bccf-4f25ff59a532"
          },
          "AccountId": {
            "type": "number",
            "description": "Unique ID for the creating admin’s account.",
            "example": 100
          },
          "StartTime": {
            "type": "string",
            "format": "date-time",
            "description": "Start time of the legal hold.",
            "example": "2025-01-01T16:18:26Z"
          },
          "EndTime": {
            "type": "string",
            "format": "date-time",
            "description": "End time of the legal hold.",
            "example": "2025-12-01T16:18:26Z"
          },
          "Title": {
            "type": "string",
            "description": "Title of the legal hold.",
            "example": "New Legal Hold"
          },
          "Description": {
            "type": "string",
            "description": "Description of the legal hold.",
            "example": "Legal hold example"
          },
          "Keywords": {
            "type": "string",
            "description": "Keyword(s) of the legal hold.",
            "example": "alpha"
          },
          "Created": {
            "type": "string",
            "format": "date-time",
            "description": "Time that the legal hold was created.",
            "example": "2024-12-01T16:25:44Z"
          },
          "Modified": {
            "type": "string",
            "format": "date-time",
            "description": "Time that the legal hold was last modified.",
            "example": "2024-12-01T16:25:44Z"
          }
        },
        "required": [
          "LegalHoldId",
          "AccountId",
          "StartTime",
          "EndTime",
          "Title",
          "Created",
          "Modified"
        ]
      },
      "AcceptDocumentShareLinkResult": {
        "type": "object",
        "properties": {
          "invitationType": {
            "type": "string",
            "description": "The kind of share link that was accepted (document or folder).",
            "example": "document"
          },
          "documentId": {
            "type": "string",
            "format": "uuid",
            "description": "If defined, the Id of the document whose share link was accepted.",
            "example": "f6bf19b5-d109-4ef5-92b2-cdaf0de43001"
          },
          "folderId": {
            "type": "string",
            "format": "integer",
            "description": "If defined, the Id of the folder whose share link was accepted.",
            "example": null
          }
        },
        "required": [
          "invitationType"
        ]
      },
      "AcceptFolderShareLinkResult": {
        "type": "object",
        "properties": {
          "invitationType": {
            "type": "string",
            "description": "The kind of share link that was accepted (document or folder).",
            "example": "folder"
          },
          "documentId": {
            "type": "string",
            "format": "uuid",
            "description": "If defined, the Id of the document whose share link was accepted.",
            "example": null
          },
          "folderId": {
            "type": "string",
            "format": "integer",
            "description": "If defined, the Id of the folder whose share link was accepted.",
            "example": 123456789
          }
        },
        "required": [
          "invitationType"
        ]
      },
      "AuditLog": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "integer",
            "description": "The unique ID for the account.",
            "example": 1
          },
          "actor": {
            "type": "object",
            "description": "Identifies the acting user that triggered the audit log event.",
            "properties": {
              "actorType": {
                "type": "string",
                "description": "The type of actor",
                "example": "user"
              },
              "actorAccountId": {
                "type": "integer",
                "description": "The account ID of the actor.",
                "example": 1
              },
              "actorEmail": {
                "type": "string",
                "description": "The email address of the actor.",
                "example": "user@example.com"
              },
              "actorUserId": {
                "type": "number",
                "description": "The user ID of the actor.",
                "example": 100
              },
              "actorClient": {
                "type": "string",
                "nullable": true,
                "example": "Chrome/51.0.2704.103 Safari/537.36"
              },
              "actorIsExternal": {
                "type": "boolean",
                "description": "Whether the actor is external to the account.",
                "example": false
              }
            }
          },
          "event": {
            "type": "object",
            "description": "Audit event for when a document is opened.",
            "properties": {
              "eventType": {
                "type": "string",
                "description": "The event type.",
                "example": "content.document.documentOpened"
              },
              "documentId": {
                "type": "string",
                "format": "uuid",
                "description": "The ID of the document opened.",
                "example": "110808fd-4553-4316-bccf-4f25ff59a532"
              },
              "product": {
                "type": "string",
                "description": "The product of the document.",
                "example": "lucidchart"
              },
              "documentOpenedMethod": {
                "type": "object",
                "description": "The method used to open the document.",
                "properties": {
                  "methodType": {
                    "type": "string",
                    "description": "The method used to open the document.",
                    "example": "InApp"
                  }
                }
              }
            }
          },
          "target": {
            "type": "array",
            "description": "A list of objects identifying the target of the audit event.",
            "items": {
              "type": "object",
              "properties": {
                "targetType": {
                  "type": "string",
                  "description": "The type of the target.",
                  "example": "userTarget"
                },
                "targetId": {
                  "type": "number",
                  "description": "Unique identifier of the target.",
                  "example": 100
                },
                "displayName": {
                  "type": "string",
                  "description": "The display name of the target.",
                  "example": "User Name"
                },
                "userEmail": {
                  "type": "string",
                  "format": "email",
                  "description": "The email of the target user.",
                  "example": "user@example.com"
                },
                "isExternal": {
                  "type": "boolean",
                  "description": "Whether the target is external to the organization.",
                  "example": false
                }
              }
            }
          },
          "flowId": {
            "type": "string",
            "nullable": true,
            "description": "A flow id identifier.",
            "example": "55ce2349da62cba"
          }
        }
      },
      "TeamType": {
        "type": "string",
        "enum": [
          "hidden",
          "closed",
          "open"
        ],
        "description": "The type of the team",
        "example": "open"
      },
      "CreateTeamBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The team's name. Max length of name is 80 characters.",
            "example": "Team Name"
          },
          "type": {
            "type": "string",
            "enum": [
              "hidden",
              "closed",
              "open"
            ],
            "description": "The type of the team",
            "example": "open"
          },
          "users": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Array of IDs of users to be on the team.",
            "example": [
              321,
              654,
              987
            ]
          }
        },
        "required": [
          "name",
          "type",
          "users"
        ]
      },
      "Team": {
        "type": "object",
        "description": "A standard representation of a team.",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique ID for the team.",
            "example": 123456789
          },
          "name": {
            "type": "string",
            "description": "The team's name.",
            "example": "Team Name"
          },
          "type": {
            "type": "string",
            "enum": [
              "hidden",
              "closed",
              "open"
            ],
            "description": "The type of the team",
            "example": "open"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the team was created.",
            "example": "2024-01-30T16:29:37Z"
          },
          "archived": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the team was archived (if it has been archived).",
            "nullable": true,
            "example": null
          }
        }
      },
      "AddUsersToTeamBody": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Array of IDs of users to add to the team.",
            "example": [
              321,
              654,
              987
            ]
          }
        },
        "required": [
          "users"
        ]
      },
      "RemoveUsersFromTeamBody": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Array of IDs of users to remove from the team.",
            "example": [
              321,
              654,
              987
            ]
          }
        },
        "required": [
          "users"
        ]
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://lucid.app/oauth2/authorize",
            "tokenUrl": "https://api.lucid.co/oauth2/token",
            "refreshUrl": "https://api.lucid.co/oauth2/token",
            "scopes": {
              "account.audit.logs": "View audit logs on your account.",
              "account.info": "View basic information about your account (e.g., account ID and account name) .",
              "account.user": "Create, view, edit, and delete users on your account.",
              "account.user:readonly": "View users on your account.",
              "account.user.transfercontent": "Transfer ownership of a user's resources to another user on your account.",
              "folder": "Create, view, edit, share, and delete your folders. Organize your folders and their contents.",
              "folder:readonly": "View any of your folders and list their contents.",
              "invitation.accept": "Accept document and folder share links.",
              "lucidchart.document.app": "View, edit, and manage any Lucidchart document selected for this third-party application. Create, view, edit, and manage any Lucidchart document within its app-specific folder.",
              "lucidchart.document.app.folder": "Create, view, edit, and manage any Lucidchart document within its app-specific folder.",
              "lucidchart.document.app.picker": "View, edit, and manage any Lucidchart document selected for this third-party application.",
              "lucidchart.document.app.picker:readonly": "View and download any Lucidchart document selected for this third-party application.",
              "lucidchart.document.app.picker.share.collaborator": "Create, view, edit, and delete collaborators and invitations of any Lucidchart document on your team or enterprise account selected for the third-party application.",
              "lucidchart.document.app.picker.share.collaborator:readonly": "View collaborators and invitations of any Lucidchart document on your team or enterprise account selected for the third-party application.",
              "lucidchart.document.app.picker.share.embed": "Create, view, edit, and delete embeds of any Lucidchart document on your team or enterprise account selected for the third-party application.",
              "lucidchart.document.app.picker.share.link": "Create, view, edit, and delete the third party application's share links of any Lucidchart document on your team or enterprise account selected for the third-party application.",
              "lucidchart.document.app.picker.share.link:readonly": "View the third party application's share links of any Lucidchart document on your team or enterprise account selected for the third-party application.",
              "lucidchart.document.content": "Create, view, edit, and delete any Lucidchart document on your account.",
              "lucidchart.document.content:readonly": "View and download any Lucidchart document on your account.",
              "lucidchart.document.content.share.collaborator": "Create, view, edit, and delete collaborators and invitations for any of your Lucidchart documents on your team or enterprise account.",
              "lucidchart.document.content.share.collaborator:readonly": "View collaborators and invitations for any of your Lucidchart documents on your team or enterprise account.",
              "lucidchart.document.content.share.embed": "Create, view, edit, and delete embeds for any of your Lucidchart documents on your team or enterprise account.",
              "lucidchart.document.content.share.link": "Create, view, edit, and delete the third party application's share links for any of your Lucidchart documents on your team or enterprise account.",
              "lucidchart.document.content.share.link:readonly": "View the third party application's share links for any of your Lucidchart documents on your team or enterprise account.",
              "lucidscale.document.app": "View, edit, and manage any Lucidscale model selected for this third-party application. Create, view, edit, and manage any Lucidscale model within its app-specific folder.",
              "lucidscale.document.app.folder": "Create, view, edit, and manage any Lucidscale model within its app-specific folder.",
              "lucidscale.document.app.picker": "View, edit, and manage any Lucidscale model selected for this third-party application.",
              "lucidscale.document.app.picker:readonly": "View and download any Lucidscale model selected for this third-party application.",
              "lucidscale.document.app.picker.share.collaborator": "Create, view, edit, and delete collaborators and invitations of any Lucidscale model on your team or enterprise account selected for the third-party application.",
              "lucidscale.document.app.picker.share.collaborator:readonly": "View collaborators and invitations of any Lucidscale model on your team or enterprise account selected for the third-party application.",
              "lucidscale.document.app.picker.share.embed": "Create, view, edit, and delete embeds of any Lucidscale model on your team or enterprise account selected for the third-party application.",
              "lucidscale.document.app.picker.share.link": "Create, view, edit, and delete the third party application's share links of any Lucidscale model on your team or enterprise account selected for the third-party application.",
              "lucidscale.document.app.picker.share.link:readonly": "View the third party application's share links of any Lucidscale model on your team or enterprise account selected for the third-party application.",
              "lucidscale.document.content": "Create, view, edit, and delete any Lucidscale model on your account.",
              "lucidscale.document.content:readonly": "View and download any Lucidscale model on your account.",
              "lucidscale.document.content.share.collaborator": "Create, view, edit, and delete collaborators and invitations for any of your Lucidscale models on your team or enterprise account.",
              "lucidscale.document.content.share.collaborator:readonly": "View collaborators and invitations for any of your Lucidscale models on your team or enterprise account.",
              "lucidscale.document.content.share.embed": "Create, view, edit, and delete embeds for any of your Lucidscale models on your team or enterprise account.",
              "lucidscale.document.content.share.link": "Create, view, edit, and delete the third party application's share links for any of your Lucidscale models on your team or enterprise account.",
              "lucidscale.document.content.share.link:readonly": "View the third party application's share links for any of your Lucidscale models on your team or enterprise account.",
              "lucidspark.document.app": "View, edit, and manage any Lucidspark board selected for this third-party application. Create, view, edit, and manage any Lucidspark board within its app-specific folder.",
              "lucidspark.document.app.folder": "Create, view, edit, and manage any Lucidspark board within its app-specific folder.",
              "lucidspark.document.app.picker": "View, edit, and manage any Lucidspark board selected for this third-party application.",
              "lucidspark.document.app.picker:readonly": "View and download any Lucidspark board selected for this third-party application.",
              "lucidspark.document.app.picker.share.collaborator": "Create, view, edit, and delete collaborators and invitations of any Lucidspark board on your team or enterprise account selected for the third-party application.",
              "lucidspark.document.app.picker.share.collaborator:readonly": "View collaborators and invitations of any Lucidspark board on your team or enterprise account selected for the third-party application.",
              "lucidspark.document.app.picker.share.embed": "Create, view, edit, and delete embeds of any Lucidspark board on your team or enterprise account selected for the third-party application.",
              "lucidspark.document.app.picker.share.link": "Create, view, edit, and delete the third party application's share links of any Lucidspark board on your team or enterprise account selected for the third-party application.",
              "lucidspark.document.app.picker.share.link:readonly": "View the third party application's share links of any Lucidspark board on your team or enterprise account selected for the third-party application.",
              "lucidspark.document.content": "Create, view, edit, and delete any Lucidspark board on your account.",
              "lucidspark.document.content:readonly": "View and download any Lucidspark board on your account.",
              "lucidspark.document.content.share.collaborator": "Create, view, edit, and delete collaborators and invitations for any of your Lucidspark boards on your team or enterprise account.",
              "lucidspark.document.content.share.collaborator:readonly": "View collaborators and invitations for any of your Lucidspark boards on your team or enterprise account.",
              "lucidspark.document.content.share.embed": "Create, view, edit, and delete embeds for any of your Lucidspark boards on your team or enterprise account.",
              "lucidspark.document.content.share.link": "Create, view, edit, and delete the third party application's share links for any of your Lucidspark boards on your team or enterprise account.",
              "lucidspark.document.content.share.link:readonly": "View the third party application's share links for any of your Lucidspark boards on your team or enterprise account.",
              "offline_access": "Continue to perform authorized actions when you’re not logged in (required to refresh tokens).",
              "user.profile": "Allow applications to view basic information about you (e.g., full name, username, and email).",
              "document.app": "View, edit, and manage any Lucidchart document selected for this third-party application. Create, view, edit, and manage any Lucidchart document within its app-specific folder.",
              "document.app.folder": "Create, view, edit, and manage any Lucidchart document within its app-specific folder.",
              "document.app.picker": "View, edit, and manage any Lucidchart document selected for this third-party application.",
              "document.app.picker:readonly": "View and download any Lucidchart document selected for this third-party application.",
              "document.content": "Create, view, edit, and delete any Lucidchart document on your account.",
              "document.content:readonly": "View and download any Lucidchart document on your account.",
              "teams": "Create, view, and edit, archive, and restore any teams on your account. Control which users belong to teams.",
              "teams:readonly": "View any teams on your account and list which users belong to them."
            }
          }
        }
      },
      "ApiKey": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "parameters": {
      "ApiVersion": {
        "in": "header",
        "name": "Lucid-Api-Version",
        "required": true,
        "schema": {
          "type": "string",
          "default": "1"
        },
        "description": "The API version used in the request.",
        "example": "1"
      },
      "RequestAs-Teams": {
        "in": "header",
        "name": "Lucid-Request-As",
        "required": false,
        "description": "If the requesting user is an account owner, team admin, or team manager with the required permissions and they make\nthe request with the value of “admin” as this header and include an admin scope, the request will be made using\ntheir admin permissions.\n",
        "schema": {
          "type": "string"
        },
        "example": "admin"
      },
      "RequestAs-Folders": {
        "in": "header",
        "name": "Lucid-Request-As",
        "required": true,
        "description": "If the requesting user is an account owner or folder admin with the required permissions and they make the request\nwith the value of “admin” as this header and include an admin scope, the request will be made using their admin\npermissions.\nAccount owners and document admins can access the admin version of folder search.\n",
        "schema": {
          "type": "string"
        },
        "example": "admin"
      },
      "RequestAs-AccountDocuments": {
        "in": "header",
        "name": "Lucid-Request-As",
        "required": true,
        "description": "If the requesting user is an account owner or document admin with the required permissions and they make the request\nwith the value of “admin” as this header and include an admin scope, the request will be made using their admin\npermissions.\n",
        "schema": {
          "type": "string"
        },
        "example": "admin"
      },
      "LegalHoldIdPath": {
        "in": "path",
        "name": "legalHoldId",
        "required": true,
        "description": "Unique ID of the legal hold.",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "DocumentShareLinkDocumentId": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "ID of the document."
      },
      "DocumentShareLinkShareLinkId": {
        "name": "shareLinkId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Id of the share link to retrieve information for."
      }
    }
  }
}